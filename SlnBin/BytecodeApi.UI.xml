<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BytecodeApi.UI</name>
    </assembly>
    <members>
        <member name="T:BytecodeApi.UI.Controls.MenuItemService">
            <summary>
            Helper class for the WPF <see cref="T:System.Windows.Controls.MenuItem" /> control that implements an icon that can be defined in XAML.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Controls.MenuItemService.ImageSourceProperty">
            <summary>
            Identifies the <see cref="T:BytecodeApi.UI.Controls.MenuItemService" />.ImageSource dependency property. This field is read-only.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Controls.MenuItemService.GetImageSource(System.Windows.DependencyObject)">
            <summary>
            Gets the image source of this <see cref="P:System.Windows.Controls.MenuItem.Icon" />.
            </summary>
            <param name="dependencyObject">The <see cref="T:System.Windows.Controls.MenuItem" /> to get the image source from.</param>
            <returns>
            The image source of this <see cref="P:System.Windows.Controls.MenuItem.Icon" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.MenuItemService.SetImageSource(System.Windows.DependencyObject,System.Object)">
            <summary>
            Gets the image source of this <see cref="P:System.Windows.Controls.MenuItem.Icon" />.
            </summary>
            <param name="dependencyObject">The <see cref="T:System.Windows.Controls.MenuItem" /> to assign the image source to.</param>
            <param name="value">The image source of this <see cref="P:System.Windows.Controls.MenuItem.Icon" />.</param>
        </member>
        <member name="T:BytecodeApi.UI.Controls.ContainerItemsControl">
            <summary>
            Represents an <see cref="T:System.Windows.Controls.ItemsControl" /> that applies the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" />, even if the item is its own container (e.g. a UserControl).
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ContainerItemsControl.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Overwrites the IsItemItsOwnContainer property by always returning <see langword="false" />. This allows the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> to be also used with user controls.
            </summary>
            <param name="item">The item to check.</param>
            <returns>
            Always returns <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Controls.NoInheritanceContainer">
            <summary>
            Represents an <see cref="T:BytecodeApi.UI.Controls.ObservableUserControl" /> that does not inherit style (<see cref="P:System.Windows.FrameworkElement.InheritanceBehavior" /> is set to <see cref="F:System.Windows.InheritanceBehavior.SkipToAppNext" />).
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Controls.NoInheritanceContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Controls.NoInheritanceContainer" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Controls.NoInheritanceContainer.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Controls.NoInheritanceContainer" /> class with the specified content.
            </summary>
            <param name="content">An <see cref="T:System.Object" /> representing the content of this <see cref="T:BytecodeApi.UI.Controls.NoInheritanceContainer" />.</param>
        </member>
        <member name="T:BytecodeApi.UI.Controls.TreeViewItemService">
            <summary>
            Helper class for the WPF <see cref="T:System.Windows.Controls.TreeView" /> control that checks whether a MouseOver event occurrs over an item directly. This is relevant, when MouseOver effects need to be implemented for a <see cref="T:System.Windows.Controls.TreeViewItem" /> excluding its children.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Controls.TreeViewItemService.IsMouseDirectlyOverItemProperty">
            <summary>
            Identifies the <see cref="T:BytecodeApi.UI.Controls.TreeViewItemService" />.IsMouseDirectlyOverItem dependency property. This field is read-only.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Controls.TreeViewItemService.GetIsMouseDirectlyOverItem(System.Windows.DependencyObject)">
            <summary>
            Returns <see langword="true" />, if the mouse is directly hovering a <see cref="T:System.Windows.Controls.TreeViewItem" /> and <see langword="false" />, if it is hovering a child or no <see cref="T:System.Windows.Controls.TreeViewItem" /> at all.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.Controls.TreeViewItem" /> object to check.</param>
            <returns>
            <see langword="true" />, if the mouse is directly hovering a <see cref="T:System.Windows.Controls.TreeViewItem" />;
            <see langword="false" />, if it is hovering a child or no <see cref="T:System.Windows.Controls.TreeViewItem" /> at all.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Controls.WatermarkAdorner">
            <summary>
            Represents an <see cref="T:System.Windows.Documents.Adorner" /> for watermark elements.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Controls.WatermarkAdorner.VisualChildrenCount">
            <summary>
            Gets the number of visual child elements within this element.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Controls.WatermarkAdorner.#ctor(System.Windows.UIElement,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Controls.WatermarkAdorner" /> class with the specified element and watermark.
            </summary>
            <param name="uiElement">The <see cref="T:System.Windows.UIElement" /> to apply the watermark to.</param>
            <param name="watermark">The <see cref="T:System.Object" /> that represents the watermark. This is typically a <see cref="T:System.Windows.Controls.TextBlock" /> element.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.WatermarkAdorner.GetVisualChild(System.Int32)">
            <summary>
            Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />, and returns a child at the specified index from a collection of child elements.
            </summary>
            <param name="index">The zero-based index of the requested child element in the collection.</param>
            <returns>
            The requested child element. This should not return <see langword="null" />;
            if the provided index is out of range, an exception is thrown.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.WatermarkAdorner.MeasureOverride(System.Windows.Size)">
            <summary>
            Implements any custom measuring behavior for the adorner.
            </summary>
            <param name="constraint">A size to constrain the adorner to.</param>
            <returns>
            A <see cref="T:System.Windows.Size" /> object representing the amount of layout space needed by the adorner.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.WatermarkAdorner.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement" /> derived class.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>
            The actual size used.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Controls.WatermarkService">
            <summary>
            Helper class to display watermark elements on top of <see cref="T:System.Windows.Controls.TextBox" />, <see cref="T:System.Windows.Controls.ComboBox" /> and <see cref="T:System.Windows.Controls.ItemsControl" /> elements.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Controls.WatermarkService.WatermarkProperty">
            <summary>
            Identifies the <see cref="T:BytecodeApi.UI.Controls.WatermarkService" />.Watermark dependency property. This field is read-only.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Controls.WatermarkService.GetWatermark(System.Windows.DependencyObject)">
            <summary>
            Gets the watermark of this <see cref="T:System.Windows.DependencyObject" />.
            </summary>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to get the watermark from.</param>
            <returns>
            The watermark of this <see cref="T:System.Windows.DependencyObject" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.WatermarkService.SetWatermark(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the watermark of this <see cref="T:System.Windows.DependencyObject" />.
            </summary>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to set the watermark of.</param>
            <param name="value">The <see cref="T:System.Object" /> that represents the watermark. This is typically a <see cref="T:System.Windows.Controls.TextBlock" /> element.</param>
        </member>
        <member name="T:BytecodeApi.UI.Controls.ObservableUserControl">
            <summary>
            Class that wraps a <see cref="T:System.Windows.Controls.UserControl" /> object, implementing the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface. Typically, properties of this class are set as a <see cref="T:System.Windows.DependencyProperty" /> on a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.Controls.ObservableUserControl.PropertyChanging">
            <summary>
            Occurs when a property value is changing and is typically used by a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.Controls.ObservableUserControl.PropertyChanged">
            <summary>
            Occurs when a property value has changed and is typically used by a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.Controls.ObservableUserControl.LoadedOnce">
            <summary>
            Occurs when the element is laid out, rendered, and ready for interaction. This event is fired only once.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Controls.ObservableUserControl" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.GetValue``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Returns the current effective value of a <see cref="T:System.Windows.DependencyProperty" /> on this instance of a <see cref="T:System.Windows.Controls.UserControl" />.
            The name of the dependency property must be related to the name of the property. Example: "Foo" and "FooProperty".
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => GetValue(() => Foo); <see langword="set" /> => SetValue(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Windows.DependencyProperty" />.</typeparam>
            <param name="dependencyProperty">The strongly typed lambda expression of the dependency property.</param>
            <returns>
            The current effective value of a <see cref="T:System.Windows.DependencyProperty" /> on this instance of a <see cref="T:System.Windows.Controls.UserControl" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.SetValue``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Sets the local value of a dependency property, specified by its dependency property identifier.
            The name of the dependency property must be related to the name of the property. Example: "Foo" and "FooProperty".
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => GetValue(() => Foo); <see langword="set" /> => SetValue(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Windows.DependencyProperty" />.</typeparam>
            <param name="dependencyProperty">The strongly typed lambda expression of the dependency property.</param>
            <param name="value">The new local value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.Dispatch(System.Action)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.Dispatch(System.Action,System.Windows.Threading.DispatcherPriority)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <param name="priority">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.Dispatch(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <param name="priority">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the action.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.Dispatch(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <param name="priority">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the action.</param>
            <param name="timeout">The minimum amount of time to wait for the operation to start.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.Dispatch``1(System.Func{``0})">
            <summary>
            Executes the specified <see cref="T:System.Func`1" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <typeparam name="T">The return type of <paramref name="callback" />.</typeparam>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <returns>
            The result of <paramref name="callback" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.Dispatch``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
            <summary>
            Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <typeparam name="T">The return type of <paramref name="callback" />.</typeparam>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <param name="priority">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
            <returns>
            The result of <paramref name="callback" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.Dispatch``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
            <summary>
            Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <typeparam name="T">The return type of <paramref name="callback" />.</typeparam>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <param name="priority">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the action.</param>
            <returns>
            The result of <paramref name="callback" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.Dispatch``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
            <summary>
            Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <typeparam name="T">The return type of <paramref name="callback" />.</typeparam>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <param name="priority">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the action.</param>
            <param name="timeout">The minimum amount of time to wait for the operation to start.</param>
            <returns>
            The result of <paramref name="callback" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Method that can be used by the <see langword="get" /> accessor of a property. Backing fields are managed automatically.
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => Get(() => Foo); <see langword="set" /> => Set(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <returns>
            The value of the property backing field. The default value is <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.Get``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Method that can be used by the <see langword="get" /> accessor of a property. Backing fields are managed automatically.
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => Get(() => Foo, 1); <see langword="set" /> => Set(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <param name="defaultValue">A default value. This parameter can be used as a property initializer.</param>
            <returns>
            The value of the property backing field. The default value is <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.Get``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Func{``0})">
            <summary>
            Method that can be used by the <see langword="get" /> accessor of a property. Backing fields are managed automatically.
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => Get(() => Foo, () => 1); <see langword="set" /> => Set(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <param name="defaultValue">A <see cref="T:System.Func`1" /> that retrieves a default value. This delegate can be used as a property initializer. <paramref name="defaultValue" /> is invoked, if the property is retrieved for the first time and is not set.</param>
            <returns>
            The value of the property backing field. The default value is <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Method that can be used by the <see langword="set" /> accessor of a property. Backing fields are managed automatically. This method raises the <see cref="E:BytecodeApi.UI.Controls.ObservableUserControl.PropertyChanging" /> event and the <see cref="E:BytecodeApi.UI.Controls.ObservableUserControl.PropertyChanged" /> event.
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => Get(() => Foo); <see langword="set" /> => Set(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.RaisePropertyChanging``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Controls.ObservableUserControl.PropertyChanging" /> event on any custom property. <see cref="M:BytecodeApi.UI.Controls.ObservableUserControl.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.UI.Controls.ObservableUserControl.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" /> do not necessarily need to be used in conjunction with this method. Likewise, this method is not required when using <see cref="M:BytecodeApi.UI.Controls.ObservableUserControl.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.UI.Controls.ObservableUserControl.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" />.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.RaisePropertyChanging(System.String)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Controls.ObservableUserControl.PropertyChanging" /> event on a property specified by a name.
            </summary>
            <param name="propertyName">A <see cref="T:System.String" /> specifying the name of the property. If <see langword="null" /> is provided, the <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" /> is used to automatically get the property name.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Controls.ObservableUserControl.PropertyChanged" /> event on any custom property. <see cref="M:BytecodeApi.UI.Controls.ObservableUserControl.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.UI.Controls.ObservableUserControl.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" /> do not necessarily need to be used in conjunction with this method. Likewise, this method is not required when using <see cref="M:BytecodeApi.UI.Controls.ObservableUserControl.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.UI.Controls.ObservableUserControl.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" />.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.RaisePropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Controls.ObservableUserControl.PropertyChanged" /> event on a property specified by a name.
            </summary>
            <param name="propertyName">A <see cref="T:System.String" /> specifying the name of the property. If <see langword="null" /> is provided, the <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" /> is used to automatically get the property name.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.OnPropertyChanging(System.ComponentModel.PropertyChangingEventArgs)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Controls.ObservableUserControl.PropertyChanging" /> event.
            </summary>
            <param name="e">The event data for the <see cref="T:System.ComponentModel.PropertyChangingEventArgs" /> event.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableUserControl.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Controls.ObservableUserControl.PropertyChanged" /> event.
            </summary>
            <param name="e">The event data for the <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> event.</param>
        </member>
        <member name="T:BytecodeApi.UI.Controls.ObservableWindow">
            <summary>
            Class that wraps a <see cref="T:System.Windows.Window" /> object, implementing the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface. Typically, properties of this class are set as a <see cref="T:System.Windows.DependencyProperty" /> on a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.Controls.ObservableWindow.PropertyChanging">
            <summary>
            Occurs when a property value is changing and is typically used by a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.Controls.ObservableWindow.PropertyChanged">
            <summary>
            Occurs when a property value has changed and is typically used by a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.Controls.ObservableWindow.LoadedOnce">
            <summary>
            Occurs when the element is laid out, rendered, and ready for interaction. This event is fired only once.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Controls.ObservableWindow" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.GetValue``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Returns the current effective value of a <see cref="T:System.Windows.DependencyProperty" /> on this instance of a <see cref="T:System.Windows.Window" />.
            The name of the dependency property must be related to the name of the property. Example: "Foo" and "FooProperty".
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => GetValue(() => Foo); <see langword="set" /> => SetValue(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Windows.DependencyProperty" />.</typeparam>
            <param name="dependencyProperty">The strongly typed lambda expression of the dependency property.</param>
            <returns>
            The current effective value of a <see cref="T:System.Windows.DependencyProperty" /> on this instance of a <see cref="T:System.Windows.Window" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.SetValue``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Sets the local value of a dependency property, specified by its dependency property identifier.
            The name of the dependency property must be related to the name of the property. Example: "Foo" and "FooProperty".
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => GetValue(() => Foo); <see langword="set" /> => SetValue(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Windows.DependencyProperty" />.</typeparam>
            <param name="dependencyProperty">The strongly typed lambda expression of the dependency property.</param>
            <param name="value">The new local value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.Dispatch(System.Action)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.Dispatch(System.Action,System.Windows.Threading.DispatcherPriority)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <param name="priority">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.Dispatch(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <param name="priority">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the action.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.Dispatch(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <param name="priority">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the action.</param>
            <param name="timeout">The minimum amount of time to wait for the operation to start.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.Dispatch``1(System.Func{``0})">
            <summary>
            Executes the specified <see cref="T:System.Func`1" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <typeparam name="T">The return type of <paramref name="callback" />.</typeparam>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <returns>
            The result of <paramref name="callback" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.Dispatch``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
            <summary>
            Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <typeparam name="T">The return type of <paramref name="callback" />.</typeparam>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <param name="priority">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
            <returns>
            The result of <paramref name="callback" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.Dispatch``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
            <summary>
            Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <typeparam name="T">The return type of <paramref name="callback" />.</typeparam>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <param name="priority">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the action.</param>
            <returns>
            The result of <paramref name="callback" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.Dispatch``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
            <summary>
            Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <typeparam name="T">The return type of <paramref name="callback" />.</typeparam>
            <param name="callback">A delegate to invoke through the dispatcher.</param>
            <param name="priority">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
            <param name="cancellationToken">An object that indicates whether to cancel the action.</param>
            <param name="timeout">The minimum amount of time to wait for the operation to start.</param>
            <returns>
            The result of <paramref name="callback" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Method that can be used by the <see langword="get" /> accessor of a property. Backing fields are managed automatically.
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => Get(() => Foo); <see langword="set" /> => Set(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <returns>
            The value of the property backing field. The default value is <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.Get``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Method that can be used by the <see langword="get" /> accessor of a property. Backing fields are managed automatically.
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => Get(() => Foo, 1); <see langword="set" /> => Set(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <param name="defaultValue">A default value. This parameter can be used as a property initializer.</param>
            <returns>
            The value of the property backing field. The default value is <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.Get``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Func{``0})">
            <summary>
            Method that can be used by the <see langword="get" /> accessor of a property. Backing fields are managed automatically.
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => Get(() => Foo, () => 1); <see langword="set" /> => Set(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <param name="defaultValue">A <see cref="T:System.Func`1" /> that retrieves a default value. This delegate can be used as a property initializer. <paramref name="defaultValue" /> is invoked, if the property is retrieved for the first time and is not set.</param>
            <returns>
            The value of the property backing field. The default value is <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Method that can be used by the <see langword="set" /> accessor of a property. Backing fields are managed automatically. This method raises the <see cref="E:BytecodeApi.UI.Controls.ObservableWindow.PropertyChanging" /> event and the <see cref="E:BytecodeApi.UI.Controls.ObservableWindow.PropertyChanged" /> event.
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => Get(() => Foo); <see langword="set" /> => Set(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.RaisePropertyChanging``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Controls.ObservableWindow.PropertyChanging" /> event on any custom property. <see cref="M:BytecodeApi.UI.Controls.ObservableWindow.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.UI.Controls.ObservableWindow.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" /> do not necessarily need to be used in conjunction with this method. Likewise, this method is not required when using <see cref="M:BytecodeApi.UI.Controls.ObservableWindow.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.UI.Controls.ObservableWindow.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" />.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.RaisePropertyChanging(System.String)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Controls.ObservableWindow.PropertyChanging" /> event on a property specified by a name.
            </summary>
            <param name="propertyName">A <see cref="T:System.String" /> specifying the name of the property. If <see langword="null" /> is provided, the <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" /> is used to automatically get the property name.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Controls.ObservableWindow.PropertyChanged" /> event on any custom property. <see cref="M:BytecodeApi.UI.Controls.ObservableWindow.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.UI.Controls.ObservableWindow.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" /> do not necessarily need to be used in conjunction with this method. Likewise, this method is not required when using <see cref="M:BytecodeApi.UI.Controls.ObservableWindow.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.UI.Controls.ObservableWindow.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" />.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.RaisePropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Controls.ObservableWindow.PropertyChanged" /> event on a property specified by a name.
            </summary>
            <param name="propertyName">A <see cref="T:System.String" /> specifying the name of the property. If <see langword="null" /> is provided, the <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" /> is used to automatically get the property name.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.OnPropertyChanging(System.ComponentModel.PropertyChangingEventArgs)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Controls.ObservableWindow.PropertyChanging" /> event.
            </summary>
            <param name="e">The event data for the <see cref="T:System.ComponentModel.PropertyChangingEventArgs" /> event.</param>
        </member>
        <member name="M:BytecodeApi.UI.Controls.ObservableWindow.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Controls.ObservableWindow.PropertyChanged" /> event.
            </summary>
            <param name="e">The event data for the <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> event.</param>
        </member>
        <member name="T:BytecodeApi.UI.Converters.TypeConverterMethod">
            <summary>
            Specifies the method that is used to convert the <see cref="T:System.Type" /> of <see cref="T:System.Object" /> values.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.TypeConverterMethod.TypeEqual">
            <summary>
            Returns <see langword="true" />, if the <see cref="T:System.Type" /> of value equals parameter; otherwise, <see langword="false" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.TypeConverterMethod.IsAssignableFrom">
            <summary>
            Returns <see langword="true" />, if parameter <see cref="T:System.Type" /> is assignable from the <see cref="T:System.Type" /> of the value; otherwise, <see langword="false" />.
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Converters.TypeConverter">
            <summary>
            Represents the converter that converts the <see cref="T:System.Type" /> of <see cref="T:System.Object" /> values. The <see cref="M:BytecodeApi.UI.Converters.TypeConverter.Convert(System.Object,System.Type)" /> method returns an <see cref="T:System.Object" /> based on the specified <see cref="T:BytecodeApi.UI.Converters.TypeConverterMethod" /> and <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameters.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.TypeConverter.Method">
            <summary>
            Specifies the method that is used to convert the <see cref="T:System.Type" /> of the <see cref="T:System.Object" /> value.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.TypeConverter.Result">
            <summary>
            Specifies how the <see cref="T:System.Boolean" /> result is converted before the <see cref="M:BytecodeApi.UI.Converters.TypeConverter.Convert(System.Object,System.Type)" /> method returns.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.TypeConverter.#ctor(BytecodeApi.UI.Converters.TypeConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.TypeConverter" /> class with the specified conversion method.
            </summary>
            <param name="method">The method that is used to convert the <see cref="T:System.Type" /> of the <see cref="T:System.Object" /> value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.TypeConverter.#ctor(BytecodeApi.UI.Converters.TypeConverterMethod,BytecodeApi.UI.Converters.BooleanConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.TypeConverter" /> class with the specified conversion method and result transformation.
            </summary>
            <param name="method">The method that is used to convert the <see cref="T:System.Type" /> of the <see cref="T:System.Object" /> value.</param>
            <param name="result">Specifies how the <see cref="T:System.Boolean" /> result is converted before the <see cref="M:BytecodeApi.UI.Converters.TypeConverter.Convert(System.Object,System.Type)" /> method returns.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.TypeConverter.Convert(System.Object,System.Type)">
            <summary>
            Converts the <see cref="T:System.Type" /> of the <see cref="T:System.Object" /> value based on the specified <see cref="T:BytecodeApi.UI.Converters.TypeConverterMethod" /> and <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameters.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> value, of which to convert its <see cref="T:System.Type" />.</param>
            <param name="parameter">A parameter <see cref="T:System.Type" /> that specifies the parameter used in the <see cref="T:BytecodeApi.UI.Converters.TypeConverterMethod" /> methods.</param>
            <returns>
            An <see cref="T:System.Object" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.ByteSizeConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.UInt64" />? values (or values that are convertible to <see cref="T:System.UInt64" />) representing a byte size to an equivalent <see cref="T:System.String" /> representation. The <see cref="M:BytecodeApi.UI.Converters.ByteSizeConverter.Convert(System.Object)" /> method returns a <see cref="T:System.String" /> based on the specified parameters using the <see cref="M:BytecodeApi.Mathematics.ByteSize.Format" /> method.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.ByteSizeConverter.Unit">
            <summary>
            Specifies the <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> that is used to format the result <see cref="T:System.String" />, or <see langword="null" /> to use the <see cref="P:BytecodeApi.Mathematics.ByteSize.ClosestUnit" /> property.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.ByteSizeConverter.Decimals">
            <summary>
            Specifies the number of decimals to round the result to. The default value is 2.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.ByteSizeConverter.PadDecimals">
            <summary>
            <see langword="true" /> to pad zero decimal places with a '0' character.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.ByteSizeConverter.ThousandsSeparator">
            <summary>
            <see langword="true" /> to use a thousands separator.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.ByteSizeConverter.RoundUp">
            <summary>
            <see langword="true" /> to always round up. The <see cref="P:BytecodeApi.UI.Converters.ByteSizeConverter.Decimals" /> property should typically be 0, if this option is used.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.ByteSizeConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.ByteSizeConverter" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.ByteSizeConverter.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.ByteSizeConverter" /> class with the specified parameters.
            </summary>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.ByteSizeConverter.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.ByteSizeConverter" /> class with the specified parameters.
            </summary>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <param name="padDecimals"><see langword="true" /> to pad zero decimal places with a '0' character.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.ByteSizeConverter.#ctor(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.ByteSizeConverter" /> class with the specified parameters.
            </summary>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <param name="padDecimals"><see langword="true" /> to pad zero decimal places with a '0' character.</param>
            <param name="thousandsSeparator"><see langword="true" /> to use a thousands separator.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.ByteSizeConverter.#ctor(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.ByteSizeConverter" /> class with the specified parameters.
            </summary>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <param name="padDecimals"><see langword="true" /> to pad zero decimal places with a '0' character.</param>
            <param name="thousandsSeparator"><see langword="true" /> to use a thousands separator.</param>
            <param name="roundUp"><see langword="true" /> to always round up. The <paramref name="decimals" /> parameter should typically be 0, if this option is used.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.ByteSizeConverter.#ctor(System.Nullable{BytecodeApi.Mathematics.ByteSizeUnit})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.ByteSizeConverter" /> class with the specified parameters.
            </summary>
            <param name="unit">The <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> that is used to format the result <see cref="T:System.String" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.ByteSizeConverter.#ctor(System.Nullable{BytecodeApi.Mathematics.ByteSizeUnit},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.ByteSizeConverter" /> class with the specified parameters.
            </summary>
            <param name="unit">The <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> that is used to format the result <see cref="T:System.String" />.</param>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.ByteSizeConverter.#ctor(System.Nullable{BytecodeApi.Mathematics.ByteSizeUnit},System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.ByteSizeConverter" /> class with the specified parameters.
            </summary>
            <param name="unit">The <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> that is used to format the result <see cref="T:System.String" />.</param>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <param name="padDecimals"><see langword="true" /> to pad zero decimal places with a '0' character.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.ByteSizeConverter.#ctor(System.Nullable{BytecodeApi.Mathematics.ByteSizeUnit},System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.ByteSizeConverter" /> class with the specified parameters.
            </summary>
            <param name="unit">The <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> that is used to format the result <see cref="T:System.String" />.</param>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <param name="padDecimals"><see langword="true" /> to pad zero decimal places with a '0' character.</param>
            <param name="thousandsSeparator"><see langword="true" /> to use a thousands separator.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.ByteSizeConverter.#ctor(System.Nullable{BytecodeApi.Mathematics.ByteSizeUnit},System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.ByteSizeConverter" /> class with the specified parameters.
            </summary>
            <param name="unit">The <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> that is used to format the result <see cref="T:System.String" />.</param>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <param name="padDecimals"><see langword="true" /> to pad zero decimal places with a '0' character.</param>
            <param name="thousandsSeparator"><see langword="true" /> to use a thousands separator.</param>
            <param name="roundUp"><see langword="true" /> to always round up. The <paramref name="decimals" /> parameter should typically be 0, if this option is used.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.ByteSizeConverter.Convert(System.Object)">
            <summary>
            Converts the <see cref="T:System.Object" /> that is convertible to an <see cref="T:System.UInt64" />? value based on the specified parameters.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> that is convertible to an <see cref="T:System.UInt64" />? value to convert.</param>
            <returns>
            A <see cref="T:System.String" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.BooleanMathConverter">
            <summary>
            Represents the converter that performs boolean calculations on the value and parameter. The <see cref="M:BytecodeApi.UI.Converters.BooleanMathConverter.Convert(System.Nullable{System.Boolean},System.Nullable{System.Boolean})" /> method returns a <see cref="T:System.Boolean" /> value based on the specified <see cref="T:BytecodeApi.UI.Converters.BooleanMathConverterMethod" /> parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.BooleanMathConverter.Method">
            <summary>
            Specifies the method that is used to perform boolean calculations on the value and parameter.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.BooleanMathConverter.#ctor(BytecodeApi.UI.Converters.BooleanMathConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.BooleanMathConverterMethod" /> class with the specified conversion method.
            </summary>
            <param name="method">The method that is used to perform boolean calculations on the value and parameter.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.BooleanMathConverter.Convert(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Performs a boolean calculation on the value and parameter based on the specified <see cref="T:BytecodeApi.UI.Converters.BooleanMathConverterMethod" /> parameter.
            </summary>
            <param name="value">The first <see cref="T:System.Boolean" />? value to use in the calculation.</param>
            <param name="parameter">The second <see cref="T:System.Boolean" />? value to use in the calculation.</param>
            <returns>
            A <see cref="T:System.Boolean" /> value with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.BooleanMathConverterMethod">
            <summary>
            Specifies the method that is used to perform boolean calculations on the value and parameter.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.BooleanMathConverterMethod.And">
            <summary>
            Performs a boolean and operation on the value and parameter:
            <para>value &amp;&amp; parameter</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.BooleanMathConverterMethod.Or">
            <summary>
            Performs a boolean or operation on the value and parameter:
            <para>value || parameter</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.BooleanMathConverterMethod.Xor">
            <summary>
            Performs a boolean xor operation on the value and parameter:
            <para>value ^ parameter</para>
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Converters.VersionConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.Version" /> values. The <see cref="M:BytecodeApi.UI.Converters.VersionConverter.Convert(System.Version)" /> method returns a <see cref="T:System.String" /> based on the specified <see cref="P:BytecodeApi.UI.Converters.VersionConverter.FieldCount" /> parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.VersionConverter.FieldCount">
            <summary>
            Specifies the number of components to return from the given <see cref="T:System.Version" />. The value ranges from 0 to 4.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.VersionConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.VersionConverter" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.VersionConverter.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.VersionConverter" /> class with the specified conversion field count.
            </summary>
            <param name="fieldCount">Specifies the number of components to return from the given <see cref="T:System.Version" />. The value ranges from 0 to 4.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.VersionConverter.Convert(System.Version)">
            <summary>
            Converts the <see cref="T:System.Version" /> value based the specified <see cref="P:BytecodeApi.UI.Converters.VersionConverter.FieldCount" /> parameter.
            </summary>
            <param name="value">The <see cref="T:System.Version" /> value to convert.</param>
            <returns>
            A <see cref="T:System.String" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.RangeConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.IComparable" /> values based on whether they lie in a specific range. The <see cref="M:BytecodeApi.UI.Converters.RangeConverter.Convert(System.IComparable)" /> method returns an <see cref="T:System.Object" /> based on the specified min/max parameters and the <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.RangeConverter.Min">
            <summary>
            Specifies the minimum value of the range.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.RangeConverter.Max">
            <summary>
            Specifies the maximum value of the range.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.RangeConverter.IsMinExclusive">
            <summary>
            Specifies whether the minimum value is inclusive or exclusive.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.RangeConverter.IsMaxExclusive">
            <summary>
            Specifies whether the maximum value is inclusive or exclusive.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.RangeConverter.Result">
            <summary>
            Specifies how the <see cref="T:System.Boolean" /> result is converted before the <see cref="M:BytecodeApi.UI.Converters.RangeConverter.Convert(System.IComparable)" /> method returns.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.RangeConverter.#ctor(System.IComparable,System.IComparable)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.RangeConverter" /> class with the specified range. By default, <paramref name="min" /> and <paramref name="max" /> are inclusive.
            </summary>
            <param name="min">The minimum value of the range.</param>
            <param name="max">The maximum value of the range.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.RangeConverter.#ctor(System.IComparable,System.IComparable,BytecodeApi.UI.Converters.BooleanConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.RangeConverter" /> class with the specified range and result transformation. By default, <paramref name="min" /> and <paramref name="max" /> are inclusive.
            </summary>
            <param name="min">The minimum value of the range.</param>
            <param name="max">The maximum value of the range.</param>
            <param name="result">Specifies how the <see cref="T:System.Boolean" /> result is converted before the <see cref="M:BytecodeApi.UI.Converters.RangeConverter.Convert(System.IComparable)" /> method returns.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.RangeConverter.Convert(System.IComparable)">
            <summary>
            Converts the <see cref="T:System.IComparable" /> value based on whether they lie in the range of the specified min/max parameters and the <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameter.
            </summary>
            <param name="value">The <see cref="T:System.IComparable" /> value to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.MathConverterMethod">
            <summary>
            Specifies the method that is used to perform mathematical calculations on the value and parameter.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.MathConverterMethod.Add">
            <summary>
            Adds the value and parameter:
            <para>value + parameter</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.MathConverterMethod.Subtract">
            <summary>
            Subtracts the parameter from value:
            <para>value - parameter</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.MathConverterMethod.Multiply">
            <summary>
            Multiplies the value and parameter:
            <para>value * parameter</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.MathConverterMethod.Divide">
            <summary>
            Divides the value by parameter:
            <para>value / parameter</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.MathConverterMethod.Modulo">
            <summary>
            Divides the value by parameter and returns the remainder:
            <para>value % parameter</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.MathConverterMethod.And">
            <summary>
            Performs a binary and operation on the value and parameter:
            <para>value &amp; parameter</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.MathConverterMethod.Or">
            <summary>
            Performs a binary or operation on the value and parameter:
            <para>value | parameter</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.MathConverterMethod.Xor">
            <summary>
            Performs a binary xor operation on the value and parameter:
            <para>value ^ parameter</para>
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Converters.MathConverter">
            <summary>
            Represents the converter that performs mathematical calculations on numeric value and parameter types. The <see cref="M:BytecodeApi.UI.Converters.MathConverter.Convert(System.Object,System.Object)" /> method returns a numeric value based on the specified <see cref="T:BytecodeApi.UI.Converters.MathConverterMethod" /> parameter and the types of the value and parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.MathConverter.Method">
            <summary>
            Specifies the method that is used to perform mathematical calculations on the value and parameter.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.MathConverter.#ctor(BytecodeApi.UI.Converters.MathConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.MathConverterMethod" /> class with the specified conversion method.
            </summary>
            <param name="method">The method that is used to perform mathematical calculations on the value and parameter.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.MathConverter.Convert(System.Object,System.Object)">
            <summary>
            Performs a mathematical calculation on the value and parameter based on the specified <see cref="T:BytecodeApi.UI.Converters.MathConverterMethod" /> parameter. Both value and parameter must be a numeric type (except <see cref="T:System.Int64" /> and <see cref="T:System.UInt64" />).
            </summary>
            <param name="value">The first numeric value to use in the calculation.</param>
            <param name="parameter">The second numeric value to use in the calculation.</param>
            <returns>
            A numeric value with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.IfConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.Boolean" />? values. The <see cref="M:BytecodeApi.UI.Converters.IfConverter.Convert(System.Nullable{System.Boolean})" /> method returns <see cref="P:BytecodeApi.UI.Converters.IfConverter.IfTrue" /> or <see cref="P:BytecodeApi.UI.Converters.IfConverter.IfFalse" /> based on whether the <see cref="T:System.Boolean" />? value is <see langword="true" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.IfConverter.IfTrue">
            <summary>
            The <see cref="T:System.Object" /> that is returned, if the <see cref="T:System.Boolean" />? value is <see langword="true" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.IfConverter.IfFalse">
            <summary>
            The <see cref="T:System.Object" /> that is returned, if the <see cref="T:System.Boolean" />? value is <see langword="false" /> or <see langword="null" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.IfConverter.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.IfConverter" /> class with the specified return objects.
            </summary>
            <param name="ifTrue">The <see cref="T:System.Object" /> that is returned, if the <see cref="T:System.Boolean" />? value is <see langword="true" />.</param>
            <param name="ifFalse">The <see cref="T:System.Object" /> that is returned, if the <see cref="T:System.Boolean" />? value is <see langword="false" /> or <see langword="null" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.IfConverter.Convert(System.Nullable{System.Boolean})">
            <summary>
            Converts the <see cref="T:System.Boolean" />? value and returns <see cref="P:BytecodeApi.UI.Converters.IfConverter.IfTrue" /> or <see cref="P:BytecodeApi.UI.Converters.IfConverter.IfFalse" /> based on whether the <see cref="T:System.Boolean" />? value is <see langword="true" />.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" />? value to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.IEnumerableAnyConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.Collections.IEnumerable" /> values based on <see cref="T:System.Collections.IEnumerable" /> emptiness. The <see cref="M:BytecodeApi.UI.Converters.IEnumerableAnyConverter.Convert(System.Collections.IEnumerable)" /> method returns an <see cref="T:System.Object" /> based on the specified <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.IEnumerableAnyConverter.Result">
            <summary>
            Specifies how the <see cref="T:System.Boolean" /> result is converted before the <see cref="M:BytecodeApi.UI.Converters.IEnumerableAnyConverter.Convert(System.Collections.IEnumerable)" /> method returns.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.IEnumerableAnyConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.IEnumerableAnyConverter" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.IEnumerableAnyConverter.#ctor(BytecodeApi.UI.Converters.BooleanConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.IEnumerableAnyConverter" /> class with the specified result transformation.
            </summary>
            <param name="result">Specifies how the <see cref="T:System.Boolean" /> result is converted before the <see cref="M:BytecodeApi.UI.Converters.IEnumerableAnyConverter.Convert(System.Collections.IEnumerable)" /> method returns.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.IEnumerableAnyConverter.Convert(System.Collections.IEnumerable)">
            <summary>
            Converts the <see cref="T:System.Collections.IEnumerable" /> value based on <see cref="T:System.Collections.IEnumerable" /> emptiness and the specified <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameter.
            </summary>
            <param name="value">The <see cref="T:System.Collections.IEnumerable" /> value to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.ImageSourceConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.Drawing.Image" /> or <see cref="T:System.Drawing.Icon" /> values to an image source. The <see cref="M:BytecodeApi.UI.Converters.ImageSourceConverter.Convert(System.Object)" /> method returns an <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> created from the specified value. The value must be an <see cref="T:System.Drawing.Image" /> or an <see cref="T:System.Drawing.Icon" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.ImageSourceConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.ImageSourceConverter" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.ImageSourceConverter.Convert(System.Object)">
            <summary>
            Converts the <see cref="T:System.Drawing.Image" /> or <see cref="T:System.Drawing.Icon" /> value to an image source.
            </summary>
            <param name="value">The <see cref="T:System.Drawing.Image" /> or <see cref="T:System.Drawing.Icon" /> value to convert.</param>
            <returns>
            A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.IEnumerableConverterMethod">
            <summary>
            Specifies the method that is used to convert <see cref="T:System.Collections.IEnumerable" /> values.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.IEnumerableConverterMethod.First">
            <summary>
            Returns the first element in the <see cref="T:System.Collections.IEnumerable" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.IEnumerableConverterMethod.FirstOrDefault">
            <summary>
            Returns the first element in the <see cref="T:System.Collections.IEnumerable" /> value, or a default value if the sequence contains no elements.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.IEnumerableConverterMethod.Last">
            <summary>
            Returns the last element in the <see cref="T:System.Collections.IEnumerable" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.IEnumerableConverterMethod.LastOrDefault">
            <summary>
            Returns the last element in the <see cref="T:System.Collections.IEnumerable" /> value, or a default value if the sequence contains no elements.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.IEnumerableConverterMethod.ElementAt">
            <summary>
            Returns the element in the <see cref="T:System.Collections.IEnumerable" /> value at the index as specified in the <see cref="T:System.Int32" /> parameter.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.IEnumerableConverterMethod.ElementAtOrDefault">
            <summary>
            Returns the element in the <see cref="T:System.Collections.IEnumerable" /> value at the index as specified in the <see cref="T:System.Int32" /> parameter or a default value if the index is out of range.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.IEnumerableConverterMethod.Count">
            <summary>
            Returns the number of elements in the <see cref="T:System.Collections.IEnumerable" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.IEnumerableConverterMethod.Skip">
            <summary>
            Bypasses a number of elements in the <see cref="T:System.Collections.IEnumerable" /> value as specified in the <see cref="T:System.Int32" /> parameter and then returns the remaining elements.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.IEnumerableConverterMethod.Take">
            <summary>
            Returns a number of contiguous elements as specified in the <see cref="T:System.Int32" /> parameter from the start of the <see cref="T:System.Collections.IEnumerable" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.IEnumerableConverterMethod.JoinStrings">
            <summary>
            Returns a <see cref="T:System.String" /> from the <see cref="T:System.Collections.IEnumerable" /> value of objects. All objects in the <see cref="T:System.Collections.IEnumerable" /> value are converted to <see cref="T:System.String" /> by calling <see cref="M:System.Object.ToString" />. Then, the resulting strings are concatenated.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.IEnumerableConverterMethod.JoinStringsComma">
            <summary>
            Returns a <see cref="T:System.String" /> from the <see cref="T:System.Collections.IEnumerable" /> value of objects. All objects in the <see cref="T:System.Collections.IEnumerable" /> value are converted to <see cref="T:System.String" /> by calling <see cref="M:System.Object.ToString" />. Then, the resulting strings are concatenated using ", " as separator.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.IEnumerableConverterMethod.AsMultilineString">
            <summary>
            Returns a multiline <see cref="T:System.String" /> from the <see cref="T:System.Collections.IEnumerable" /> collection of objects, by concatenating all values with a CRLF. All objects in the <see cref="T:System.Collections.IEnumerable" /> value are converted to <see cref="T:System.String" /> by calling <see cref="M:System.Object.ToString" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.IEnumerableConverterMethod.BooleansToIndeterminate">
            <summary>
            Returns <see langword="true" />, if all values from the <see cref="T:System.Collections.IEnumerable" /> value are equal to <see langword="true" />;
            <see langword="false" />, if all values are equal to <see langword="false" /> or the <see cref="T:System.Collections.IEnumerable" /> has no elements;
            otherwise, <see langword="null" />.
            The value must be a collection of <see cref="T:System.Boolean" /> or <see cref="T:System.Boolean" />? values.
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Converters.IEnumerableConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.Collections.IEnumerable" /> values. The <see cref="M:BytecodeApi.UI.Converters.IEnumerableConverter.Convert(System.Collections.IEnumerable,System.Object)" /> method returns an <see cref="T:System.Object" /> based on the specified <see cref="T:BytecodeApi.UI.Converters.IEnumerableConverterMethod" /> parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.IEnumerableConverter.Method">
            <summary>
            Specifies the method that is used to convert the <see cref="T:System.Collections.IEnumerable" /> value.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.IEnumerableConverter.#ctor(BytecodeApi.UI.Converters.IEnumerableConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.IEnumerableConverter" /> class with the specified conversion method.
            </summary>
            <param name="method">The method that is used to convert the <see cref="T:System.Collections.IEnumerable" /> value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.IEnumerableConverter.Convert(System.Collections.IEnumerable,System.Object)">
            <summary>
            Converts the <see cref="T:System.Collections.IEnumerable" /> value based the specified <see cref="T:BytecodeApi.UI.Converters.IEnumerableConverterMethod" /> parameter.
            </summary>
            <param name="value">The <see cref="T:System.Collections.IEnumerable" /> value to convert.</param>
            <param name="parameter">A parameter <see cref="T:System.Object" /> that specifies the parameter used in some of the <see cref="T:BytecodeApi.UI.Converters.IEnumerableConverterMethod" /> methods.</param>
            <returns>
            An <see cref="T:System.Object" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.CoalesceConverter">
            <summary>
            Represents the converter that converts objects based on whether the value is <see langword="null" /> and returns the parameter instead.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.CoalesceConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.CoalesceConverter" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.CoalesceConverter.Convert(System.Object,System.Object)">
            <summary>
            Converts the <see cref="T:System.Object" /> value based on whether the value is <see langword="null" /> and returns the parameter instead.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> value to convert.</param>
            <param name="parameter">The <see cref="T:System.Object" /> that is returned, if <paramref name="value" /> is <see langword="null" />.</param>
            <returns>
            An <see cref="T:System.Object" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.StringConverterMethod">
            <summary>
            Specifies the method that is used to convert <see cref="T:System.String" /> values.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.Concat">
            <summary>
            Concatenates the value and parameter and returns the combined <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.Trim">
            <summary>
            Removes all leading and trailing white-space characters from the <see cref="T:System.String" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.TrimStart">
            <summary>
            Removes all leading white-space characters from the <see cref="T:System.String" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.TrimStartString">
            <summary>
            Removes all leading occurrences of the parameter <see cref="T:System.String" /> from the <see cref="T:System.String" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.TrimStartStringIgnoreCase">
            <summary>
            Removes all leading occurrences of the parameter <see cref="T:System.String" /> from the <see cref="T:System.String" /> value, ignoring character casing.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.TrimEnd">
            <summary>
            Removes all trailing white-space characters from the <see cref="T:System.String" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.TrimEndString">
            <summary>
            Removes all trailing occurrences of the parameter <see cref="T:System.String" /> from the <see cref="T:System.String" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.TrimEndStringIgnoreCase">
            <summary>
            Removes all trailing occurrences of the parameter <see cref="T:System.String" /> from the <see cref="T:System.String" /> value, ignoring character casing.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.ToLower">
            <summary>
            Returns the <see cref="T:System.String" /> value in its lowercase representation.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.ToUpper">
            <summary>
            Returns the <see cref="T:System.String" /> value in its uppercase representation.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.ToCamelCase">
            <summary>
            Returns the <see cref="T:System.String" /> value in its camel case representation using the <see cref="F:BytecodeApi.StringCasing.CamelCase" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.ToLowerSnakeCase">
            <summary>
            Returns the <see cref="T:System.String" /> value in its lower snake case representation using the <see cref="F:BytecodeApi.StringCasing.LowerSnakeCase" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.ToUpperSnakeCase">
            <summary>
            Returns the <see cref="T:System.String" /> value in its upper snake case representation using the <see cref="F:BytecodeApi.StringCasing.UpperSnakeCase" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.ToLowerKebabCase">
            <summary>
            Returns the <see cref="T:System.String" /> value in its lower kebab case representation using the <see cref="F:BytecodeApi.StringCasing.LowerKebabCase" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.ToUpperKebabCase">
            <summary>
            Returns the <see cref="T:System.String" /> value in its upper kebab case representation using the <see cref="F:BytecodeApi.StringCasing.UpperKebabCase" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.Substring">
            <summary>
            Returns a substring from the <see cref="T:System.String" /> value. The substring starts at a specified character position in the parameter and continues to the end of the string.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.Left">
            <summary>
            Returns a <see cref="T:System.String" /> containing a specified number of characters from the left side of the <see cref="T:System.String" /> value. If the <see cref="T:System.String" /> is longer than the specified length, the <see cref="T:System.String" /> is truncated by the length parameter, otherwise, the original <see cref="T:System.String" /> is returned.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.Right">
            <summary>
            Returns a <see cref="T:System.String" /> containing a specified number of characters from the right side of the <see cref="T:System.String" /> value. If the <see cref="T:System.String" /> is longer than the specified length, the <see cref="T:System.String" /> is truncated by the length parameter, otherwise, the original <see cref="T:System.String" /> is returned.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.StartsWith">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether the beginning of the <see cref="T:System.String" /> value matches the <see cref="T:System.String" /> parameter.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.StartsWithIgnoreCase">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether the beginning of the <see cref="T:System.String" /> value matches the <see cref="T:System.String" /> parameter, ignoring character casing.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.EndsWith">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether the end of the <see cref="T:System.String" /> value matches the <see cref="T:System.String" /> parameter.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.EndsWithIgnoreCase">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether the end of the <see cref="T:System.String" /> value matches the <see cref="T:System.String" /> parameter, ignoring character casing.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.Contains">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether the <see cref="T:System.String" /> parameter occurs within the <see cref="T:System.String" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.ContainsIgnoreCase">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether the <see cref="T:System.String" /> parameter occurs within the <see cref="T:System.String" /> value, ignoring character casing.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.ReplaceLineBreaks">
            <summary>
            Replaces all occurrences of linebreaks ("\n" and "\r\n") in the <see cref="T:System.String" /> value with a replacement value in the <see cref="T:System.String" /> parameter.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.TrimText">
            <summary>
            Trims the <see cref="T:System.String" /> value by the specified length in the <see cref="T:System.Int32" /> parameter. If the <see cref="T:System.String" /> is longer than the value of length, it will be truncated by a leading "..." to match the length parameter, including the length of the "..." appendix (3 characters).
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.StringDistanceLevenshtein">
            <summary>
            Returns a <see cref="T:System.Int32" /> value representing the levenshtein distance between the <see cref="T:System.String" /> and the parameter <see cref="T:System.String" />. If the value or the parameter are <see langword="null" />, or parameter is not a <see cref="T:System.String" />, <see langword="null" /> is returned.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringConverterMethod.StringDistanceDamerauLevenshtein">
            <summary>
            Returns a <see cref="T:System.Int32" /> value representing the damerau-levenshtein distance between the <see cref="T:System.String" /> and the parameter <see cref="T:System.String" />. If the value or the parameter are <see langword="null" />, or parameter is not a <see cref="T:System.String" />, <see langword="null" /> is returned.
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Converters.StringConverter">
            <summary>
            Represents the converter that converts or manipulates strings. The <see cref="M:BytecodeApi.UI.Converters.StringConverter.Convert(System.String,System.Object)" /> method returns an <see cref="T:System.Object" /> based on the specified <see cref="T:BytecodeApi.UI.Converters.StringConverterMethod" /> parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.StringConverter.Method">
            <summary>
            Specifies the method that is used to convert the <see cref="T:System.String" /> value.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.StringConverter.#ctor(BytecodeApi.UI.Converters.StringConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.StringConverter" /> class with the specified conversion method.
            </summary>
            <param name="method">The method that is used to convert the <see cref="T:System.String" /> value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.StringConverter.Convert(System.String,System.Object)">
            <summary>
            Converts or manipulates the <see cref="T:System.String" /> value based on the specified <see cref="T:BytecodeApi.UI.Converters.StringConverterMethod" /> parameter.
            </summary>
            <param name="value">The <see cref="T:System.String" /> value to convert.</param>
            <param name="parameter">A parameter <see cref="T:System.Object" /> that specifies the parameter used in some of the <see cref="T:BytecodeApi.UI.Converters.StringConverterMethod" /> methods.</param>
            <returns>
            An <see cref="T:System.Object" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.TimeSpanHumanReadableConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.TimeSpan" />? values to a human readable <see cref="T:System.String" />. The <see cref="M:BytecodeApi.UI.Converters.TimeSpanHumanReadableConverter.Convert(System.Nullable{System.TimeSpan})" /> method returns a <see cref="T:System.String" /> based on the specified parameters used for the <see cref="M:BytecodeApi.Text.Wording.FormatTimeSpan(System.TimeSpan,System.Int32,System.String)" /> method.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.TimeSpanHumanReadableConverter.MaxElements">
            <summary>
            Specifies the maxElements parameter that is passed to the <see cref="M:BytecodeApi.Text.Wording.FormatTimeSpan(System.TimeSpan,System.Int32,System.String)" /> method during conversion.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.TimeSpanHumanReadableConverter.Separator">
            <summary>
            Specifies the separator parameter that is passed to the <see cref="M:BytecodeApi.Text.Wording.FormatTimeSpan(System.TimeSpan,System.Int32,System.String)" /> method during conversion.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.TimeSpanHumanReadableConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.TimeSpanHumanReadableConverter" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.TimeSpanHumanReadableConverter.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.TimeSpanHumanReadableConverter" /> class with the specified <paramref name="maxElements" /> property.
            </summary>
            <param name="maxElements">The maxElements parameter that is passed to the <see cref="M:BytecodeApi.Text.Wording.FormatTimeSpan(System.TimeSpan,System.Int32,System.String)" /> method during conversion.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.TimeSpanHumanReadableConverter.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.TimeSpanHumanReadableConverter" /> class with the specified <paramref name="maxElements" /> and <paramref name="separator" /> property.
            </summary>
            <param name="maxElements">The maxElements parameter that is passed to the <see cref="M:BytecodeApi.Text.Wording.FormatTimeSpan(System.TimeSpan,System.Int32,System.String)" /> method during conversion.</param>
            <param name="separator">The separator parameter that is passed to the <see cref="M:BytecodeApi.Text.Wording.FormatTimeSpan(System.TimeSpan,System.Int32,System.String)" /> method during conversion.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.TimeSpanHumanReadableConverter.Convert(System.Nullable{System.TimeSpan})">
            <summary>
            Converts the <see cref="T:System.TimeSpan" />? value to a human readable <see cref="T:System.String" /> based on the specified parameters used for the <see cref="M:BytecodeApi.Text.Wording.FormatTimeSpan(System.TimeSpan,System.Int32,System.String)" /> method.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan" />? value to convert.</param>
            <returns>
            A <see cref="T:System.String" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.TimeSpanConverterMethod">
            <summary>
            Specifies the method that is used to convert <see cref="T:System.TimeSpan" />? values.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.TimeSpanConverterMethod.Milliseconds">
            <summary>
            Returns the milliseconds component of the <see cref="T:System.TimeSpan" />? value as a <see cref="T:System.String" /> without decimal digits.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.TimeSpanConverterMethod.Seconds">
            <summary>
            Returns the seconds component of the <see cref="T:System.TimeSpan" />? value as a <see cref="T:System.String" /> without decimal digits.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.TimeSpanConverterMethod.Minutes">
            <summary>
            Returns the minutes component of the <see cref="T:System.TimeSpan" />? value as a <see cref="T:System.String" /> without decimal digits.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.TimeSpanConverterMethod.Hours">
            <summary>
            Returns the hours component of the <see cref="T:System.TimeSpan" />? value as a <see cref="T:System.String" /> without decimal digits.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.TimeSpanConverterMethod.Days">
            <summary>
            Returns the days component of the <see cref="T:System.TimeSpan" />? value as a <see cref="T:System.String" /> without decimal digits.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.TimeSpanConverterMethod.TotalMilliseconds">
            <summary>
            Returns the <see cref="T:System.TimeSpan" />? value expressed in milliseconds as a <see cref="T:System.String" /> without decimal digits.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.TimeSpanConverterMethod.TotalSeconds">
            <summary>
            Returns the <see cref="T:System.TimeSpan" />? value expressed in seconds as a <see cref="T:System.String" /> without decimal digits.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.TimeSpanConverterMethod.TotalMinutes">
            <summary>
            Returns the <see cref="T:System.TimeSpan" />? value expressed in minutes as a <see cref="T:System.String" /> without decimal digits.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.TimeSpanConverterMethod.TotalHours">
            <summary>
            Returns the <see cref="T:System.TimeSpan" />? value expressed in hours as a <see cref="T:System.String" /> without decimal digits.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.TimeSpanConverterMethod.TotalDays">
            <summary>
            Returns the <see cref="T:System.TimeSpan" />? value expressed in days as a <see cref="T:System.String" /> without decimal digits.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.TimeSpanConverterMethod.Format">
            <summary>
            Returns the equivalent <see cref="T:System.String" /> representation of the <see cref="T:System.TimeSpan" />? value using a specified format parameter and the invariant culture.
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Converters.TimeSpanConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.TimeSpan" />? values. The <see cref="M:BytecodeApi.UI.Converters.TimeSpanConverter.Convert(System.Nullable{System.TimeSpan},System.String)" /> method returns a <see cref="T:System.String" /> based on the specified <see cref="T:BytecodeApi.UI.Converters.TimeSpanConverterMethod" /> parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.TimeSpanConverter.Method">
            <summary>
            Specifies the method that is used to convert the <see cref="T:System.TimeSpan" />? value.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.TimeSpanConverter.#ctor(BytecodeApi.UI.Converters.TimeSpanConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.TimeSpanConverter" /> class with the specified conversion method.
            </summary>
            <param name="method">The method that is used to convert the <see cref="T:System.TimeSpan" />? value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.TimeSpanConverter.Convert(System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Converts the <see cref="T:System.TimeSpan" />? value based on the specified <see cref="T:BytecodeApi.UI.Converters.TimeSpanConverterMethod" /> parameter.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan" />? value to convert.</param>
            <param name="parameter">A parameter <see cref="T:System.String" /> that specifies the format used in some of the <see cref="T:BytecodeApi.UI.Converters.TimeSpanConverterMethod" /> methods.</param>
            <returns>
            A <see cref="T:System.String" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.DateTimeConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.DateTime" />? values. The <see cref="M:BytecodeApi.UI.Converters.DateTimeConverter.Convert(System.Nullable{System.DateTime},System.String)" /> method returns a <see cref="T:System.String" /> based on the specified <see cref="T:BytecodeApi.UI.Converters.DateTimeConverterMethod" /> parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.DateTimeConverter.Method">
            <summary>
            Specifies the method that is used to convert the <see cref="T:System.DateTime" />? value.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.DateTimeConverter.#ctor(BytecodeApi.UI.Converters.DateTimeConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.DateTimeConverter" /> class with the specified conversion method.
            </summary>
            <param name="method">The method that is used to convert the <see cref="T:System.DateTime" />? value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.DateTimeConverter.Convert(System.Nullable{System.DateTime},System.String)">
            <summary>
            Converts the <see cref="T:System.DateTime" />? value based on the specified <see cref="T:BytecodeApi.UI.Converters.DateTimeConverterMethod" /> parameter.
            </summary>
            <param name="value">The <see cref="T:System.DateTime" />? value to convert.</param>
            <param name="parameter">A parameter <see cref="T:System.String" /> that specifies the format used in some of the <see cref="T:BytecodeApi.UI.Converters.DateTimeConverterMethod" /> methods.</param>
            <returns>
            A <see cref="T:System.String" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.DateTimeConverterMethod">
            <summary>
            Specifies the method that is used to convert <see cref="T:System.DateTime" />? values.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.DateTimeConverterMethod.ShortDate">
            <summary>
            Returns the equivalent short date <see cref="T:System.String" /> representation of the <see cref="T:System.DateTime" />? value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.DateTimeConverterMethod.ShortTime">
            <summary>
            Returns the equivalent short time <see cref="T:System.String" /> representation of the <see cref="T:System.DateTime" />? value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.DateTimeConverterMethod.LongDate">
            <summary>
            Returns the equivalent long date <see cref="T:System.String" /> representation of the <see cref="T:System.DateTime" />? value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.DateTimeConverterMethod.LongTime">
            <summary>
            Returns the equivalent long time <see cref="T:System.String" /> representation of the <see cref="T:System.DateTime" />? value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.DateTimeConverterMethod.Year">
            <summary>
            Returns the year component of the <see cref="T:System.DateTime" />? value as a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.DateTimeConverterMethod.Month">
            <summary>
            Returns the month component of the <see cref="T:System.DateTime" />? value as a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.DateTimeConverterMethod.Day">
            <summary>
            Returns the day component of the <see cref="T:System.DateTime" />? value as a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.DateTimeConverterMethod.Hour">
            <summary>
            Returns the hour component of the <see cref="T:System.DateTime" />? value as a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.DateTimeConverterMethod.Minute">
            <summary>
            Returns the minute component of the <see cref="T:System.DateTime" />? value as a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.DateTimeConverterMethod.Second">
            <summary>
            Returns the second component of the <see cref="T:System.DateTime" />? value as a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.DateTimeConverterMethod.Format">
            <summary>
            Returns the equivalent <see cref="T:System.String" /> representation of the <see cref="T:System.DateTime" />? value using a specified format parameter and the invariant culture.
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Converters.PathConverterMethod">
            <summary>
            Specifies the method that is used to convert the path in <see cref="T:System.String" /> values.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.PathConverterMethod.FileName">
            <summary>
            Returns the filename and extension of the path <see cref="T:System.String" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.PathConverterMethod.FileNameWithoutExtension">
            <summary>
            Returns the filename of the of the path <see cref="T:System.String" /> value without the extension.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.PathConverterMethod.Extension">
            <summary>
            Returns the extension of the path <see cref="T:System.String" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.PathConverterMethod.ExtensionWithoutDot">
            <summary>
            Returns the extension of the path <see cref="T:System.String" /> value without the leading dot.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.PathConverterMethod.DirectoryName">
            <summary>
            Returns the directory of the path <see cref="T:System.String" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.PathConverterMethod.Root">
            <summary>
            Returns the root directory of the path <see cref="T:System.String" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.PathConverterMethod.Combine">
            <summary>
            Combines the path <see cref="T:System.String" /> value with the path <see cref="T:System.String" /> in the parameter.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.PathConverterMethod.ChangeExtension">
            <summary>
            Changes the extension of the path <see cref="T:System.String" /> value with the extension <see cref="T:System.String" /> in the parameter.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.PathConverterMethod.OriginalPath">
            <summary>
            Returns the path <see cref="T:System.String" /> value of an existing file or directory in its original representation with fixed character casing. If it does not exist, the original <see cref="T:System.String" /> value is returned.
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Converters.PathConverter">
            <summary>
            Represents the converter that converts path strings. The <see cref="M:BytecodeApi.UI.Converters.PathConverter.Convert(System.String,System.String)" /> method returns a <see cref="T:System.String" /> based on the specified <see cref="T:BytecodeApi.UI.Converters.PathConverterMethod" /> parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.PathConverter.Method">
            <summary>
            Specifies the method that is used to convert the path in the <see cref="T:System.String" /> value.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.PathConverter.#ctor(BytecodeApi.UI.Converters.PathConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.PathConverter" /> class with the specified conversion method.
            </summary>
            <param name="method">The method that is used to convert the path in the <see cref="T:System.String" /> value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.PathConverter.Convert(System.String,System.String)">
            <summary>
            Converts the path in the <see cref="T:System.String" /> value based on the specified <see cref="T:BytecodeApi.UI.Converters.PathConverterMethod" /> parameter.
            </summary>
            <param name="value">The <see cref="T:System.String" /> value to convert.</param>
            <param name="parameter">A parameter <see cref="T:System.String" /> that specifies the parameter used in some of the <see cref="T:BytecodeApi.UI.Converters.PathConverterMethod" /> methods.</param>
            <returns>
            A <see cref="T:System.String" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.EnumConverterMethod">
            <summary>
            Specifies the method that is used to convert <see cref="T:System.Enum" /> values.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.EnumConverterMethod.String">
            <summary>
            Returns the equivalent <see cref="T:System.String" /> representation of the <see cref="T:System.Enum" /> value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.EnumConverterMethod.Description">
            <summary>
            Returns the <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> of the <see cref="T:System.Enum" /> value, or <see langword="null" />, if the attribute was not found.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.EnumConverterMethod.DescriptionOrString">
            <summary>
            Returns the <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> of the <see cref="T:System.Enum" /> value.
            If the attribute was not found, the <see cref="T:System.String" /> representation of the <see cref="T:System.Enum" /> value is returned.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.EnumConverterMethod.Value">
            <summary>
            Returns the equivalent <see cref="T:System.Int32" /> value of the <see cref="T:System.Enum" /> value.
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Converters.EnumConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.Enum" /> values. The <see cref="M:BytecodeApi.UI.Converters.EnumConverter.Convert(System.Enum)" /> method returns an <see cref="T:System.Object" /> based on the specified <see cref="T:BytecodeApi.UI.Converters.EnumConverterMethod" /> parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.EnumConverter.Method">
            <summary>
            Specifies the method that is used to convert the <see cref="T:System.Enum" /> value.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.EnumConverter.#ctor(BytecodeApi.UI.Converters.EnumConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.EnumConverter" /> class with the specified conversion method.
            </summary>
            <param name="method">The method that is used to convert the <see cref="T:System.Enum" /> value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.EnumConverter.Convert(System.Enum)">
            <summary>
            Converts the <see cref="T:System.Enum" /> value based on the specified <see cref="T:BytecodeApi.UI.Converters.EnumConverterMethod" /> parameter.
            </summary>
            <param name="value">The <see cref="T:System.Enum" /> value to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.EqualityConverter">
            <summary>
            Represents the converter that converts objects or <see cref="T:System.IComparable" /> values based on equality to the specified parameter. The <see cref="M:BytecodeApi.UI.Converters.EqualityConverter.Convert(System.Object,System.Object)" /> method returns an <see cref="T:System.Object" /> based on the specified <see cref="T:BytecodeApi.UI.Converters.EqualityConverterMethod" /> and <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameters.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.EqualityConverter.Method">
            <summary>
            Specifies the method that is used to compare the value and parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.EqualityConverter.Result">
            <summary>
            Specifies how the <see cref="T:System.Boolean" /> result is converted before the <see cref="M:BytecodeApi.UI.Converters.EqualityConverter.Convert(System.Object,System.Object)" /> method returns.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.EqualityConverter.#ctor(BytecodeApi.UI.Converters.EqualityConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.EqualityConverter" /> class with the specified conversion method.
            </summary>
            <param name="method">The method that is used to compare the value and parameter.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.EqualityConverter.#ctor(BytecodeApi.UI.Converters.EqualityConverterMethod,BytecodeApi.UI.Converters.BooleanConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.EqualityConverter" /> class with the specified conversion method and result transformation.
            </summary>
            <param name="method">The method that is used to compare the value and parameter.</param>
            <param name="result">Specifies how the <see cref="T:System.Boolean" /> result is converted before the <see cref="M:BytecodeApi.UI.Converters.EqualityConverter.Convert(System.Object,System.Object)" /> method returns.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.EqualityConverter.Convert(System.Object,System.Object)">
            <summary>
            Converts the <see cref="T:System.Object" /> or <see cref="T:System.IComparable" /> value based on equality to the specified parameter and the specified <see cref="T:BytecodeApi.UI.Converters.EqualityConverterMethod" /> and <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameters.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="parameter">A parameter <see cref="T:System.Object" /> to be compared to <paramref name="value" />.</param>
            <returns>
            An <see cref="T:System.Object" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.NullConverter">
            <summary>
            Represents the converter that converts objects based on whether the value is <see langword="null" />. The <see cref="M:BytecodeApi.UI.Converters.NullConverter.Convert(System.Object)" /> method returns an <see cref="T:System.Object" /> based on the specified <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.NullConverter.Result">
            <summary>
            Specifies how the <see cref="T:System.Boolean" /> result is converted before the <see cref="M:BytecodeApi.UI.Converters.NullConverter.Convert(System.Object)" /> method returns.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.NullConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.NullConverter" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.NullConverter.#ctor(BytecodeApi.UI.Converters.BooleanConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.NullConverter" /> class with the specified result transformation.
            </summary>
            <param name="result">Specifies how the <see cref="T:System.Boolean" /> result is converted before the <see cref="M:BytecodeApi.UI.Converters.NullConverter.Convert(System.Object)" /> method returns.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.NullConverter.Convert(System.Object)">
            <summary>
            Converts the <see cref="T:System.Object" /> value based on whether the value is <see langword="null" /> and the specified <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameter.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> value to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.EqualityConverterMethod">
            <summary>
            Specifies the method that is used to compare objects or <see cref="T:System.IComparable" /> values.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.EqualityConverterMethod.Equal">
            <summary>
            Compares the value and parameter for equality using the <see cref="M:System.Object.Equals(System.Object,System.Object)" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.EqualityConverterMethod.NotEqual">
            <summary>
            Compares the value and parameter for inequality using the <see cref="M:System.Object.Equals(System.Object,System.Object)" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.EqualityConverterMethod.Less">
            <summary>
            If the value and parameter are <see cref="T:System.IComparable" /> objects, returns <see langword="true" />, if value is less than parameter; otherwise, <see langword="false" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.EqualityConverterMethod.LessEqual">
            <summary>
            If the value and parameter are <see cref="T:System.IComparable" /> objects, returns <see langword="true" />, if value is less than or equal to parameter; otherwise, <see langword="false" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.EqualityConverterMethod.Greater">
            <summary>
            If the value and parameter are <see cref="T:System.IComparable" /> objects, returns <see langword="true" />, if value is greater than parameter; otherwise, <see langword="false" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.EqualityConverterMethod.GreaterEqual">
            <summary>
            If the value and parameter are <see cref="T:System.IComparable" /> objects, returns <see langword="true" />, if value is greater than or equal to parameter; otherwise, <see langword="false" />.
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Converters.StringEmptyConverterMethod">
            <summary>
            Specifies the method that is used to check <see cref="T:System.String" /> values for emptiness.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringEmptyConverterMethod.NotNullOrEmpty">
            <summary>
            Checks the <see cref="T:System.String" /> value for emptiness and returns <see langword="true" />, if the <see cref="T:System.String" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />; otherwise, <see langword="false" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.StringEmptyConverterMethod.NotNullOrWhiteSpace">
            <summary>
            Checks the <see cref="T:System.String" /> value for emptiness and returns <see langword="true" />, if the <see cref="T:System.String" /> is <see langword="null" />, <see cref="F:System.String.Empty" />, or consists only of white-space characters; otherwise, <see langword="false" />.
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Converters.StringEmptyConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.String" /> values based on <see cref="T:System.String" /> emptiness. The <see cref="M:BytecodeApi.UI.Converters.StringEmptyConverter.Convert(System.String)" /> method returns an <see cref="T:System.Object" /> based on the specified <see cref="T:BytecodeApi.UI.Converters.StringEmptyConverterMethod" /> and <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameters.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.StringEmptyConverter.Method">
            <summary>
            Specifies the method that is used to check the <see cref="T:System.String" /> value for emptiness.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.StringEmptyConverter.Result">
            <summary>
            Specifies how the <see cref="T:System.Boolean" /> result is converted before the <see cref="M:BytecodeApi.UI.Converters.StringEmptyConverter.Convert(System.String)" /> method returns.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.StringEmptyConverter.#ctor(BytecodeApi.UI.Converters.StringEmptyConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.StringEmptyConverter" /> class with the specified conversion method.
            </summary>
            <param name="method">The method that is used to check the <see cref="T:System.String" /> value for emptiness.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.StringEmptyConverter.#ctor(BytecodeApi.UI.Converters.StringEmptyConverterMethod,BytecodeApi.UI.Converters.BooleanConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.StringEmptyConverter" /> class with the specified conversion method and result transformation.
            </summary>
            <param name="method">The method that is used to check the <see cref="T:System.String" /> value for emptiness.</param>
            <param name="result">Specifies how the <see cref="T:System.Boolean" /> result is converted before the <see cref="M:BytecodeApi.UI.Converters.StringEmptyConverter.Convert(System.String)" /> method returns.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.StringEmptyConverter.Convert(System.String)">
            <summary>
            Converts the <see cref="T:System.String" /> value based on <see cref="T:System.String" /> emptiness and the specified <see cref="T:BytecodeApi.UI.Converters.StringEmptyConverterMethod" /> and <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameters.
            </summary>
            <param name="value">The <see cref="T:System.String" /> value to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Converters.BooleanConverterMethod">
            <summary>
            Specifies the method that is used to convert <see cref="T:System.Boolean" />? values.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.BooleanConverterMethod.Default">
            <summary>
            Returns the original <see cref="T:System.Boolean" />? value.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.BooleanConverterMethod.Inverse">
            <summary>
            Returns <see langword="true" />, if the <see cref="T:System.Boolean" />? value is <see langword="false" /> or <see langword="null" />; otherwise, <see langword="false" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.BooleanConverterMethod.Visibility">
            <summary>
            Returns <see cref="F:System.Windows.Visibility.Visible" />, if the <see cref="T:System.Boolean" />? value is <see langword="true" />; otherwise, <see cref="F:System.Windows.Visibility.Collapsed" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.BooleanConverterMethod.VisibilityInverse">
            <summary>
            Returns <see cref="F:System.Windows.Visibility.Collapsed" />, if the <see cref="T:System.Boolean" />? value is <see langword="true" />; otherwise, <see cref="F:System.Windows.Visibility.Visible" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.BooleanConverterMethod.VisibilityHidden">
            <summary>
            Returns <see cref="F:System.Windows.Visibility.Visible" />, if the <see cref="T:System.Boolean" />? value is <see langword="true" />; otherwise, <see cref="F:System.Windows.Visibility.Hidden" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.BooleanConverterMethod.VisibilityHiddenInverse">
            <summary>
            Returns <see cref="F:System.Windows.Visibility.Hidden" />, if the <see cref="T:System.Boolean" />? value is <see langword="true" />; otherwise, <see cref="F:System.Windows.Visibility.Visible" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.BooleanConverterMethod.GridLengthZeroAuto">
            <summary>
            Returns <see cref="P:System.Windows.GridLength.Auto" />, if the <see cref="T:System.Boolean" />? value is <see langword="true" />; otherwise, <see langword="new" /> <see cref="T:System.Windows.GridLength" />(0).
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.BooleanConverterMethod.GridLengthZeroAutoInverse">
            <summary>
            Returns <see langword="new" /> <see cref="T:System.Windows.GridLength" />(0), if the <see cref="T:System.Boolean" />? value is <see langword="true" />; otherwise, <see cref="P:System.Windows.GridLength.Auto" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.BooleanConverterMethod.GridLengthZeroStar">
            <summary>
            Returns <see langword="new" /> <see cref="T:System.Windows.GridLength" />(1, <see cref="F:System.Windows.GridUnitType.Star" />), if the <see cref="T:System.Boolean" />? value is <see langword="true" />; otherwise, <see langword="new" /> <see cref="T:System.Windows.GridLength" />(0).
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Converters.BooleanConverterMethod.GridLengthZeroStarInverse">
            <summary>
            Returns <see langword="new" /> <see cref="T:System.Windows.GridLength" />(0), if the <see cref="T:System.Boolean" />? value is <see langword="true" />; otherwise, <see langword="new" /> <see cref="T:System.Windows.GridLength" />(1, <see cref="F:System.Windows.GridUnitType.Star" />).
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Converters.BooleanConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.Boolean" />? values. The <see cref="M:BytecodeApi.UI.Converters.BooleanConverter.Convert(System.Nullable{System.Boolean})" /> method returns an <see cref="T:System.Object" /> based on the specified <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameter.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Converters.BooleanConverter.Method">
            <summary>
            Specifies the method that is used to convert the <see cref="T:System.Boolean" />? value.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Converters.BooleanConverter.#ctor(BytecodeApi.UI.Converters.BooleanConverterMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Converters.BooleanConverter" /> class with the specified conversion method.
            </summary>
            <param name="method">The method that is used to convert the <see cref="T:System.Boolean" />? value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Converters.BooleanConverter.Convert(System.Nullable{System.Boolean})">
            <summary>
            Converts the <see cref="T:System.Boolean" />? value based on the specified <see cref="T:BytecodeApi.UI.Converters.BooleanConverterMethod" /> parameter.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" />? value to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> with the result of the conversion.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.DelegateCommand">
            <summary>
            Represents a command which uses specified delegates for <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)" /> and <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.DelegateCommand.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.DelegateCommand" /> class with the specified execute delegate.
            </summary>
            <param name="execute">The <see cref="T:System.Action" /> to be called when the command is invoked.</param>
        </member>
        <member name="M:BytecodeApi.UI.DelegateCommand.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.DelegateCommand" /> class with the specified execute and canExecute delegates.
            </summary>
            <param name="execute">The <see cref="T:System.Action" /> to be called when the command is invoked.</param>
            <param name="canExecute">The <see cref="T:System.Func`1" /> that determines whether the command can execute in its current state.</param>
        </member>
        <member name="M:BytecodeApi.UI.DelegateCommand.Execute">
            <summary>
            Executes the command. A call to <see cref="M:BytecodeApi.UI.DelegateCommand.CanExecute" /> is performed to check if the command can be executed.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.DelegateCommand.CanExecute">
            <summary>
            Cetermines whether the command can execute in its current state.
            </summary>
            <returns>
            <see langword="true" />, if the command can be executed;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.DelegateCommand`1">
            <summary>
            Represents a parameterized command which uses specified delegates for <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)" /> and <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />.
            </summary>
            <typeparam name="TParameter">The type of the command parameter.</typeparam>
        </member>
        <member name="M:BytecodeApi.UI.DelegateCommand`1.#ctor(System.Action{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.DelegateCommand`1" /> class with the specified execute delegate.
            </summary>
            <param name="execute">The <see cref="T:System.Action`1" /> to be called when the command is invoked. The first argument of <paramref name="execute" /> is the command parameter.</param>
        </member>
        <member name="M:BytecodeApi.UI.DelegateCommand`1.#ctor(System.Action{`0},System.Predicate{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.DelegateCommand`1" /> class with the specified execute and canExecute delegates.
            </summary>
            <param name="execute">The <see cref="T:System.Action`1" /> to be called when the command is invoked. The first argument of <paramref name="execute" /> is the command parameter.</param>
            <param name="canExecute">The <see cref="T:System.Predicate`1" /> that determines whether the command can execute in its current state. The first argument of <paramref name="canExecute" /> is the command parameter.</param>
        </member>
        <member name="M:BytecodeApi.UI.DelegateCommand`1.#ctor(System.Action{`0},System.Func{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.DelegateCommand`1" /> class with the specified execute and canExecute delegates.
            </summary>
            <param name="execute">The <see cref="T:System.Action`1" /> to be called when the command is invoked. The first argument of <paramref name="execute" /> is the command parameter.</param>
            <param name="canExecute">The <see cref="T:System.Func`1" /> that determines whether the command can execute in its current state.</param>
        </member>
        <member name="M:BytecodeApi.UI.DelegateCommand`1.Execute(`0)">
            <summary>
            Executes the command with the specified parameter. A call to <see cref="M:BytecodeApi.UI.DelegateCommand`1.CanExecute(`0)" /> is performed to check if the command can be executed.
            </summary>
            <param name="parameter">The parameter which is passed to the execute and canExecute delegate.</param>
        </member>
        <member name="M:BytecodeApi.UI.DelegateCommand`1.CanExecute(`0)">
            <summary>
            Cetermines whether the command can execute in its current state.
            </summary>
            <param name="parameter">The parameter which is passed to the canExecute delegate.</param>
            <returns>
            <see langword="true" />, if the command can be executed;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.ConverterBase`2">
            <summary>
            Represents the base class that wraps the <see cref="T:System.Windows.Data.IValueConverter" /> and provides a simplified wrapper method for Convert. ConvertBack always returns <see cref="F:System.Windows.DependencyProperty.UnsetValue" />. This is an abstract class.
            </summary>
            <typeparam name="TValue">The type of the value to convert.</typeparam>
            <typeparam name="TResult">The type of the conversion result.</typeparam>
        </member>
        <member name="P:BytecodeApi.UI.ConverterBase`2.Then">
            <summary>
            Specifies a converter that is used to convert the result of this converter. This can be used to apply multiple conversions on a value.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.ConverterBase`2.ThenParameter">
            <summary>
            If <see cref="P:BytecodeApi.UI.ConverterBase`2.Then" /> is not <see langword="null" />, specifies a converter parameter that is used to convert the result of this converter.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.ConverterBase`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.ConverterBase`2" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.ConverterBase`2.Convert(`0)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <returns>
            A converted value. If the method returns <see langword="null" />, the valid null value is used.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.ConverterBase`2.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns this instance of <see cref="T:System.Windows.Data.IValueConverter" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            This instance of <see cref="T:System.Windows.Data.IValueConverter" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.ConverterBase`3">
            <summary>
            Represents the base class that wraps the <see cref="T:System.Windows.Data.IValueConverter" /> and provides a simplified wrapper method for Convert. ConvertBack always returns <see cref="F:System.Windows.DependencyProperty.UnsetValue" />. This is an abstract class.
            </summary>
            <typeparam name="TValue">The type of the value to convert.</typeparam>
            <typeparam name="TParameter">The type of the parameter used for conversion.</typeparam>
            <typeparam name="TResult">The type of the conversion result.</typeparam>
        </member>
        <member name="P:BytecodeApi.UI.ConverterBase`3.Then">
            <summary>
            Specifies a converter that is used to convert the result of this converter. This can be used to apply multiple conversions on a value.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.ConverterBase`3.ThenParameter">
            <summary>
            If <see cref="P:BytecodeApi.UI.ConverterBase`3.Then" /> is not <see langword="null" />, specifies a converter parameter that is used to convert the result of this converter.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.ConverterBase`3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.ConverterBase`3" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.ConverterBase`3.Convert(`0,`1)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="parameter">The converter parameter to use.</param>
            <returns>
            A converted value. If the method returns <see langword="null" />, the valid null value is used.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.ConverterBase`3.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns this instance of <see cref="T:System.Windows.Data.IValueConverter" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            This instance of <see cref="T:System.Windows.Data.IValueConverter" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.ConverterBaseExtended`4">
            <summary>
            Represents the base class that wraps the <see cref="T:System.Windows.Data.IValueConverter" /> and provides simplified wrapper methods for Convert and ConvertBack. This is an abstract class.
            </summary>
            <typeparam name="TValue">The type of the value to convert.</typeparam>
            <typeparam name="TResult">The type of the conversion result.</typeparam>
            <typeparam name="TBackValue">The type of the value when converted back. This is usually equal to <typeparamref name="TValue" />.</typeparam>
            <typeparam name="TBackResult">The type of the conversion result when converted back. This is usually equal to <typeparamref name="TResult" />.</typeparam>
        </member>
        <member name="M:BytecodeApi.UI.ConverterBaseExtended`4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.ConverterBaseExtended`4" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.ConverterBaseExtended`4.ConvertBack(`2)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <returns>
            A converted value. If the method returns <see langword="null" />, the valid null value is used.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.ConverterBaseExtended`5">
            <summary>
            Represents the base class that wraps the <see cref="T:System.Windows.Data.IValueConverter" /> and provides simplified wrapper methods for Convert and ConvertBack. This is an abstract class.
            </summary>
            <typeparam name="TValue">The type of the value to convert.</typeparam>
            <typeparam name="TParameter">The type of the parameter used for conversion.</typeparam>
            <typeparam name="TResult">The type of the conversion result.</typeparam>
            <typeparam name="TBackValue">The type of the value when converted back. This is usually equal to <typeparamref name="TValue" />.</typeparam>
            <typeparam name="TBackResult">The type of the conversion result when converted back. This is usually equal to <typeparamref name="TResult" />.</typeparam>
        </member>
        <member name="M:BytecodeApi.UI.ConverterBaseExtended`5.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.ConverterBaseExtended`5" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.ConverterBaseExtended`5.ConvertBack(`3,`1)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="parameter">The converter parameter to use.</param>
            <returns>
            A converted value. If the method returns <see langword="null" />, the valid null value is used.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Dialogs.FileDialogs">
            <summary>
            Helper class for UI dialogs, such as Open and Save for files and directories.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.FileDialogs.Open">
            <summary>
            Displays an open file dialog with a filter that allows any file to be opened. Returns a <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.FileDialogs.Open(System.String[])">
            <summary>
            Displays an open file dialog with a filter that allows any file with one of the specified extensions to be opened. The extension description is retrieved using the <see cref="T:BytecodeApi.IO.SystemInfo.FileExtensionInfo" /> class. Returns a <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <param name="extensions">The collection of extensions that are allowed to be opened. The extension description is retrieved using the <see cref="T:BytecodeApi.IO.SystemInfo.FileExtensionInfo" /> class.</param>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.FileDialogs.Open(System.String[],System.String)">
            <summary>
            Displays an open file dialog with a filter that allows any file with one of the specified extensions to be opened. Returns a <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <param name="extensions">The collection of extensions that are allowed to be opened.</param>
            <param name="extensionsDescription">The description to be used. If <see langword="null" />, the <see cref="T:BytecodeApi.IO.SystemInfo.FileExtensionInfo" /> class is used to retrieve the description.</param>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.FileDialogs.OpenMultiple">
            <summary>
            Displays an open file dialog with a filter that allows any file to be opened. Returns a <see cref="T:System.String" />[] representing the full path to all selected files and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <returns>
            A <see cref="T:System.String" />[] representing the full path to all selected files and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.FileDialogs.OpenMultiple(System.String[])">
            <summary>
            Displays an open file dialog with a filter that allows any file with one of the specified extensions to be opened. The extension description is retrieved using the <see cref="T:BytecodeApi.IO.SystemInfo.FileExtensionInfo" /> class. Returns a <see cref="T:System.String" />[] representing the full path to all selected files and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <param name="extensions">The collection of extensions that are allowed to be opened. The extension description is retrieved using the <see cref="T:BytecodeApi.IO.SystemInfo.FileExtensionInfo" /> class.</param>
            <returns>
            A <see cref="T:System.String" />[] representing the full path to all selected files and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.FileDialogs.OpenFolder">
            <summary>
            Displays a folder browser dialog and returns a <see cref="T:System.String" /> representing the full path to the selected directory and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the selected directory and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.FileDialogs.OpenFolder(System.String)">
            <summary>
            Displays a folder browser dialog, starting from the specified root folder, and returns a <see cref="T:System.String" /> representing the full path to the selected directory and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <param name="rootFolder">A <see cref="T:System.String" /> specifying the root folder to start browsing from.</param>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the selected directory and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.FileDialogs.SelectIcon(System.Int32@)">
            <summary>
            Displays an <see cref="T:BytecodeApi.UI.Dialogs.IconPickerDialog" /> that allows an icon from a resource file to be selected. Returns a <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user. The selected icon index is written to the <paramref name="index" /> parameter.
            </summary>
            <param name="index">When this method returns, a <see cref="T:System.String" /> that contains the index of the selected icon; otherwise, -1.</param>
            <returns>
            Returns a <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user. The selected icon index is written to the <paramref name="index" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.FileDialogs.Save(System.String)">
            <summary>
            Displays a save file dialog and automatically adds an extension to the filename, if the user omits an extension. The extension is taken from the <paramref name="fileName" /> parameter.
            </summary>
            <param name="fileName">A <see cref="T:System.String" /> specifying the initial filename that can be changed by the user.</param>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the saved file and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.FileDialogs.Save(System.String,System.String)">
            <summary>
            Displays a save file dialog and automatically adds an extension to the filename, if the user omits an extension.
            </summary>
            <param name="fileName">A <see cref="T:System.String" /> specifying the initial filename that can be changed by the user.</param>
            <param name="extension">A <see cref="T:System.String" /> specifying the extension to be added.</param>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the saved file and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Dialogs.IconPickerDialog">
            <summary>
            Represents a common dialog box that allows a user to pick an icon from a resource file.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Dialogs.IconPickerDialog.FileName">
            <summary>
            Gets a <see cref="T:System.String" /> containing the full path of the selected file.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Dialogs.IconPickerDialog.IconIndex">
            <summary>
            Gets a <see cref="T:System.Int32" /> value specifying the selected icon index.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.IconPickerDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Dialogs.IconPickerDialog" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.IconPickerDialog.RunDialog(System.IntPtr)">
            <summary>
            Is called to display the icon picker dialog.
            </summary>
            <param name="hwndOwner">Handle to the window that owns the dialog box.</param>
            <returns>
            If the user clicks the OK button of the dialog that is displayed, <see langword="true" /> is returned;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.IconPickerDialog.Reset">
            <summary>
            Resets the properties of a common dialog to their default values.
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Dialogs.MessageBoxes">
            <summary>
            Helper class for dialogs using the <see cref="T:System.Windows.MessageBox" /> class.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Dialogs.MessageBoxes.Window">
            <summary>
            Gets or sets the <see cref="P:BytecodeApi.UI.Dialogs.MessageBoxes.Window" /> object that is used as the owner parameter for calls to the <see cref="T:System.Windows.MessageBox" /> class. If <see cref="P:BytecodeApi.UI.Dialogs.MessageBoxes.Window" /> is <see langword="null" />, no owner is specified.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Dialogs.MessageBoxes.CaptionForInformation">
            <summary>
            Gets or sets the caption for message boxes shown by the <see cref="M:BytecodeApi.UI.Dialogs.MessageBoxes.Information(System.String)" /> method. The initial value is "Information".
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Dialogs.MessageBoxes.CaptionForConfirmation">
            <summary>
            Gets or sets the caption for message boxes shown by the <see cref="M:BytecodeApi.UI.Dialogs.MessageBoxes.Confirmation(System.String)" /> method. The initial value is "Confirmation".
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Dialogs.MessageBoxes.CaptionForWarning">
            <summary>
            Gets or sets the caption for message boxes shown by the <see cref="M:BytecodeApi.UI.Dialogs.MessageBoxes.Warning(System.String)" /> method. The initial value is "Warning".
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Dialogs.MessageBoxes.CaptionForError">
            <summary>
            Gets or sets the caption for message boxes shown by the <see cref="M:BytecodeApi.UI.Dialogs.MessageBoxes.Error(System.String)" /> method. The initial value is "Error".
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.MessageBoxes.Information(System.String)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.UI.Dialogs.MessageBoxes.CaptionForInformation" /> as title and an "OK" button. The title is a static <see cref="T:System.String" /> value, set to "Information" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.MessageBoxes.Confirmation(System.String)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.UI.Dialogs.MessageBoxes.CaptionForConfirmation" /> as title and "Yes" and "No" buttons. The title is a static <see cref="T:System.String" /> value, set to "Confirmation" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
            <returns>
            <see langword="true" />, if "Yes" has been selected;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.MessageBoxes.Confirmation(System.String,System.Boolean)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.UI.Dialogs.MessageBoxes.CaptionForConfirmation" /> as title and "Yes" and "No" buttons. The title is a static <see cref="T:System.String" /> value, set to "Confirmation" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
            <param name="isWarning"><see langword="true" /> to use the warning icon; <see langword="false" /> to use the information icon.</param>
            <returns>
            <see langword="true" />, if "Yes" has been selected;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.MessageBoxes.Confirmation(System.String,System.Boolean,System.Boolean)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.UI.Dialogs.MessageBoxes.CaptionForConfirmation" /> as title and "Yes" and "No" buttons. The title is a static <see cref="T:System.String" /> value, set to "Confirmation" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
            <param name="isWarning"><see langword="true" /> to use the warning icon; <see langword="false" /> to use the information icon.</param>
            <param name="useOkCancel"><see langword="true" /> to use "Yes" and "No"; <see langword="false" /> to use "OK" and "Cancel" buttons.</param>
            <returns>
            <see langword="true" />, if "Yes" or "OK" has been selected;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.MessageBoxes.ConfirmationWithCancel(System.String)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.UI.Dialogs.MessageBoxes.CaptionForConfirmation" /> as title and "Yes", "No" and "Cancel" buttons. The title is a static <see cref="T:System.String" /> value, set to "Confirmation" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
            <returns>
            <see langword="true" />, if "Yes" has been selected;
            <see langword="false" />, if "No" has been selected;
            <see langword="null" />, if "Cancel" has been selected.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.MessageBoxes.ConfirmationWithCancel(System.String,System.Boolean)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.UI.Dialogs.MessageBoxes.CaptionForConfirmation" /> as title and "Yes", "No" and "Cancel" buttons. The title is a static <see cref="T:System.String" /> value, set to "Confirmation" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
            <param name="isWarning"><see langword="true" /> to use the warning icon; <see langword="false" /> to use the information icon.</param>
            <returns>
            <see langword="true" />, if "Yes" has been selected;
            <see langword="false" />, if "No" has been selected;
            <see langword="null" />, if "Cancel" has been selected.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.MessageBoxes.Warning(System.String)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.UI.Dialogs.MessageBoxes.CaptionForWarning" /> as title and an "OK" button. The title is a static <see cref="T:System.String" /> value, set to "Warning" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
        </member>
        <member name="M:BytecodeApi.UI.Dialogs.MessageBoxes.Error(System.String)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.UI.Dialogs.MessageBoxes.CaptionForError" /> as title and an "OK" button. The title is a static <see cref="T:System.String" /> value, set to "Error" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
        </member>
        <member name="T:BytecodeApi.UI.Effects.GrayscaleEffect">
            <summary>
            Provides a grayscale bitmap effect. This shader is typically used on WPF images to render the disabled state of an element.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Effects.GrayscaleEffect.InputProperty">
            <summary>
            Identifies the <see cref="P:BytecodeApi.UI.Effects.GrayscaleEffect.Input" /> dependency property. This field is read-only.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Effects.GrayscaleEffect.Input">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush" /> that applies a grayscale effect on the bitmap.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Effects.GrayscaleEffect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Effects.GrayscaleEffect" /> class.
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Data.KeyboardShortcut">
            <summary>
            Represents a keyboard shortcut composed of a key and a set of modifiers (Ctrl, Shift, Alt).
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Data.KeyboardShortcut.IsCtrl">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> uses the Ctrl modifier.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Data.KeyboardShortcut.IsShift">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> uses the Shift modifier.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Data.KeyboardShortcut.IsAlt">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> uses the Alt modifier.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Data.KeyboardShortcut.Key">
            <summary>
            Gets or sets the key for this <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Data.KeyboardShortcut.KeyName">
            <summary>
            Gets the equivalent display name for the <see cref="P:BytecodeApi.UI.Data.KeyboardShortcut.Key" /> property.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Data.KeyboardShortcut.DisplayName">
            <summary>
            Gets the display name for this instance.
            <para>Example: Ctrl+Shift+A</para>
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Data.KeyboardShortcut.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Data.KeyboardShortcut.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Windows.Input.Key)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> class with the specified modifiers and the specified key.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Data.KeyboardShortcut.ToString">
            <summary>
            Returns the display name of this <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" />.
            </summary>
            <returns>
            The display name of this <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Data.KeyboardShortcut.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <see langword="true" />, if the specified <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Data.KeyboardShortcut.Equals(BytecodeApi.UI.Data.KeyboardShortcut)">
            <summary>
            Determines whether this instance is equal to another <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" />.
            </summary>
            <param name="other">The <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> to compare to this instance.</param>
            <returns>
            <see langword="true" />, if this instance is equal to the <paramref name="other" /> parameter;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Data.KeyboardShortcut.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" />.
            </summary>
            <returns>
            The hash code for this <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Data.KeyboardShortcut.op_Equality(BytecodeApi.UI.Data.KeyboardShortcut,BytecodeApi.UI.Data.KeyboardShortcut)">
            <summary>
            Compares two <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> instances for equality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> are equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Data.KeyboardShortcut.op_Inequality(BytecodeApi.UI.Data.KeyboardShortcut,BytecodeApi.UI.Data.KeyboardShortcut)">
            <summary>
            Compares two <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> instances for inequality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.UI.Data.KeyboardShortcut" /> are not equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Data.ObservableObject">
            <summary>
            Class that wraps an object, implementing the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface. Typically, this class is set as a <see cref="T:System.Windows.DependencyProperty" /> on a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.Data.ObservableObject.PropertyChanging">
            <summary>
            Occurs when a property value is changing and is typically used by a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.Data.ObservableObject.PropertyChanged">
            <summary>
            Occurs when a property value has changed and is typically used by a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Data.ObservableObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Data.ObservableObject" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Data.ObservableObject.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Method that can be used by the <see langword="get" /> accessor of a property. Backing fields are managed automatically.
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => Get(() => Foo); <see langword="set" /> => Set(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <returns>
            The value of the property backing field. The default value is <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Data.ObservableObject.Get``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Method that can be used by the <see langword="get" /> accessor of a property. Backing fields are managed automatically.
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => Get(() => Foo, 1); <see langword="set" /> => Set(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <param name="defaultValue">A default value. This parameter can be used as a property initializer.</param>
            <returns>
            The value of the property backing field. The default value is <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Data.ObservableObject.Get``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Func{``0})">
            <summary>
            Method that can be used by the <see langword="get" /> accessor of a property. Backing fields are managed automatically.
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => Get(() => Foo, () => 1); <see langword="set" /> => Set(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <param name="defaultValue">A <see cref="T:System.Func`1" /> that retrieves a default value. This delegate can be used as a property initializer. <paramref name="defaultValue" /> is invoked, if the property is retrieved for the first time and is not set.</param>
            <returns>
            The value of the property backing field. The default value is <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Data.ObservableObject.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Method that can be used by the <see langword="set" /> accessor of a property. Backing fields are managed automatically. This method raises the <see cref="E:BytecodeApi.UI.Data.ObservableObject.PropertyChanging" /> event and the <see cref="E:BytecodeApi.UI.Data.ObservableObject.PropertyChanged" /> event.
            <para>Example: <see langword="public" /> <see cref="T:System.Int32" /> Foo { <see langword="get" /> => Get(() => Foo); <see langword="set" /> => Set(() => Foo, <see langword="value" />); }</para>
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Data.ObservableObject.RaisePropertyChanging``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Data.ObservableObject.PropertyChanging" /> event on any custom property. <see cref="M:BytecodeApi.UI.Data.ObservableObject.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.UI.Data.ObservableObject.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" /> do not necessarily need to be used in conjunction with this method. Likewise, this method is not required when using <see cref="M:BytecodeApi.UI.Data.ObservableObject.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.UI.Data.ObservableObject.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" />.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
        </member>
        <member name="M:BytecodeApi.UI.Data.ObservableObject.RaisePropertyChanging(System.String)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Data.ObservableObject.PropertyChanging" /> event on a property specified by a name.
            </summary>
            <param name="propertyName">A <see cref="T:System.String" /> specifying the name of the property. If <see langword="null" /> is provided, the <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" /> is used to automatically get the property name.</param>
        </member>
        <member name="M:BytecodeApi.UI.Data.ObservableObject.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Data.ObservableObject.PropertyChanged" /> event on any custom property. <see cref="M:BytecodeApi.UI.Data.ObservableObject.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.UI.Data.ObservableObject.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" /> do not necessarily need to be used in conjunction with this method. Likewise, this method is not required when using <see cref="M:BytecodeApi.UI.Data.ObservableObject.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.UI.Data.ObservableObject.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" />.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
        </member>
        <member name="M:BytecodeApi.UI.Data.ObservableObject.RaisePropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Data.ObservableObject.PropertyChanged" /> event on a property specified by a name.
            </summary>
            <param name="propertyName">A <see cref="T:System.String" /> specifying the name of the property. If <see langword="null" /> is provided, the <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" /> is used to automatically get the property name.</param>
        </member>
        <member name="M:BytecodeApi.UI.Data.ObservableObject.OnPropertyChanging(System.ComponentModel.PropertyChangingEventArgs)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Data.ObservableObject.PropertyChanging" /> event.
            </summary>
            <param name="e">The event data for the <see cref="T:System.ComponentModel.PropertyChangingEventArgs" /> event.</param>
        </member>
        <member name="M:BytecodeApi.UI.Data.ObservableObject.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Data.ObservableObject.PropertyChanged" /> event.
            </summary>
            <param name="e">The event data for the <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> event.</param>
        </member>
        <member name="T:BytecodeApi.UI.Extensions.ApplicationExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Windows.Application" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.ApplicationExtensions.FindResource``1(System.Windows.Application,System.Object)">
            <summary>
            Searches for a user interface (UI) resource, such as a <see cref="T:System.Windows.Style" /> or <see cref="T:System.Windows.Media.Brush" />, with the specified key, and throws an exception, if the requested resource is not found (see XAML Resources).
            </summary>
            <typeparam name="T">The return type of the resource.</typeparam>
            <param name="application">The <see cref="T:System.Windows.Application" /> to search in.</param>
            <param name="key">The name of the resource to find.</param>
            <returns>
            The requested resource object. If the requested resource is not found, a <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> is thrown.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.ApplicationExtensions.TryFindResource``1(System.Windows.Application,System.Object)">
            <summary>
            Searches for a resource with the specified key, and returns that resource, if found and of type specified type.
            </summary>
            <typeparam name="T">The return type of the resource.</typeparam>
            <param name="application">The <see cref="T:System.Windows.Application" /> to search in.</param>
            <param name="key">The name of the resource to find.</param>
            <returns>
            The found resource, or <see langword="default" />(<typeparamref name="T" />), if no resource with the provided key is found or it does not match the specified type.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Extensions.UIElementExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Windows.UIElement" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.UIElementExtensions.GetVisibility(System.Windows.UIElement)">
            <summary>
            Returns the converted <see cref="T:System.Windows.Visibility" /> of this <see cref="T:System.Windows.UIElement" />.
            </summary>
            <param name="uiElement">The <see cref="T:System.Windows.UIElement" /> to be tested.</param>
            <returns>
            <see langword="true" />, if the <see cref="P:System.Windows.UIElement.Visibility" /> property of this <see cref="T:System.Windows.UIElement" /> is equal to <see cref="F:System.Windows.Visibility.Visible" />;
            <see langword="false" />, if <see cref="P:System.Windows.UIElement.Visibility" /> is equal to <see cref="F:System.Windows.Visibility.Collapsed" />;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.UIElementExtensions.SetVisibility(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the <see cref="T:System.Windows.Visibility" /> of this <see cref="T:System.Windows.UIElement" />.
            </summary>
            <param name="uiElement">The <see cref="T:System.Windows.UIElement" /> to be changed.</param>
            <param name="visible"><see langword="true" /> to set <see cref="P:System.Windows.UIElement.Visibility" /> to <see cref="F:System.Windows.Visibility.Visible" />; <see langword="false" /> to use <see cref="F:System.Windows.Visibility.Collapsed" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.UIElementExtensions.SetVisibility(System.Windows.UIElement,System.Boolean,System.Boolean)">
            <summary>
            Sets the <see cref="T:System.Windows.Visibility" /> of this <see cref="T:System.Windows.UIElement" />.
            </summary>
            <param name="uiElement">The <see cref="T:System.Windows.UIElement" /> to be changed.</param>
            <param name="visible"><see langword="true" /> to set <see cref="P:System.Windows.UIElement.Visibility" /> to <see cref="F:System.Windows.Visibility.Visible" />; <see langword="false" /> to use <see cref="F:System.Windows.Visibility.Collapsed" />, or <see cref="F:System.Windows.Visibility.Hidden" /> according to the <paramref name="preserveSpace" /> parameter.</param>
            <param name="preserveSpace"><see langword="true" /> to use <see cref="F:System.Windows.Visibility.Hidden" />; <see langword="false" /> to use <see cref="F:System.Windows.Visibility.Collapsed" />. Only applies if <paramref name="visible" /> is <see langword="false" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.UIElementExtensions.Show(System.Windows.UIElement)">
            <summary>
            Sets the <see cref="P:System.Windows.UIElement.Visibility" /> property of this <see cref="T:System.Windows.UIElement" /> to <see cref="F:System.Windows.Visibility.Visible" />.
            </summary>
            <param name="uiElement">The <see cref="T:System.Windows.UIElement" /> to be changed.</param>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.UIElementExtensions.Hide(System.Windows.UIElement)">
            <summary>
            Sets the <see cref="P:System.Windows.UIElement.Visibility" /> property of this <see cref="T:System.Windows.UIElement" /> to <see cref="F:System.Windows.Visibility.Collapsed" />.
            </summary>
            <param name="uiElement">The <see cref="T:System.Windows.UIElement" /> to be changed.</param>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.UIElementExtensions.Hide(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the <see cref="P:System.Windows.UIElement.Visibility" /> property of this <see cref="T:System.Windows.UIElement" /> to <see cref="F:System.Windows.Visibility.Collapsed" /> or <see cref="F:System.Windows.Visibility.Hidden" /> based on the <paramref name="preserveSpace" /> parameter.
            </summary>
            <param name="uiElement">The <see cref="T:System.Windows.UIElement" /> to be changed.</param>
            <param name="preserveSpace"><see langword="true" /> to use <see cref="F:System.Windows.Visibility.Hidden" />; <see langword="false" /> to use <see cref="F:System.Windows.Visibility.Collapsed" />.</param>
        </member>
        <member name="T:BytecodeApi.UI.Extensions.FrameworkElementExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Windows.FrameworkElement" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.FrameworkElementExtensions.FindResource``1(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Searches for a resource with the specified key, and throws an exception, if the requested resource is not found.
            </summary>
            <typeparam name="T">The return type of the resource.</typeparam>
            <param name="frameworkElement">The <see cref="T:System.Windows.FrameworkElement" /> to search in.</param>
            <param name="key">The key identifier for the requested resource.</param>
            <returns>
            The requested resource. If no resource with the specified key was found, an exception is thrown. An <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> value might also be returned in the exception case.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.FrameworkElementExtensions.TryFindResource``1(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Searches for a resource with the specified key, and returns that resource, if found and of type specified type.
            </summary>
            <typeparam name="T">The return type of the resource.</typeparam>
            <param name="frameworkElement">The <see cref="T:System.Windows.FrameworkElement" /> to search in.</param>
            <param name="key">The key identifier of the resource to be found.</param>
            <returns>
            The found resource, or <see langword="default" />(<typeparamref name="T" />), if no resource with the provided key is found or it does not match the specified type.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.FrameworkElementExtensions.ScrollToTop(System.Windows.FrameworkElement)">
            <summary>
            Attempts to bring the top left corner of this <see cref="T:System.Windows.FrameworkElement" /> into view.
            </summary>
            <param name="frameworkElement">The <see cref="T:System.Windows.FrameworkElement" /> to be processed.</param>
        </member>
        <member name="T:BytecodeApi.UI.Extensions.DependencyObjectExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Windows.DependencyObject" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.DependencyObjectExtensions.GetValue``1(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Returns the current effective value of a <see cref="T:System.Windows.DependencyProperty" /> on this instance of a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
            <typeparam name="T">The return type of the <see cref="T:System.Windows.DependencyProperty" />.</typeparam>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to retrieve the value from.</param>
            <param name="dependencyProperty">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to retrieve the value for.</param>
            <returns>
            The effective value of <paramref name="dependencyProperty" /> on this instance of a <see cref="T:System.Windows.DependencyObject" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.DependencyObjectExtensions.GetParents(System.Windows.DependencyObject,BytecodeApi.UI.UITreeType)">
            <summary>
            Returns an array with all parents of this <see cref="T:System.Windows.DependencyObject" /> matching the specified type by traversing either the visual or the logical tree.
            </summary>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to traverse the tree from.</param>
            <param name="treeType">A <see cref="T:BytecodeApi.UI.UITreeType" /> value indicating whether to use the <see cref="T:System.Windows.LogicalTreeHelper" /> or the <see cref="T:System.Windows.Media.VisualTreeHelper" />.</param>
            <returns>
            An array with all parents of this <see cref="T:System.Windows.DependencyObject" />, depending on <paramref name="treeType" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.DependencyObjectExtensions.FindParent``1(System.Windows.DependencyObject,BytecodeApi.UI.UITreeType)">
            <summary>
            Tries to find the closest parent of this <see cref="T:System.Windows.DependencyObject" /> matching the specified type by traversing either the visual or the logical tree.
            </summary>
            <typeparam name="T">The explicit type of the parent to search for.</typeparam>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to traverse the tree from.</param>
            <param name="treeType">A <see cref="T:BytecodeApi.UI.UITreeType" /> value indicating whether to use the <see cref="T:System.Windows.LogicalTreeHelper" /> or the <see cref="T:System.Windows.Media.VisualTreeHelper" />.</param>
            <returns>
            The closest visual or logical parent of this <see cref="T:System.Windows.DependencyObject" />, depending on <paramref name="treeType" />, that is of type <typeparamref name="T" />, if found;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.DependencyObjectExtensions.FindParent``1(System.Windows.DependencyObject,BytecodeApi.UI.UITreeType,System.Predicate{``0})">
            <summary>
            Tries to find the closest parent of this <see cref="T:System.Windows.DependencyObject" /> matching the specified type and satisfying a specified condition by traversing either the visual or the logical tree.
            </summary>
            <typeparam name="T">The explicit type of the parent to search for.</typeparam>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to traverse the tree from.</param>
            <param name="treeType">A <see cref="T:BytecodeApi.UI.UITreeType" /> value indicating whether to use the <see cref="T:System.Windows.LogicalTreeHelper" /> or the <see cref="T:System.Windows.Media.VisualTreeHelper" />.</param>
            <param name="predicate">The <see cref="T:System.Predicate`1" /> that determines whether the parent of the specified type is returned.</param>
            <returns>
            The closest visual or logical parent of this <see cref="T:System.Windows.DependencyObject" />, depending on <paramref name="treeType" /> and <paramref name="predicate" />, that is of type <typeparamref name="T" />, if found;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.DependencyObjectExtensions.FindChildren``1(System.Windows.DependencyObject,BytecodeApi.UI.UITreeType)">
            <summary>
            Finds all children of this <see cref="T:System.Windows.DependencyObject" /> matching the specified type by traversing either the visual or the logical tree recursively. If no children have been found, an empty array is returned.
            </summary>
            <typeparam name="T">The explicit type of the children to search for.</typeparam>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to traverse the tree recursively.</param>
            <param name="treeType">A <see cref="T:BytecodeApi.UI.UITreeType" /> value indicating whether to use the <see cref="T:System.Windows.LogicalTreeHelper" /> or the <see cref="T:System.Windows.Media.VisualTreeHelper" />.</param>
            <returns>
            An array of the specified type with all children, depending on <paramref name="treeType" />, that can be casted to <typeparamref name="T" />. If no children have been found, an empty array is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.DependencyObjectExtensions.FindChildren``1(System.Windows.DependencyObject,BytecodeApi.UI.UITreeType,System.Predicate{``0})">
            <summary>
            Finds all children of this <see cref="T:System.Windows.DependencyObject" /> matching the specified type and satisfying a specified condition by traversing either the visual or the logical tree recursively. If no children have been found, an empty array is returned.
            </summary>
            <typeparam name="T">The explicit type of the children to search for.</typeparam>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to traverse the tree recursively.</param>
            <param name="treeType">A <see cref="T:BytecodeApi.UI.UITreeType" /> value indicating whether to use the <see cref="T:System.Windows.LogicalTreeHelper" /> or the <see cref="T:System.Windows.Media.VisualTreeHelper" />.</param>
            <param name="predicate">The <see cref="T:System.Predicate`1" /> that determines whether the child is included in the result.</param>
            <returns>
            An array of the specified type with all children, depending on <paramref name="treeType" /> and <paramref name="predicate" />, that can be casted to <typeparamref name="T" />. If no children have been found, an empty array is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.DependencyObjectExtensions.FindChild``1(System.Windows.DependencyObject,BytecodeApi.UI.UITreeType,System.Predicate{``0})">
            <summary>
            Finds the first child of this <see cref="T:System.Windows.DependencyObject" /> matching the specified type and satisfying a specified condition by traversing either the visual or the logical tree recursively. If no child was found, <see langword="null" /> is returned.
            </summary>
            <typeparam name="T">The explicit type of the children to search for.</typeparam>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to traverse the tree recursively.</param>
            <param name="treeType">A <see cref="T:BytecodeApi.UI.UITreeType" /> value indicating whether to use the <see cref="T:System.Windows.LogicalTreeHelper" /> or the <see cref="T:System.Windows.Media.VisualTreeHelper" />.</param>
            <param name="predicate">The <see cref="T:System.Predicate`1" /> that determines whether the child is included in the result.</param>
            <returns>
            The first child of the specified type that satisfies a specified condition, depending on <paramref name="treeType" />, that can be casted to <typeparamref name="T" />. If no child was found, <see langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.DependencyObjectExtensions.Validate(System.Windows.DependencyObject)">
            <summary>
            Validates this <see cref="T:System.Windows.DependencyObject" /> and all of its children and returns <see langword="true" />, if validation succeeded.
            </summary>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to validate.</param>
            <returns>
            <see langword="true" />, if validation succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.DependencyObjectExtensions.Validate(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Validates this <see cref="T:System.Windows.DependencyObject" /> and returns <see langword="true" />, if validation succeeded. If <paramref name="validateChildren" /> is set to <see langword="true" />, logical children are validated recursively.
            </summary>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to validate.</param>
            <param name="validateChildren"><see langword="true" /> to validate children recursively in addition to this <see cref="T:System.Windows.DependencyObject" />.</param>
            <returns>
            <see langword="true" />, if validation succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Extensions.ControlExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with WPF controls.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.ControlExtensions.MoveCaretToEnd(System.Windows.Controls.TextBox)">
            <summary>
            Sets the insertion position index of the caret to the end of this <see cref="T:System.Windows.Controls.TextBox" />.
            </summary>
            <param name="textBox">The <see cref="T:System.Windows.Controls.TextBox" /> to be processed.</param>
        </member>
        <member name="T:BytecodeApi.UI.Extensions.VisibilityExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Windows.Visibility" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.VisibilityExtensions.ToBoolean(System.Windows.Visibility)">
            <summary>
            Converts this <see cref="T:System.Windows.Visibility" /> value to its equivalent <see cref="T:System.Boolean" /> representation. <see cref="F:System.Windows.Visibility.Visible" /> is converted to <see langword="true" />, <see cref="F:System.Windows.Visibility.Collapsed" /> is converted to <see langword="false" /> and <see cref="F:System.Windows.Visibility.Hidden" /> is converted to <see langword="null" />.
            </summary>
            <param name="visibility">The <see cref="T:System.Windows.Visibility" /> value to convert.</param>
            <returns>
            <see langword="true" />, if <paramref name="visibility" /> is equal to <see cref="F:System.Windows.Visibility.Visible" />;
            <see langword="false" />, if <paramref name="visibility" /> is equal to <see cref="F:System.Windows.Visibility.Collapsed" />;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Extensions.DispatcherObjectExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Windows.Threading.DispatcherObject" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.DispatcherObjectExtensions.Refresh(System.Windows.Threading.DispatcherObject)">
            <summary>
            Invokes an empty <see cref="T:System.Action" /> on the <see cref="T:System.Windows.Threading.Dispatcher" /> of this <see cref="T:System.Windows.Threading.DispatcherObject" />, using the <see cref="F:System.Windows.Threading.DispatcherPriority.Render" /> priority, thereby refreshing the UI.
            </summary>
            <param name="dispatcherObject">The <see cref="T:System.Windows.Threading.DispatcherObject" /> to be refreshed.</param>
        </member>
        <member name="M:BytecodeApi.UI.Extensions.DispatcherObjectExtensions.Refresh(System.Windows.Threading.DispatcherObject,System.Windows.Threading.DispatcherPriority)">
            <summary>
            Invokes an empty <see cref="T:System.Action" /> on the <see cref="T:System.Windows.Threading.Dispatcher" /> of this <see cref="T:System.Windows.Threading.DispatcherObject" />, using the specified priority, thereby refreshing the UI.
            </summary>
            <param name="dispatcherObject">The <see cref="T:System.Windows.Threading.DispatcherObject" /> to be refreshed.</param>
            <param name="priority">The <see cref="T:System.Windows.Threading.DispatcherPriority" /> to be used during <see cref="T:System.Windows.Threading.Dispatcher" /> invocation.</param>
        </member>
        <member name="T:BytecodeApi.UI.HotKeyEventArgs">
            <summary>
            Provides data for <see cref="T:BytecodeApi.UI.HotKey" /> events.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.HotKeyEventArgs.Key">
            <summary>
            Get the key associated with the hotkey event.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.HotKeyEventArgs.Modifiers">
            <summary>
            Get the modifier keys associated with the hotkey event.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.HotKeyEventArgs.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.HotKeyEventArgs" /> class using the specified properties equivalent to the properties of <see cref="T:BytecodeApi.UI.HotKey" />.
            </summary>
            <param name="key">The key associated with the hotkey event.</param>
            <param name="modifiers">The modifier keys associated with the hotkey event.</param>
        </member>
        <member name="T:BytecodeApi.UI.HwndBroadcast">
            <summary>
            Class to send and receive HWND broadcast window messages from/to other processes.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.HwndBroadcast.Notified">
            <summary>
            Occurs when <see cref="M:BytecodeApi.UI.HwndBroadcast.Notify" /> is called by another running instance using the same name.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.HwndBroadcast.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.HwndBroadcast" /> class with the specified name.
            </summary>
            <param name="name">A <see cref="T:System.String" /> representing the name that identifies the broadcast window messages.</param>
        </member>
        <member name="M:BytecodeApi.UI.HwndBroadcast.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:BytecodeApi.UI.HwndBroadcast" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.HwndBroadcast.RegisterWindow(System.Windows.Window)">
            <summary>
            Registers a <see cref="T:System.Windows.Window" /> object that identifies as the main application window.
            </summary>
            <param name="window">The <see cref="T:System.Windows.Window" /> object identifying as the main application window.</param>
        </member>
        <member name="M:BytecodeApi.UI.HwndBroadcast.RegisterWindow(System.IntPtr)">
            <summary>
            Registers a window handle (HWND) that identifies as the main application window.
            </summary>
            <param name="handle">A <see cref="T:System.IntPtr" /> representing window handle (HWND).</param>
        </member>
        <member name="M:BytecodeApi.UI.HwndBroadcast.Notify">
            <summary>
            Sends a notification to other running instances. The <see cref="E:BytecodeApi.UI.HwndBroadcast.Notified" /> event will be triggered in all instances using the same name, except the current.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.HwndBroadcast.OnNotified(System.EventArgs)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.HwndBroadcast.Notified" /> event.
            </summary>
            <param name="e">The event data for the <see cref="E:BytecodeApi.UI.HwndBroadcast.Notified" /> event.</param>
        </member>
        <member name="T:BytecodeApi.UI.Markup.BooleanExtension">
            <summary>
            Implements <see cref="T:System.Boolean" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.BooleanExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Boolean" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.BooleanExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.BooleanExtension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.BooleanExtension.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.BooleanExtension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.BooleanExtension.Value" /> based on the provided <see cref="T:System.Boolean" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Boolean" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.BooleanExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.BooleanExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.BooleanExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Boolean" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.BooleanExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.ByteExtension">
            <summary>
            Implements <see cref="T:System.Byte" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.ByteExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Byte" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.ByteExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.ByteExtension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.ByteExtension.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.ByteExtension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.ByteExtension.Value" /> based on the provided <see cref="T:System.Byte" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Byte" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.ByteExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.ByteExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Byte" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.ByteExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Byte" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.ByteExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.CharExtension">
            <summary>
            Implements <see cref="T:System.Char" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.CharExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Char" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.CharExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.CharExtension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.CharExtension.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.CharExtension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.CharExtension.Value" /> based on the provided <see cref="T:System.Char" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Char" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.CharExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.CharExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Char" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.CharExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Char" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.CharExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.DateTimeExtension">
            <summary>
            Implements <see cref="T:System.DateTime" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.DateTimeExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.DateTime" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.DateTimeExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.DateTimeExtension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.DateTimeExtension.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.DateTimeExtension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.DateTimeExtension.Value" /> based on the provided <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="value">A <see cref="T:System.DateTime" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.DateTimeExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.DateTimeExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.DateTime" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.DateTimeExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.DateTime" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.DateTimeExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.DecimalExtension">
            <summary>
            Implements <see cref="T:System.Decimal" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.DecimalExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Decimal" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.DecimalExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.DecimalExtension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.DecimalExtension.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.DecimalExtension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.DecimalExtension.Value" /> based on the provided <see cref="T:System.Decimal" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Decimal" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.DecimalExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.DecimalExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Decimal" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.DecimalExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Decimal" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.DecimalExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.DoubleExtension">
            <summary>
            Implements <see cref="T:System.Double" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.DoubleExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Double" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.DoubleExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.DoubleExtension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.DoubleExtension.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.DoubleExtension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.DoubleExtension.Value" /> based on the provided <see cref="T:System.Double" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.DoubleExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.DoubleExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Double" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.DoubleExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Double" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.DoubleExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.EventBindingExtension">
            <summary>
            Implements event binding to <see cref="T:System.Windows.Input.ICommand" /> objects support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.EventBindingExtension.Command">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Input.ICommand" /> that is invoked when the event is fired. The <see cref="P:System.Windows.Input.ICommandSource.CommandParameter" /> property of the <see cref="T:System.Windows.FrameworkElement" /> is passed as parameters to the <see cref="T:System.Windows.Input.ICommand" /> instance.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.EventBindingExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.EventBindingExtension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.EventBindingExtension.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.EventBindingExtension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.EventBindingExtension.Command" /> based on the provided <see cref="T:System.String" /> value.
            </summary>
            <param name="command">A <see cref="T:System.String" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.EventBindingExtension.Command" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.EventBindingExtension.EventHandlerImpl(System.Object,System.String)">
            <summary>
            Do not use! Implements the method that is called by the underlying event handler.
            </summary>
            <param name="sender">The sender argument of the original event handler.</param>
            <param name="commandName">The name of the command delegated by the original event handler.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.EventBindingExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Delegate" /> that is created from the parameters supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.EventBindingExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Delegate" /> value that is created from the parameters supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.EventBindingExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.IconExtension">
            <summary>
            Implements icon support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.IconExtension.Source">
            <summary>
            Gets or sets the source of the icon.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.IconExtension.Size">
            <summary>
            Gets or sets the size (the width) of the icon.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.IconExtension.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.IconExtension" /> class, initializing <paramref name="source" /> and <paramref name="size" /> based on the provided values.
            </summary>
            <param name="source">A <see cref="T:System.String" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.IconExtension.Source" />.</param>
            <param name="size">A <see cref="T:System.Int32" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.IconExtension.Size" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.IconExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> value that is computed from the parameters supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.IconExtension" />. If the specified icon size could not be found, the smallest icon is returned that is larger than <see cref="P:BytecodeApi.UI.Markup.IconExtension.Size" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> value that is computed from the parameters supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.IconExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.Int16Extension">
            <summary>
            Implements <see cref="T:System.Int16" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.Int16Extension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Int16" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.Int16Extension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.Int16Extension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.Int16Extension.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.Int16Extension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.Int16Extension.Value" /> based on the provided <see cref="T:System.Int16" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Int16" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.Int16Extension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.Int16Extension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Int16" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.Int16Extension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Int16" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.Int16Extension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.Int32Extension">
            <summary>
            Implements <see cref="T:System.Int32" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.Int32Extension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Int32" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.Int32Extension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.Int32Extension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.Int32Extension.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.Int32Extension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.Int32Extension.Value" /> based on the provided <see cref="T:System.Int32" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Int32" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.Int32Extension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.Int32Extension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Int32" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.Int32Extension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Int32" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.Int32Extension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.Int64Extension">
            <summary>
            Implements <see cref="T:System.Int64" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.Int64Extension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Int64" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.Int64Extension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.Int64Extension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.Int64Extension.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.Int64Extension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.Int64Extension.Value" /> based on the provided <see cref="T:System.Int64" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Int64" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.Int64Extension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.Int64Extension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Int64" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.Int64Extension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Int64" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.Int64Extension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.SByteExtension">
            <summary>
            Implements <see cref="T:System.SByte" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.SByteExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.SByte" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.SByteExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.SByteExtension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.SByteExtension.#ctor(System.SByte)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.SByteExtension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.SByteExtension.Value" /> based on the provided <see cref="T:System.SByte" /> value.
            </summary>
            <param name="value">A <see cref="T:System.SByte" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.SByteExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.SByteExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.SByte" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.SByteExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.SByte" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.SByteExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.TypeExtensionMethod">
            <summary>
            Specifies the method that is used to convert <see cref="T:System.Type" /> values.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Markup.TypeExtensionMethod.EnumValues">
            <summary>
            Returns an array of the values of the constants in the specified <see cref="T:System.Enum" /> type.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Markup.TypeExtensionMethod.EnumDescriptions">
            <summary>
            Returns an array of the description values of the constants in the specified <see cref="T:System.Enum" /> type. The description is taken from the <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> attribute, or <see langword="null" />, if the attribute was not found.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Markup.TypeExtensionMethod.EnumDescriptionLookup">
            <summary>
            Gets a lookup <see cref="T:System.Collections.Generic.Dictionary`2" /> with all distinct <see langword="enum" /> values and descriptions for the specified <see cref="T:System.Enum" /> type. The description is taken from the <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> attribute, or <see langword="null" />, if the attribute was not found.
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Markup.TypeExtension">
            <summary>
            Implements <see cref="T:System.Type" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.TypeExtension.Type">
            <summary>
            Gets or sets the <see cref="T:System.Type" /> that is processed.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.TypeExtension.Method">
            <summary>
            Specifies the method that is used to convert the <see cref="T:System.Type" /> value.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.TypeExtension.#ctor(System.Type,BytecodeApi.UI.Markup.TypeExtensionMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.TypeExtension" /> class, initializing <paramref name="type" /> and <paramref name="method" /> based on the provided values.
            </summary>
            <param name="type">The <see cref="T:System.Type" /> that is processed.</param>
            <param name="method">The method that is used to convert the <see cref="T:System.Type" /> value.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns an <see cref="T:System.Object" /> value that is converted from the parameters supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.TypeExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            An <see cref="T:System.Object" /> value that is converted from the parameters supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.TypeExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.SingleExtension">
            <summary>
            Implements <see cref="T:System.Single" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.SingleExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Single" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.SingleExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.SingleExtension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.SingleExtension.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.SingleExtension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.SingleExtension.Value" /> based on the provided <see cref="T:System.Single" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Single" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.SingleExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.SingleExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="P:BytecodeApi.UI.Markup.SingleExtension.Value" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.SingleExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="P:BytecodeApi.UI.Markup.SingleExtension.Value" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.SingleExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.StringExtension">
            <summary>
            Implements <see cref="T:System.String" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.StringExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.String" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.StringExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.StringExtension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.StringExtension.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.StringExtension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.StringExtension.Value" /> based on the provided <see cref="T:System.String" /> value.
            </summary>
            <param name="value">A <see cref="T:System.String" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.StringExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.StringExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.StringExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.String" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.StringExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.UInt16Extension">
            <summary>
            Implements <see cref="T:System.UInt16" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.UInt16Extension.Value">
            <summary>
            Gets or sets the <see cref="T:System.UInt16" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.UInt16Extension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.UInt16Extension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.UInt16Extension.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.UInt16Extension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.UInt16Extension.Value" /> based on the provided <see cref="T:System.UInt16" /> value.
            </summary>
            <param name="value">A <see cref="T:System.UInt16" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.UInt16Extension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.UInt16Extension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.UInt16" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.UInt16Extension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.UInt16" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.UInt16Extension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.TimeSpanExtension">
            <summary>
            Implements <see cref="T:System.TimeSpan" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.TimeSpanExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.TimeSpanExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.TimeSpanExtension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.TimeSpanExtension.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.TimeSpanExtension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.TimeSpanExtension.Value" /> based on the provided <see cref="T:System.Int32" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Int32" /> value represeting the milliseconds fraction of a <see cref="T:System.TimeSpan" /> that is assigned to <see cref="P:BytecodeApi.UI.Markup.TimeSpanExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.TimeSpanExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.TimeSpan" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.TimeSpanExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.TimeSpan" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.TimeSpanExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.UInt32Extension">
            <summary>
            Implements <see cref="T:System.UInt32" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.UInt32Extension.Value">
            <summary>
            Gets or sets the <see cref="T:System.UInt32" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.UInt32Extension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.UInt32Extension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.UInt32Extension.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.UInt32Extension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.UInt32Extension.Value" /> based on the provided <see cref="T:System.UInt32" /> value.
            </summary>
            <param name="value">A <see cref="T:System.UInt32" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.UInt32Extension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.UInt32Extension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.UInt32" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.UInt32Extension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.UInt32" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.UInt32Extension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Markup.UInt64Extension">
            <summary>
            Implements <see cref="T:System.UInt64" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Markup.UInt64Extension.Value">
            <summary>
            Gets or sets the <see cref="T:System.UInt64" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.UInt64Extension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.UInt64Extension" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Markup.UInt64Extension.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Markup.UInt64Extension" /> class, initializing <see cref="P:BytecodeApi.UI.Markup.UInt64Extension.Value" /> based on the provided <see cref="T:System.UInt64" /> value.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value that is assigned to <see cref="P:BytecodeApi.UI.Markup.UInt64Extension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Markup.UInt64Extension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.UInt64" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.UInt64Extension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.UInt64" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UI.Markup.UInt64Extension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Mathematics.ProgressCalculator">
            <summary>
            Represents a performance counter for progress calculations, typically used in binary transfers (file transferring, downloads, ...)
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Value">
            <summary>
            Gets or sets the value indicating the total progress. This is typically the amount of transferred bytes in a binary transfer operation.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Mathematics.ProgressCalculator.MaxValue">
            <summary>
            Gets or sets the expected maximum value. This is typically the total size in bytes in a binary transfer operation. If <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.MaxValue" /> is <see langword="null" />, values calculated based on it will also be <see langword="null" />. This is useful for display of an indeterminate status of progress bars.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Mathematics.ProgressCalculator.MeasureTimeSpan">
            <summary>
            Gets or sets the interval in which <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Value" /> is measured. The <see cref="E:BytecodeApi.UI.Mathematics.ProgressCalculator.Measured" /> event is raised in the approximate interval of this value, however only after <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Value" /> has changed.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Progress">
            <summary>
            Gets a <see cref="T:System.Double" /> value indicating the progress. This value is between 0.0 and 1.0, if <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Value" /> is in bounds of 0.0 and <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.MaxValue" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Mathematics.ProgressCalculator.ProgressPercentage">
            <summary>
            Gets a <see cref="T:System.Double" /> value indicating the progress in percent. This value is between 0.0 and 100.0, if <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Value" /> is in bounds of 0.0 and <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.MaxValue" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Difference">
            <summary>
            Gets the difference of the <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Value" /> property between the last two measurements.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Mathematics.ProgressCalculator.DifferencePerSecond">
            <summary>
            Gets the difference of the <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Value" /> property between the last two measurements, interpolated to one second based on <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.MeasureTimeSpan" />.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.Mathematics.ProgressCalculator.ValueChanged">
            <summary>
            Occurs when the <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Value" /> property changed.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.Mathematics.ProgressCalculator.Measured">
            <summary>
            Occurs when the <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Value" /> property changed and the interval specified in <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.MeasureTimeSpan" /> has been reached.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Mathematics.ProgressCalculator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Mathematics.ProgressCalculator" /> class with no maximum value and a measurement interval of 1 second.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Mathematics.ProgressCalculator.#ctor(System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Mathematics.ProgressCalculator" /> class with the specified maximum value and a measurement interval of 1 second.
            </summary>
            <param name="maxValue">A <see cref="T:System.Double" /> value indicating the maximum expected value for <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UI.Mathematics.ProgressCalculator.#ctor(System.Nullable{System.Double},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Mathematics.ProgressCalculator" /> class with the specified maximum value and the specified measurement interval.
            </summary>
            <param name="maxValue">A <see cref="T:System.Double" /> value indicating the maximum expected value for <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Value" />.</param>
            <param name="measureTimeSpan">A <see cref="T:System.TimeSpan" /> value indicating the interval in which to measure the progress.</param>
        </member>
        <member name="M:BytecodeApi.UI.Mathematics.ProgressCalculator.OnValueChanged(BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Mathematics.ProgressCalculator.ValueChanged" /> event.
            </summary>
            <param name="e">The event data for the <see cref="E:BytecodeApi.UI.Mathematics.ProgressCalculator.ValueChanged" /> event.</param>
        </member>
        <member name="M:BytecodeApi.UI.Mathematics.ProgressCalculator.OnMeasured(BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.Mathematics.ProgressCalculator.Measured" /> event.
            </summary>
            <param name="e">The event data for the <see cref="E:BytecodeApi.UI.Mathematics.ProgressCalculator.Measured" /> event.</param>
        </member>
        <member name="T:BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs">
            <summary>
            Provides data for <see cref="T:BytecodeApi.UI.Mathematics.ProgressCalculator" /> events.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs.Value">
            <summary>
            Gets the value indicating the total progress. This is typically the amount of transferred bytes in a binary transfer operation.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs.Progress">
            <summary>
            Gets a <see cref="T:System.Double" /> value indicating the progress. This value is between 0.0 and 1.0, if <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs.Value" /> is in bounds of 0.0 and <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.MaxValue" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs.ProgressPercentage">
            <summary>
            Gets a <see cref="T:System.Double" /> value indicating the progress in percent. This value is between 0.0 and 100.0, if <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs.Value" /> is in bounds of 0.0 and <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.MaxValue" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs.Difference">
            <summary>
            Gets the difference of the <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs.Value" /> property between the last two measurements.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs.DifferencePerSecond">
            <summary>
            Gets the difference of the <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs.Value" /> property between the last two measurements, interpolated to one second based on <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.MeasureTimeSpan" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs.#ctor(System.Double,System.Nullable{System.Double},System.Nullable{System.Double},System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.Mathematics.ProgressCalculatorEventArgs" /> class using the specified properties equivalent to the properties of <see cref="T:BytecodeApi.UI.Mathematics.ProgressCalculator" />.
            </summary>
            <param name="value">The value representing the <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Value" /> property.</param>
            <param name="progress">The value representing the <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Progress" /> property.</param>
            <param name="progressPercentage">The value representing the <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.ProgressPercentage" /> property.</param>
            <param name="difference">The value representing the <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.Difference" /> property.</param>
            <param name="differencePerSecond">The value representing the <see cref="P:BytecodeApi.UI.Mathematics.ProgressCalculator.DifferencePerSecond" /> property.</param>
        </member>
        <member name="T:BytecodeApi.UI.DependencyPropertyEx">
            <summary>
            Provides <see langword="static" /> methods that extend the <see cref="T:System.Windows.DependencyProperty" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.DependencyPropertyEx.Register(System.String)">
            <summary>
            Registers a dependency property with the specified property name. Property and owner types are automatically detected.
            <para>Example: <see langword="public" /> <see langword="static" /> <see langword="readonly" /> <see cref="T:System.Windows.DependencyProperty" /> FooProperty = <see cref="T:BytecodeApi.UI.DependencyPropertyEx" />.Register(<see langword="nameof" />(Foo));</para>
            </summary>
            <param name="name">The name of the dependency property to register. The name must be unique within the registration namespace of the owner type.</param>
            <returns>
            A dependency property identifier that should be used to set the value of a <see langword="public" /> <see langword="static" /> <see langword="readonly" /> field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.DependencyPropertyEx.Register(System.String,System.Windows.PropertyMetadata)">
            <summary>
            Registers a dependency property with the specified property name and property metadata. Property and owner types are automatically detected.
            <para>Example: <see langword="public" /> <see langword="static" /> <see langword="readonly" /> <see cref="T:System.Windows.DependencyProperty" /> FooProperty = <see cref="T:BytecodeApi.UI.DependencyPropertyEx" />.Register(<see langword="nameof" />(Foo), new <see cref="T:System.Windows.PropertyMetadata" />());</para>
            </summary>
            <param name="name">The name of the dependency property to register. The name must be unique within the registration namespace of the owner type.</param>
            <param name="typeMetadata">Property metadata for the dependency property.</param>
            <returns>
            A dependency property identifier that should be used to set the value of a <see langword="public" /> <see langword="static" /> <see langword="readonly" /> field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.DependencyPropertyEx.Register(System.String,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
            <summary>
            Registers a dependency property with the specified property name, property metadata, and a value validation callback for the property. Property and owner types are automatically detected.
            <para>Example: <see langword="public" /> <see langword="static" /> <see langword="readonly" /> <see cref="T:System.Windows.DependencyProperty" /> FooProperty = <see cref="T:BytecodeApi.UI.DependencyPropertyEx" />.Register(<see langword="nameof" />(Foo), new <see cref="T:System.Windows.PropertyMetadata" />(), new <see cref="T:System.Windows.ValidateValueCallback" />());</para>
            </summary>
            <param name="name">The name of the dependency property to register. The name must be unique within the registration namespace of the owner type.</param>
            <param name="typeMetadata">Property metadata for the dependency property.</param>
            <param name="validateValueCallback">A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.</param>
            <returns>
            A dependency property identifier that should be used to set the value of a <see langword="public" /> <see langword="static" /> <see langword="readonly" /> field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.DependencyPropertyEx.RegisterReadOnly(System.String,System.Windows.PropertyMetadata)">
            <summary>
            Registers a read-only dependency property, with the specified property name and property metadata. Property and owner types are automatically detected.
            <para>Example: <see langword="public" /> <see langword="static" /> <see langword="readonly" /> <see cref="T:System.Windows.DependencyPropertyKey" /> FooKey = <see cref="T:BytecodeApi.UI.DependencyPropertyEx" />.RegisterReadOnly(<see langword="nameof" />(Foo), new <see cref="T:System.Windows.PropertyMetadata" />());</para>
            </summary>
            <param name="name">The name of the dependency property to register. The name must be unique within the registration namespace of the owner type.</param>
            <param name="typeMetadata">Property metadata for the dependency property.</param>
            <returns>
            A dependency property key that should be used to set the value of a <see langword="static" /> <see langword="readonly" /> field in your class, which is then used to reference the dependency property.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.DependencyPropertyEx.RegisterReadOnly(System.String,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
            <summary>
            Registers a read-only dependency property, with the specified property name, property metadata, and a validation callback. Property and owner types are automatically detected.
            <para>Example: <see langword="public" /> <see langword="static" /> <see langword="readonly" /> <see cref="T:System.Windows.DependencyPropertyKey" /> FooKey = <see cref="T:BytecodeApi.UI.DependencyPropertyEx" />.RegisterReadOnly(<see langword="nameof" />(Foo), new <see cref="T:System.Windows.PropertyMetadata" />(), new <see cref="T:System.Windows.ValidateValueCallback" />());</para>
            </summary>
            <param name="name">The name of the dependency property to register. The name must be unique within the registration namespace of the owner type.</param>
            <param name="typeMetadata">Property metadata for the dependency property.</param>
            <param name="validateValueCallback">A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.</param>
            <returns>
            A dependency property key that should be used to set the value of a <see langword="static" /> <see langword="readonly" /> field in your class, which is then used to reference the dependency property.
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.Packs">
            <summary>
            Represents the URI prefixes for WPF pack URIs with the "pack://" scheme.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Packs.Application">
            <summary>
            Represents the "application:///" authority. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.Packs.SiteOfOrigin">
            <summary>
            Represents the "siteoforigin:///" authority. This field is constant.
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.Properties.Resources.FileGrayscaleEffect">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="T:BytecodeApi.UI.HotKey">
            <summary>
            Class for registration of system-wide hotkeys in UI applications.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.HotKey.Key">
            <summary>
            Get the key associated with this hotkey.
            </summary>
        </member>
        <member name="P:BytecodeApi.UI.HotKey.Modifiers">
            <summary>
            Get the modifier keys associated with this hotkey.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.HotKey.Pressed">
            <summary>
            Occurs when the hotkey was pressed.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.HotKey.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.HotKey" /> class with the specified key and modifier.
            </summary>
            <param name="key">The key associated with this hotkey.</param>
            <param name="modifiers">The modifier keys associated with this hotkey.</param>
        </member>
        <member name="M:BytecodeApi.UI.HotKey.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:BytecodeApi.UI.HotKey" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.HotKey.RegisterWindow(System.Windows.Window)">
            <summary>
            Registers a <see cref="T:System.Windows.Window" /> object that identifies as the main application window.
            </summary>
            <param name="window">The <see cref="T:System.Windows.Window" /> object identifying as the main application window.</param>
        </member>
        <member name="M:BytecodeApi.UI.HotKey.RegisterWindow(System.IntPtr)">
            <summary>
            Registers a window handle (HWND) that identifies as the main application window.
            </summary>
            <param name="handle">A <see cref="T:System.IntPtr" /> representing window handle (HWND).</param>
        </member>
        <member name="M:BytecodeApi.UI.HotKey.OnPressed(BytecodeApi.UI.HotKeyEventArgs)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.HotKey.Pressed" /> event.
            </summary>
            <param name="e">The event data for the <see cref="E:BytecodeApi.UI.HotKey.Pressed" /> event.</param>
        </member>
        <member name="T:BytecodeApi.UI.SingleInstance">
            <summary>
            Class for managing single instance UI applications. A second instance can detect an already running instance and notify the first instance.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.SingleInstance.Activated">
            <summary>
            Occurs when <see cref="M:BytecodeApi.UI.SingleInstance.SendActivationMessage" /> is called by another running instance.
            </summary>
        </member>
        <member name="E:BytecodeApi.UI.SingleInstance.MessageReceived">
            <summary>
            Occurs when <see cref="M:BytecodeApi.UI.SingleInstance.SendMessage(System.String)" /> is called by another running instance.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.SingleInstance.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UI.SingleInstance" /> class and registers a <see cref="T:System.Threading.Mutex" /> and a WindowMessage using the specified identifier.
            </summary>
            <param name="identifier">A <see cref="T:System.String" /> representing the identifier for the <see cref="T:System.Threading.Mutex" /> and the WindowMessage.</param>
        </member>
        <member name="M:BytecodeApi.UI.SingleInstance.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:BytecodeApi.UI.SingleInstance" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.SingleInstance.RegisterWindow(System.Windows.Window)">
            <summary>
            Registers a <see cref="T:System.Windows.Window" /> object that identifies as the main application window.
            </summary>
            <param name="window">The <see cref="T:System.Windows.Window" /> object identifying as the main application window.</param>
        </member>
        <member name="M:BytecodeApi.UI.SingleInstance.RegisterWindow(System.IntPtr)">
            <summary>
            Registers a window handle (HWND) that identifies as the main application window.
            </summary>
            <param name="handle">A <see cref="T:System.IntPtr" /> representing window handle (HWND).</param>
        </member>
        <member name="M:BytecodeApi.UI.SingleInstance.CheckInstanceRunning">
            <summary>
            Checks whether an instance is already running by querying the <see cref="T:System.Threading.Mutex" />.
            </summary>
            <returns>
            <see langword="true" />, if an instance is already running;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UI.SingleInstance.SendActivationMessage">
            <summary>
            Sends a notification to other running instances. The <see cref="E:BytecodeApi.UI.SingleInstance.Activated" /> event will be triggered in all instances, except the current.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.SingleInstance.SendMessage(System.String)">
            <summary>
            Sends a message to other running instances. The <see cref="E:BytecodeApi.UI.SingleInstance.MessageReceived" /> event will be triggered in all instances, except the current.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.SingleInstance.OnActivated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.SingleInstance.Activated" /> event.
            </summary>
            <param name="e">The event data for the <see cref="E:BytecodeApi.UI.SingleInstance.Activated" /> event.</param>
        </member>
        <member name="M:BytecodeApi.UI.SingleInstance.OnMessageReceived(System.String)">
            <summary>
            Raises the <see cref="E:BytecodeApi.UI.SingleInstance.MessageReceived" /> event.
            </summary>
            <param name="message">The message for the <see cref="E:BytecodeApi.UI.SingleInstance.MessageReceived" /> event.</param>
        </member>
        <member name="T:BytecodeApi.UI.UIContext">
            <summary>
            Helper class to retrieve the DataContext property from <see cref="T:System.Windows.FrameworkElement" /> and <see cref="T:System.Windows.FrameworkContentElement" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.UI.UIContext.Find``1(System.Object)">
            <summary>
            Returns the DataContext property, if the specified <see cref="T:System.Object" /> instance is either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />. If found and can be casted to the specified type, the DataContext is returned, otherwise, <see langword="default" />(<typeparamref name="T" />).
            </summary>
            <typeparam name="T">The return type to cast the DataContext property to.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> where the DataContext property looked for. This is typically a parameter from a WPF event handler.</param>
            <returns>
            <see cref="P:System.Windows.FrameworkElement.DataContext" />, if <paramref name="obj" /> is a <see cref="T:System.Windows.FrameworkElement" />;
            <see cref="P:System.Windows.FrameworkContentElement.DataContext" />, if <paramref name="obj" /> instance is a <see cref="T:System.Windows.FrameworkContentElement" />;
            otherwise, <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="T:BytecodeApi.UI.UITreeType">
            <summary>
            Specifies the type of the WPF tree.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.UITreeType.Logical">
            <summary>
            Specifies the WPF logical tree. For traversing operations, <see cref="T:System.Windows.LogicalTreeHelper" /> is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.UI.UITreeType.Visual">
            <summary>
            Specifies the WPF visual tree. For traversing operations, <see cref="T:System.Windows.Media.VisualTreeHelper" /> is used.
            </summary>
        </member>
    </members>
</doc>
