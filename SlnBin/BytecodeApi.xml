<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BytecodeApi</name>
    </assembly>
    <members>
        <member name="T:BytecodeApi.CachedProperty`1">
            <summary>
            Represents a wrapper for a value that is cached in a backing field and retrieved only once, or only after a certain period of time has passed.
            </summary>
            <typeparam name="T">The type of the wrapped value.</typeparam>
        </member>
        <member name="P:BytecodeApi.CachedProperty`1.Timeout">
            <summary>
            Gets or sets a <see cref="T:System.TimeSpan" /> value that specifies a duration, after which the value is retrieved again, or <see langword="null" />, if the value should only be retrieved on the first time it is accessed. If not <see langword="null" />, the value is retrieved only after both the timeout period has been reached and it is accessed.
            </summary>
        </member>
        <member name="P:BytecodeApi.CachedProperty`1.HasValue">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether the value is currently set. Returns <see langword="true" /> after the getter has been invoked, regardless of the timeout period. After calling <see cref="M:BytecodeApi.CachedProperty`1.Invalidate" />, this property is set to <see langword="false" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.CachedProperty`1.Value">
            <summary>
            Gets the current value, but does not invoke the getter. Prior to getter invocation, or if <see cref="P:BytecodeApi.CachedProperty`1.HasValue" /> is <see langword="false" />, this property is <see langword="default" />(<typeparamref name="T" />).
            </summary>
        </member>
        <member name="M:BytecodeApi.CachedProperty`1.#ctor(System.Func{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.CachedProperty`1" /> class with the specified getter function.
            </summary>
            <param name="getter">The getter, which is invoked when the value needs to be retrieved (lazy loading). This is either on the first time the value is accessed, or if the value is accessed and a timeout is specified and reached.</param>
        </member>
        <member name="M:BytecodeApi.CachedProperty`1.#ctor(System.Func{`0},System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.CachedProperty`1" /> class with the specified getter function.
            </summary>
            <param name="getter">The getter, which is invoked when the value needs to be retrieved (lazy loading). This is either on the first time the value is accessed, or if the value is accessed and a timeout is specified and reached.</param>
            <param name="timeout">A <see cref="T:System.TimeSpan" /> value that specifies a duration, after which the value is retrieved again, or <see langword="null" />, if the value should only be retrieved on the first time it is accessed. If not <see langword="null" />, the value is retrieved only after both the timeout period has been reached and it is accessed.</param>
        </member>
        <member name="M:BytecodeApi.CachedProperty`1.Get">
            <summary>
            Returns the value of this <see cref="T:BytecodeApi.CachedProperty`1" /> instance. This will invoke the getter, if required.
            </summary>
            <returns>
            The value of this <see cref="T:BytecodeApi.CachedProperty`1" /> instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.CachedProperty`1.Invalidate">
            <summary>
            Resets the value to its initial state. The next time the value is accessed, the getter will be invoked.
            </summary>
        </member>
        <member name="M:BytecodeApi.CachedProperty`1.InvokeGetter">
            <summary>
            Invokes the getter and sets the value accordingly, regardless of its existence or the timeout period.
            </summary>
            <returns>
            The value that has been retrieved, which is the equivalent to <see cref="P:BytecodeApi.CachedProperty`1.Value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CachedProperty`1.op_Implicit(BytecodeApi.CachedProperty{`0})~`0">
            <summary>
            Performs an implicit conversion from <see cref="T:BytecodeApi.CachedProperty`1" /> to the underlying value and returns this value. The getter will be invoked, if required. This is equivalent to <see cref="M:BytecodeApi.CachedProperty`1.Get" />.
            </summary>
            <param name="property">The <see cref="T:BytecodeApi.CachedProperty`1" /> instance to retrieve the value from.</param>
            <returns>
            The value that this <see cref="T:BytecodeApi.CachedProperty`1" /> instance retrieved.
            </returns>
        </member>
        <member name="T:BytecodeApi.Comparers.DelegateEqualityComparer`1">
            <summary>
            Represents an equality comparison operation that compares objects using a specified <see cref="T:System.Func`3" /> delegate.
            </summary>
            <typeparam name="T">The type of objects to compare.</typeparam>
        </member>
        <member name="P:BytecodeApi.Comparers.DelegateEqualityComparer`1.Comparison">
            <summary>
            The <see cref="T:System.Func`3" /> delegate that is used to compare objects for equality.
            </summary>
        </member>
        <member name="P:BytecodeApi.Comparers.DelegateEqualityComparer`1.HashCode">
            <summary>
            The <see cref="T:System.Func`2" /> delegate that is used to compute the hash code.
            </summary>
        </member>
        <member name="M:BytecodeApi.Comparers.DelegateEqualityComparer`1.#ctor(System.Func{`0,`0,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Comparers.DelegateEqualityComparer`1" /> class with the specified comparison delegate.
            </summary>
            <param name="comparison">The <see cref="T:System.Func`3" /> delegate that is used to compare objects for equality.</param>
        </member>
        <member name="M:BytecodeApi.Comparers.DelegateEqualityComparer`1.#ctor(System.Func{`0,`0,System.Boolean},System.Func{`0,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Comparers.DelegateEqualityComparer`1" /> class with the specified comparison and hash code delegate.
            </summary>
            <param name="comparison">The <see cref="T:System.Func`3" /> delegate that is used to compare objects for equality.</param>
            <param name="hashCode">The <see cref="T:System.Func`2" /> delegate that is used to compute the hash code. If <see langword="null" />, a default hash code algorithm is used.</param>
        </member>
        <member name="M:BytecodeApi.Comparers.DelegateEqualityComparer`1.Equals(`0,`0)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type <typeparamref name="T" /> to compare.</param>
            <param name="y">The second object of type <typeparamref name="T" /> to compare.</param>
            <returns>
            <see langword="true" />, if the specified objects are equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Comparers.DelegateEqualityComparer`1.GetHashCode(`0)">
            <summary>
            Returns a hash code for the specified object, based on the <see cref="P:BytecodeApi.Comparers.DelegateEqualityComparer`1.HashCode" /> delegate. If the property is <see langword="null" />, a default hash code algorithm is used.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> for which a hash code is to be returned.</param>
            <returns>
            A hash code for the specified object.
            </returns>
        </member>
        <member name="T:BytecodeApi.Comparers.DelegateComparer`1">
            <summary>
            Represents a comparison operation that compares objects using a specified <see cref="T:System.Comparison`1" /> delegate.
            </summary>
            <typeparam name="T">The type of objects to compare.</typeparam>
        </member>
        <member name="P:BytecodeApi.Comparers.DelegateComparer`1.Comparison">
            <summary>
            The <see cref="T:System.Comparison`1" /> delegate that is used to compare objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Comparers.DelegateComparer`1.#ctor(System.Comparison{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Comparers.DelegateComparer`1" /> class with the specified <see cref="T:System.Comparison`1" /> delegate.
            </summary>
            <param name="comparison">The <see cref="T:System.Comparison`1" /> delegate that is used to compare objects.</param>
        </member>
        <member name="M:BytecodeApi.Comparers.DelegateComparer`1.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns an indication of their relative sort order. Specified <see cref="T:System.Object" /> parameters that are not of the specified type are treated as <see langword="null" />.
            </summary>
            <param name="x">An <see cref="T:System.Object" /> to compare to <paramref name="y" />.</param>
            <param name="y">An <see cref="T:System.Object" /> to compare to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Comparers.DelegateComparer`1.Compare(`0,`0)">
            <summary>
            Compares two objects and returns an indication of their relative sort order.
            </summary>
            <param name="x">An <see cref="T:System.Object" /> to compare to <paramref name="y" />.</param>
            <param name="y">An <see cref="T:System.Object" /> to compare to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Comparers.SpecialStringComparer">
            <summary>
            Represents a <see cref="T:System.String" /> comparison operation that compares strings using specified <see cref="T:BytecodeApi.SpecialStringComparisons" /> flags.
            </summary>
        </member>
        <member name="P:BytecodeApi.Comparers.SpecialStringComparer.Comparison">
            <summary>
            Gets the <see cref="T:BytecodeApi.SpecialStringComparisons" /> flags specifying what comparison properties apply.
            </summary>
        </member>
        <member name="M:BytecodeApi.Comparers.SpecialStringComparer.#ctor(BytecodeApi.SpecialStringComparisons)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Comparers.SpecialStringComparer" /> class with the specified comparison flags.
            </summary>
            <param name="comparison">The <see cref="T:BytecodeApi.SpecialStringComparisons" /> flags specifying what comparison properties apply.</param>
        </member>
        <member name="M:BytecodeApi.Comparers.SpecialStringComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two <see cref="T:System.String" /> objects and returns an indication of their relative sort order. Specified <see cref="T:System.Object" /> parameters that are not <see cref="T:System.String" /> objects are treated as <see langword="null" />.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Comparers.SpecialStringComparer.Compare(System.String,System.String)">
            <summary>
            Compares two <see cref="T:System.String" /> objects and returns an indication of their relative sort order.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Comparers.AlwaysEqualComparer">
            <summary>
            Represents an <see cref="T:System.Object" /> comparison operation that always returns 0.
            </summary>
        </member>
        <member name="M:BytecodeApi.Comparers.AlwaysEqualComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Comparers.AlwaysEqualComparer" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.Comparers.AlwaysEqualComparer.Compare(System.Object,System.Object)">
            <summary>
            Takes two <see cref="T:System.Object" /> parameters, but always returns 0;
            </summary>
            <param name="x">An <see cref="T:System.Object" /> to compare to <paramref name="y" />.</param>
            <param name="y">An <see cref="T:System.Object" /> to compare to <paramref name="x" />.</param>
            <returns>
            This method always returns 0.
            </returns>
        </member>
        <member name="T:BytecodeApi.Comparers.IEnumerableCountComparer`1">
            <summary>
            Represents a comparison operation that compares the result of the Count() method of <see cref="T:System.Collections.Generic.IEnumerable`1" /> objects. Each call of <see cref="M:BytecodeApi.Comparers.IEnumerableCountComparer`1.Compare(System.Object,System.Object)" /> invokes the Count() method on the <see cref="T:System.Collections.Generic.IEnumerable`1" />.
            </summary>
            <typeparam name="TSource">The type of the elements of the compared collections.</typeparam>
        </member>
        <member name="M:BytecodeApi.Comparers.IEnumerableCountComparer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Comparers.IEnumerableCountComparer`1" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.Comparers.IEnumerableCountComparer`1.Compare(System.Object,System.Object)">
            <summary>
            Compares the result of the Count() method of two <see cref="T:System.Collections.Generic.IEnumerable`1" /> objects and returns an indication of their relative sort order. Specified <see cref="T:System.Object" /> parameters that are not <see cref="T:System.Collections.Generic.IEnumerable`1" /> objects are treated as <see langword="null" />.
            </summary>
            <param name="x">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to compare the result of the Count() method to the result of the Count() method of <paramref name="y" />.</param>
            <param name="y">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to compare the result of the Count() method to the result of the Count() method of <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of the result of the Count() method of <paramref name="x" /> and the result of the Count() method of <paramref name="y" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Comparers.IEnumerableCountComparer`1.Compare(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Compares the result of the Count() method of two <see cref="T:System.Collections.Generic.IEnumerable`1" /> objects and returns an indication of their relative sort order.
            </summary>
            <param name="x">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to compare the result of the Count() method to the result of the Count() method of <paramref name="y" />.</param>
            <param name="y">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to compare the result of the Count() method to the result of the Count() method of <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of the result of the Count() method of <paramref name="x" /> and the result of the Count() method of <paramref name="y" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Comparers.StringLengthTrimmedComparer">
            <summary>
            Represents a comparison operation that compares the <see cref="P:System.String.Length" /> property of <see cref="T:System.String" /> objects, where trailing and leading whitespaces are ignored.
            </summary>
        </member>
        <member name="M:BytecodeApi.Comparers.StringLengthTrimmedComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Comparers.StringLengthTrimmedComparer" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.Comparers.StringLengthTrimmedComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares the <see cref="P:System.String.Length" /> property of two <see cref="T:System.String" /> objects, ignoring trailing and leading whitespaces, and returns an indication of their relative sort order. Specified <see cref="T:System.Object" /> parameters that are not <see cref="T:System.String" /> objects are treated as <see langword="null" />.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of the <see cref="P:System.String.Length" /> property of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Comparers.StringLengthTrimmedComparer.Compare(System.String,System.String)">
            <summary>
            Compares the <see cref="P:System.String.Length" /> property of two <see cref="T:System.String" /> objects, ignoring trailing and leading whitespaces, and returns an indication of their relative sort order.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of the <see cref="P:System.String.Length" /> property of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Comparers.StringLengthComparer">
            <summary>
            Represents a comparison operation that compares the <see cref="P:System.String.Length" /> property of <see cref="T:System.String" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Comparers.StringLengthComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Comparers.StringLengthComparer" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.Comparers.StringLengthComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares the <see cref="P:System.String.Length" /> property of two <see cref="T:System.String" /> objects and returns an indication of their relative sort order. Specified <see cref="T:System.Object" /> parameters that are not <see cref="T:System.String" /> objects are treated as <see langword="null" />.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of the <see cref="P:System.String.Length" /> property of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Comparers.StringLengthComparer.Compare(System.String,System.String)">
            <summary>
            Compares the <see cref="P:System.String.Length" /> property of two <see cref="T:System.String" /> objects and returns an indication of their relative sort order.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of the <see cref="P:System.String.Length" /> property of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Comparers.NaturalStringComparer">
            <summary>
            Represents a <see cref="T:System.String" /> comparison operation that uses natural <see cref="T:System.String" /> comparison.
            </summary>
        </member>
        <member name="M:BytecodeApi.Comparers.NaturalStringComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Comparers.NaturalStringComparer" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.Comparers.NaturalStringComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two <see cref="T:System.String" /> objects and returns an indication of their relative sort order. Specified <see cref="T:System.Object" /> parameters that are not <see cref="T:System.String" /> objects are treated as <see langword="null" />.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Comparers.NaturalStringComparer.Compare(System.String,System.String)">
            <summary>
            Compares two <see cref="T:System.String" /> objects and returns an indication of their relative sort order.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Data.ObjectEventArgs`1">
            <summary>
            Provides data for the <see cref="T:BytecodeApi.Data.ObjectEventHandler`1" /> event handler.
            </summary>
            <typeparam name="T">The type of the event data.</typeparam>
        </member>
        <member name="P:BytecodeApi.Data.ObjectEventArgs`1.Value">
            <summary>
            Gets or sets the event data associated with the <see cref="T:BytecodeApi.Data.ObjectEventHandler`1" /> event.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.ObjectEventArgs`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.ObjectEventArgs`1" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.ObjectEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.ObjectEventArgs`1" /> class with the specified value.
            </summary>
            <param name="value">The value to initialize this <see cref="T:BytecodeApi.Data.ObjectEventArgs`1" /> with.</param>
        </member>
        <member name="T:BytecodeApi.Data.ObjectEventHandler`1">
            <summary>
            Represents the method that will handle an event with data of a specified type.
            </summary>
            <typeparam name="T">The type of the event data associated with the event.</typeparam>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:BytecodeApi.Data.ObjectEventArgs`1" /> object that contains the event data.</param>
        </member>
        <member name="T:BytecodeApi.Data.BlobTree">
            <summary>
            Represents a hierarchical collection of <see cref="T:BytecodeApi.Data.Blob" /> objects that represent a tree, such as a directory structure.
            </summary>
        </member>
        <member name="P:BytecodeApi.Data.BlobTree.Root">
            <summary>
            Gets the root node of this <see cref="T:BytecodeApi.Data.BlobTree" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.BlobTree.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.BlobTree" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.BlobTree.FromDirectory(System.String)">
            <summary>
            Creates a hierarchical <see cref="T:BytecodeApi.Data.BlobTree" /> object from the specified directory by traversing it recursively.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path to a directory from which to create the <see cref="T:BytecodeApi.Data.BlobTree" />.</param>
            <returns>
            The <see cref="T:BytecodeApi.Data.BlobTree" /> this method creates, representing the entire content of the specified directory.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobTree.SaveToDirectory(System.String)">
            <summary>
            Writes the contents of all <see cref="T:BytecodeApi.Data.Blob" /> objects to the specified directory and creates a directory structure based on the hierarchical <see cref="T:BytecodeApi.Data.BlobTreeNode" /> structure of <see cref="P:BytecodeApi.Data.BlobTree.Root" />. <see cref="P:BytecodeApi.Data.BlobTreeNode.Name" /> represents the directory names, <see cref="P:BytecodeApi.Data.Blob.Name" /> represents the filenames and <see cref="P:BytecodeApi.Data.Blob.Content" /> represents the file contents.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path to a directory to which this <see cref="T:BytecodeApi.Data.BlobTree" /> is written to.</param>
        </member>
        <member name="T:BytecodeApi.Data.BlobTreeNodeCollection">
            <summary>
            Represents a collection of <see cref="T:BytecodeApi.Data.BlobTreeNode" /> objects.
            </summary>
        </member>
        <member name="P:BytecodeApi.Data.BlobTreeNodeCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:BytecodeApi.Data.BlobTreeNode" /> at the specified index.
            </summary>
            <param name="index">The index at which to retrieve the <see cref="T:BytecodeApi.Data.BlobTreeNode" />.</param>
        </member>
        <member name="P:BytecodeApi.Data.BlobTreeNodeCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:BytecodeApi.Data.BlobTreeNode" /> with the specified case sensitive name and throws an exception, if it was not found.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the name of the <see cref="T:BytecodeApi.Data.BlobTreeNode" />.</param>
        </member>
        <member name="P:BytecodeApi.Data.BlobTreeNodeCollection.Item(System.String,System.Boolean)">
            <summary>
            Gets the <see cref="T:BytecodeApi.Data.BlobTreeNode" /> with the specified name and throws an exception, if it was not found.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the name of the <see cref="T:BytecodeApi.Data.BlobTreeNode" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during name comparison.</param>
        </member>
        <member name="P:BytecodeApi.Data.BlobTreeNodeCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.Data.BlobTreeNodeCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" /> is read-only.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNodeCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNodeCollection.#ctor(System.Collections.Generic.IEnumerable{BytecodeApi.Data.BlobTreeNode})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" /> class with the specified collection of nodes.
            </summary>
            <param name="nodes">A collection of <see cref="T:BytecodeApi.Data.BlobTreeNode" /> objects to add to this <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" />.</param>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNodeCollection.HasNode(System.String)">
            <summary>
            Determines whether a <see cref="T:BytecodeApi.Data.BlobTreeNode" /> with the specified name exists in this collection.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.Data.BlobTreeNode" /> to check.</param>
            <returns>
            <see langword="true" />, if the <see cref="T:BytecodeApi.Data.BlobTreeNode" /> with the specified name exists;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNodeCollection.HasNode(System.String,System.Boolean)">
            <summary>
            Determines whether a <see cref="T:BytecodeApi.Data.BlobTreeNode" /> with the specified name exists in this collection.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.Data.BlobTreeNode" /> to check.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            <see langword="true" />, if the <see cref="T:BytecodeApi.Data.BlobTreeNode" /> with the specified name exists;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNodeCollection.ComputeSize">
            <summary>
            Computes the size, in bytes, of all <see cref="T:BytecodeApi.Data.Blob" /> objects within this <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" /> recursively.
            </summary>
            <returns>
            The size, in bytes, of all <see cref="T:BytecodeApi.Data.Blob" /> objects within this <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" /> recursively.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNodeCollection.Add(BytecodeApi.Data.BlobTreeNode)">
            <summary>
            Adds a <see cref="T:BytecodeApi.Data.BlobTreeNode" /> to the end of the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.Data.BlobTreeNode" /> to be added to the end of the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" />.</param>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNodeCollection.Remove(BytecodeApi.Data.BlobTreeNode)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:BytecodeApi.Data.BlobTreeNode" /> from the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.Data.BlobTreeNode" /> to remove from the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="item" /> is successfully removed;
            otherwise, <see langword="false" />.
            This method also returns <see langword="false" />, if <paramref name="item" /> was not found in the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" />.</returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNodeCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNodeCollection.Contains(BytecodeApi.Data.BlobTreeNode)">
            <summary>
            Determines whether an element is in the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.Data.BlobTreeNode" /> to locate in the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="item" /> is found in the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNodeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" />.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the <see cref="T:BytecodeApi.Data.BlobTreeNodeCollection" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Data.BlobTreeNode">
            <summary>
            Represents a tree node within a <see cref="T:BytecodeApi.Data.BlobTree" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.Data.BlobTreeNode.Name">
            <summary>
            Gets or sets the name of the <see cref="T:BytecodeApi.Data.BlobTreeNode" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.Data.BlobTreeNode.Nodes">
            <summary>
            Gets the collection of nodes associated with this <see cref="T:BytecodeApi.Data.BlobTreeNode" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.Data.BlobTreeNode.Blobs">
            <summary>
            Gets the collection of <see cref="T:BytecodeApi.Data.Blob" /> objects associated with this <see cref="T:BytecodeApi.Data.BlobTreeNode" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.Data.BlobTreeNode.Tag">
            <summary>
            Gets or sets the object that contains data about the <see cref="T:BytecodeApi.Data.BlobTreeNode" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.BlobTreeNode" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.BlobTreeNode" /> class with the specified name.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.Data.BlobTreeNode" />.</param>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNode.#ctor(System.String,System.Collections.Generic.IEnumerable{BytecodeApi.Data.BlobTreeNode},System.Collections.Generic.IEnumerable{BytecodeApi.Data.Blob})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.BlobTreeNode" /> class with the specified name and elemets.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.Data.BlobTreeNode" />.</param>
            <param name="nodes">A collection of nodes to add to the <see cref="T:BytecodeApi.Data.BlobTreeNode" />.</param>
            <param name="blobs">A collection of blobs to add to the <see cref="T:BytecodeApi.Data.BlobTreeNode" />.</param>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNode.FindNode(System.String)">
            <summary>
            Tries to find a node by the specified case sensitive path. The path contains each node name, separated by a backslash. Returns <see langword="null" />, if the <see cref="T:BytecodeApi.Data.BlobTreeNode" /> could not be found.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying a case sensitive path. The path contains each node name, separated by a backslash.</param>
            <returns>
            The <see cref="T:BytecodeApi.Data.BlobTreeNode" /> that was found by the specified path, or <see langword="null" />, if it could not be found.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNode.FindNode(System.String,System.Boolean)">
            <summary>
            Tries to find a node by the specified path. The path contains each node name, separated by a backslash. Returns <see langword="null" />, if the <see cref="T:BytecodeApi.Data.BlobTreeNode" /> could not be found.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying a path. The path contains each node name, separated by a backslash.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during name comparison.</param>
            <returns>
            The <see cref="T:BytecodeApi.Data.BlobTreeNode" /> that was found by the specified path, or <see langword="null" />, if it could not be found.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNode.Flatten">
            <summary>
            Creates a new one-dimensional <see cref="T:BytecodeApi.Data.BlobCollection" /> containing all <see cref="T:BytecodeApi.Data.Blob" /> objects including all child nodes recursively.
            </summary>
            <returns>
            The <see cref="T:BytecodeApi.Data.BlobCollection" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNode.ComputeSize">
            <summary>
            Computes the size, in bytes, of all <see cref="T:BytecodeApi.Data.Blob" /> objects within this <see cref="T:BytecodeApi.Data.BlobTreeNode" /> recursively.
            </summary>
            <returns>
            The size, in bytes, of all <see cref="T:BytecodeApi.Data.Blob" /> objects within this <see cref="T:BytecodeApi.Data.BlobTreeNode" /> recursively.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobTreeNode.ToString">
            <summary>
            Returns the name of this <see cref="T:BytecodeApi.Data.BlobTreeNode" />.
            </summary>
            <returns>
            The name of this <see cref="T:BytecodeApi.Data.BlobTreeNode" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Data.BlobCollection">
            <summary>
            Represents a collection of <see cref="T:BytecodeApi.Data.Blob" /> objects.
            </summary>
        </member>
        <member name="P:BytecodeApi.Data.BlobCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:BytecodeApi.Data.Blob" /> at the specified index.
            </summary>
            <param name="index">The index at which to retrieve the <see cref="T:BytecodeApi.Data.Blob" />.</param>
        </member>
        <member name="P:BytecodeApi.Data.BlobCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:BytecodeApi.Data.Blob" /> with the specified case sensitive name and throws an exception, if it was not found.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the name of the <see cref="T:BytecodeApi.Data.Blob" />.</param>
        </member>
        <member name="P:BytecodeApi.Data.BlobCollection.Item(System.String,System.Boolean)">
            <summary>
            Gets the <see cref="T:BytecodeApi.Data.Blob" /> with the specified name and throws an exception, if it was not found.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the name of the <see cref="T:BytecodeApi.Data.Blob" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during name comparison.</param>
        </member>
        <member name="P:BytecodeApi.Data.BlobCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:BytecodeApi.Data.BlobCollection" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.Data.BlobCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:BytecodeApi.Data.BlobCollection" /> is read-only.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.BlobCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.BlobCollection" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.BlobCollection.#ctor(System.Collections.Generic.IEnumerable{BytecodeApi.Data.Blob})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.BlobCollection" /> class with the specified collection of blobs.
            </summary>
            <param name="blobs">A collection of <see cref="T:BytecodeApi.Data.Blob" /> objects to add to this <see cref="T:BytecodeApi.Data.BlobCollection" />.</param>
        </member>
        <member name="M:BytecodeApi.Data.BlobCollection.FromDirectory(System.String)">
            <summary>
            Creates a <see cref="T:BytecodeApi.Data.BlobCollection" /> from the specified directory.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path to a directory from which to create the <see cref="T:BytecodeApi.Data.BlobCollection" />. Subdirectories are not searched.</param>
            <returns>
            The <see cref="T:BytecodeApi.Data.BlobCollection" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobCollection.FromDirectory(System.String,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.Data.BlobCollection" /> from the specified directory.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path to a directory from which to create the <see cref="T:BytecodeApi.Data.BlobCollection" />.</param>
            <param name="recursive"><see langword="true" /> to search subdirectories recursively.</param>
            <returns>
            The <see cref="T:BytecodeApi.Data.BlobCollection" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobCollection.HasBlob(System.String)">
            <summary>
            Determines whether a <see cref="T:BytecodeApi.Data.Blob" /> with the specified name exists in this collection.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.Data.Blob" /> to check.</param>
            <returns>
            <see langword="true" />, if the <see cref="T:BytecodeApi.Data.Blob" /> with the specified name exists;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobCollection.HasBlob(System.String,System.Boolean)">
            <summary>
            Determines whether a <see cref="T:BytecodeApi.Data.Blob" /> with the specified name exists in this collection.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.Data.Blob" /> to check.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            <see langword="true" />, if the <see cref="T:BytecodeApi.Data.Blob" /> with the specified name exists;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobCollection.ComputeSize">
            <summary>
            Computes the size, in bytes, of all <see cref="T:BytecodeApi.Data.Blob" /> objects within this <see cref="T:BytecodeApi.Data.BlobCollection" />.
            </summary>
            <returns>
            The size, in bytes, of all <see cref="T:BytecodeApi.Data.Blob" /> objects within this <see cref="T:BytecodeApi.Data.BlobCollection" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobCollection.SaveToDirectory(System.String)">
            <summary>
            Writes the contents of all <see cref="T:BytecodeApi.Data.Blob" /> objects to the specified directory, where <see cref="P:BytecodeApi.Data.Blob.Name" /> is used as the filename and <see cref="P:BytecodeApi.Data.Blob.Content" /> is written to the file. Existing files are overwritten.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path to a directory to which this <see cref="T:BytecodeApi.Data.BlobCollection" /> is written to.</param>
        </member>
        <member name="M:BytecodeApi.Data.BlobCollection.Add(BytecodeApi.Data.Blob)">
            <summary>
            Adds a <see cref="T:BytecodeApi.Data.Blob" /> to the end of the <see cref="T:BytecodeApi.Data.BlobCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.Data.Blob" /> to be added to the end of the <see cref="T:BytecodeApi.Data.BlobCollection" />.</param>
        </member>
        <member name="M:BytecodeApi.Data.BlobCollection.Remove(BytecodeApi.Data.Blob)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:BytecodeApi.Data.Blob" /> from the <see cref="T:BytecodeApi.Data.BlobCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.Data.Blob" /> to remove from the <see cref="T:BytecodeApi.Data.BlobCollection" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="item" /> is successfully removed;
            otherwise, <see langword="false" />.
            This method also returns <see langword="false" />, if <paramref name="item" /> was not found in the <see cref="T:BytecodeApi.Data.BlobCollection" />.</returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:BytecodeApi.Data.BlobCollection" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.BlobCollection.Contains(BytecodeApi.Data.Blob)">
            <summary>
            Determines whether an element is in the <see cref="T:BytecodeApi.Data.BlobCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.Data.Blob" /> to locate in the <see cref="T:BytecodeApi.Data.BlobCollection" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="item" /> is found in the <see cref="T:BytecodeApi.Data.BlobCollection" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.BlobCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:BytecodeApi.Data.BlobCollection" />.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the <see cref="T:BytecodeApi.Data.BlobCollection" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Data.Blob">
            <summary>
            Represents an entity composed of a name and binary content in form or a <see cref="T:System.Byte" />[].
            </summary>
        </member>
        <member name="P:BytecodeApi.Data.Blob.Name">
            <summary>
            Gets or sets the name of the <see cref="T:BytecodeApi.Data.Blob" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.Data.Blob.Content">
            <summary>
            Gets or sets the binary content of the <see cref="T:BytecodeApi.Data.Blob" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.Data.Blob.Tag">
            <summary>
            Gets or sets the object that contains data about the <see cref="T:BytecodeApi.Data.Blob" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.Blob.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.Blob" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.Data.Blob.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.Blob" /> class with the specified name.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.Data.Blob" />.</param>
        </member>
        <member name="M:BytecodeApi.Data.Blob.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.Blob" /> class with the specified name and content.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.Data.Blob" />.</param>
            <param name="content">The binary content of the <see cref="T:BytecodeApi.Data.Blob" />.</param>
        </member>
        <member name="M:BytecodeApi.Data.Blob.#ctor(System.String,System.Byte[],System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Data.Blob" /> class with the specified name, content and a tag.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.Data.Blob" />.</param>
            <param name="content">The binary content of the <see cref="T:BytecodeApi.Data.Blob" />.</param>
            <param name="tag">the object that contains data about the <see cref="T:BytecodeApi.Data.Blob" />.</param>
        </member>
        <member name="M:BytecodeApi.Data.Blob.FromFile(System.String)">
            <summary>
            Creates a <see cref="T:BytecodeApi.Data.Blob" /> from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file from which to create the <see cref="T:BytecodeApi.Data.Blob" />.</param>
            <returns>
            The <see cref="T:BytecodeApi.Data.Blob" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.Blob.Compare(BytecodeApi.Data.Blob)">
            <summary>
            Compares this <see cref="T:BytecodeApi.Data.Blob" /> agains another <see cref="T:BytecodeApi.Data.Blob" />, including binary content. Returns <see langword="true" />, if both objects contain the exact same set of data.
            </summary>
            <param name="other">A <see cref="T:BytecodeApi.Data.Blob" /> to compare to this instance to.</param>
            <returns>
            <see langword="true" />, if both objects contain the exact same set of data;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Data.Blob.Save(System.String)">
            <summary>
            Writes the contents of <see cref="P:BytecodeApi.Data.Blob.Content" /> to a binary file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which <see cref="P:BytecodeApi.Data.Blob.Content" /> is written to.</param>
        </member>
        <member name="M:BytecodeApi.Data.Blob.ToString">
            <summary>
            Returns the name of this <see cref="T:BytecodeApi.Data.Blob" />.
            </summary>
            <returns>
            The name of this <see cref="T:BytecodeApi.Data.Blob" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.BitArrayExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Collections.BitArray" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.ToBooleanArray(System.Collections.BitArray)">
            <summary>
            Converts the bits of this <see cref="T:System.Collections.BitArray" /> to an equivalent <see cref="T:System.Boolean" />[].
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to convert.</param>
            <returns>
            An equivalent <see cref="T:System.Boolean" />[] representing this <see cref="T:System.Collections.BitArray" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.ToByteArray(System.Collections.BitArray)">
            <summary>
            Converts the bits of this <see cref="T:System.Collections.BitArray" /> to an equivalent <see cref="T:System.Byte" />[]. If there is a padding of less than 8 bits, the last byte contains the remaining bits.
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to convert.</param>
            <returns>
            An equivalent <see cref="T:System.Byte" />[] representing this <see cref="T:System.Collections.BitArray" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.ToBitString(System.Collections.BitArray)">
            <summary>
            Converts the bits of this <see cref="T:System.Collections.BitArray" /> to a <see cref="T:System.String" /> containing a sequence of '0' or '1' characters.
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to convert.</param>
            <returns>
            An equivalent sequence of '0' or '1' characters representing this <see cref="T:System.Collections.BitArray" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.CountTrue(System.Collections.BitArray)">
            <summary>
            Returns the number of values in this <see cref="T:System.Collections.BitArray" /> whose value is <see langword="true" />.
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to check.</param>
            <returns>
            The number of values whose value is <see langword="true" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.CountFalse(System.Collections.BitArray)">
            <summary>
            Returns the number of values in this <see cref="T:System.Collections.BitArray" /> whose value is <see langword="false" />.
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to check.</param>
            <returns>
            The number of values whose value is <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.AllTrue(System.Collections.BitArray)">
            <summary>
            Returns a value indicating whether all elements of this <see cref="T:System.Collections.BitArray" /> are <see langword="true" />.
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to check.</param>
            <returns>
            A value indicating whether all elements of this <see cref="T:System.Collections.BitArray" /> are <see langword="true" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.AllFalse(System.Collections.BitArray)">
            <summary>
            Returns a value indicating whether all elements of this <see cref="T:System.Collections.BitArray" /> are <see langword="false" />.
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to check.</param>
            <returns>
            A value indicating whether all elements of this <see cref="T:System.Collections.BitArray" /> are <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.Compare(System.Collections.BitArray,System.Collections.BitArray)">
            <summary>
            Compares the content of this <see cref="T:System.Collections.BitArray" /> agains another <see cref="T:System.Collections.BitArray" />. Returns <see langword="true" />, if both arrays contain the exact same set of data. If <paramref name="array" /> and <paramref name="otherArray" /> are both <see langword="null" />, <see langword="true" /> is returned.
            </summary>
            <param name="array">A <see cref="T:System.Collections.BitArray" /> to compare to <paramref name="otherArray" />.</param>
            <param name="otherArray">A <see cref="T:System.Collections.BitArray" /> to compare to <paramref name="array" />.</param>
            <returns>
            <see langword="true" />, if both arrays contain the exact same set of data or if <paramref name="array" /> and <paramref name="otherArray" /> are both <see langword="null" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.GetBits(System.Collections.BitArray,System.Int32,System.Int32)">
            <summary>
            Copies a specified number of bits from this <see cref="T:System.Collections.BitArray" /> and returns a new <see cref="T:System.Collections.BitArray" /> representing a fraction of the original <see cref="T:System.Collections.BitArray" />.
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to take the subset of bits from.</param>
            <param name="index">A <see cref="T:System.Int32" /> value specifying the offset from which to start copying bits.</param>
            <param name="count">A <see cref="T:System.Int32" /> value specifying the number of bits to copy.</param>
            <returns>
            A new <see cref="T:System.Collections.BitArray" /> representing a fraction of the original <see cref="T:System.Collections.BitArray" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.SetAll(System.Collections.BitArray,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets all bits in the specified range in this <see cref="T:System.Collections.BitArray" /> to the specified value.
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to write the new value to.</param>
            <param name="offset">The zero-based index in this <see cref="T:System.Collections.BitArray" /> at which to begin writing values.</param>
            <param name="count">The number of values to write.</param>
            <param name="value">The <see cref="T:System.Boolean" /> value to assign to all bits in the specified range.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.SetRandomValues(System.Collections.BitArray)">
            <summary>
            Sets the values of this <see cref="T:System.Collections.BitArray" /> to random values.
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to randomize.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.SetRandomValues(System.Collections.BitArray,System.Boolean)">
            <summary>
            Sets the values of this <see cref="T:System.Collections.BitArray" /> to random values.
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to randomize.</param>
            <param name="cryptographic"><see langword="true" /> to generate cryptographic random values.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.SetRandomValues(System.Collections.BitArray,System.Int32,System.Int32)">
            <summary>
            Sets the values of this <see cref="T:System.Collections.BitArray" /> to random values.
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to randomize.</param>
            <param name="offset">The zero-based index in this <see cref="T:System.Collections.BitArray" /> at which to begin writing values.</param>
            <param name="count">The number of values to write.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.SetRandomValues(System.Collections.BitArray,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the values of this <see cref="T:System.Collections.BitArray" /> to random values.
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to randomize.</param>
            <param name="offset">The zero-based index in this <see cref="T:System.Collections.BitArray" /> at which to begin writing values.</param>
            <param name="count">The number of values to write.</param>
            <param name="cryptographic"><see langword="true" /> to generate cryptographic random values.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.CopyTo(System.Collections.BitArray,System.Int32,System.Collections.BitArray,System.Int32,System.Int32)">
            <summary>
            Copies a specified number of elements from this <see cref="T:System.Collections.BitArray" /> to <paramref name="dest" />, beginning at the specified source offset, written to the specified destination offset.
            </summary>
            <param name="array">The <see cref="T:System.Collections.BitArray" /> to be written to <paramref name="dest" />.</param>
            <param name="sourceOffset">The offset, at which to start reading from this <see cref="T:System.Collections.BitArray" />.</param>
            <param name="dest">The <see cref="T:System.Collections.BitArray" /> that is written to.</param>
            <param name="destOffset">The offset, at which to start writing to <paramref name="dest" />.</param>
            <param name="count">The number of <see cref="T:System.Boolean" /> values to copy.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.BitArrayExtensions.Concat(System.Collections.BitArray,System.Collections.BitArray[])">
            <summary>
            Merges all <see cref="T:System.Collections.BitArray" /> objects and returns a new <see cref="T:System.Collections.BitArray" />, where <paramref name="otherArrays" /> are concatenated after this array.
            </summary>
            <param name="array">The first <see cref="T:System.Collections.BitArray" /> object.</param>
            <param name="otherArrays">An array of <see cref="T:System.Collections.BitArray" /> objects to append.</param>
            <returns>
            A new <see cref="T:System.Collections.BitArray" /> starting with <paramref name="array" />, followed by all elements from <paramref name="otherArrays" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.IconExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Drawing.Icon" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.IconExtensions.Save(System.Drawing.Icon,System.String)">
            <summary>
            Saves this <see cref="T:System.Drawing.Icon" /> to the specified file.
            </summary>
            <param name="icon">The <see cref="T:System.Drawing.Icon" /> to save.</param>
            <param name="path">A <see cref="T:System.String" /> that contains the name of the file to which to save this <see cref="T:System.Drawing.Icon" />.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.IconExtensions.ToArray(System.Drawing.Icon)">
            <summary>
            Converts this <see cref="T:System.Drawing.Icon" /> to its <see cref="T:System.Byte" />[] representation.
            </summary>
            <param name="icon">The <see cref="T:System.Drawing.Icon" /> to save.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] representing this <see cref="T:System.Drawing.Icon" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IconExtensions.ToBitmapSource(System.Drawing.Icon)">
            <summary>
            Returns a managed <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, based on the provided <see cref="T:System.Drawing.Icon" />.
            </summary>
            <param name="icon">The <see cref="T:System.Drawing.Icon" /> to convert.</param>
            <returns>
            The created <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.BitmapEncoderExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Windows.Media.Imaging.BitmapEncoder" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.BitmapEncoderExtensions.Save(System.Windows.Media.Imaging.BitmapEncoder,System.String)">
            <summary>
            Encodes a bitmap image and saves the encoded image to a file.
            </summary>
            <param name="bitmapEncoder">The <see cref="T:System.Windows.Media.Imaging.BitmapEncoder" /> to be used.</param>
            <param name="path">A <see cref="T:System.String" /> that contains the name of the file to which to save this bitmap image.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.BitmapEncoderExtensions.ToArray(System.Windows.Media.Imaging.BitmapEncoder)">
            <summary>
            Encodes a bitmap image and returns a new <see cref="T:System.Byte" />[] representing the encoded image.
            </summary>
            <param name="bitmapEncoder">The <see cref="T:System.Windows.Media.Imaging.BitmapEncoder" /> to be used.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] representing the encoded image.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.DelegateExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with delegate objects, such as <see cref="T:System.Action" /> and <see cref="T:System.Func`1" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``1(System.Func{``0})">
            <summary>
            Converts a <see cref="T:System.Func`1" /> to an <see cref="T:System.Action" />.
            </summary>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`1" /> to wrap inside an <see cref="T:System.Action" />.</param>
            <returns>
            A new <see cref="T:System.Action" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``2(System.Func{``0,``1})">
            <summary>
            Converts a <see cref="T:System.Func`2" /> to an <see cref="T:System.Action`1" />.
            </summary>
            <typeparam name="T">The parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`2" /> to wrap inside an <see cref="T:System.Action`1" />.</param>
            <returns>
            A new <see cref="T:System.Action`1" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``3(System.Func{``0,``1,``2})">
            <summary>
            Converts a <see cref="T:System.Func`3" /> to an <see cref="T:System.Action`2" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`3" /> to wrap inside an <see cref="T:System.Action`2" />.</param>
            <returns>
            A new <see cref="T:System.Action`2" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``4(System.Func{``0,``1,``2,``3})">
            <summary>
            Converts a <see cref="T:System.Func`4" /> to an <see cref="T:System.Action`3" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`4" /> to wrap inside an <see cref="T:System.Action`3" />.</param>
            <returns>
            A new <see cref="T:System.Action`3" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``5(System.Func{``0,``1,``2,``3,``4})">
            <summary>
            Converts a <see cref="T:System.Func`5" /> to an <see cref="T:System.Action`4" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T4">The fourth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`5" /> to wrap inside an <see cref="T:System.Action`4" />.</param>
            <returns>
            A new <see cref="T:System.Action`4" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``6(System.Func{``0,``1,``2,``3,``4,``5})">
            <summary>
            Converts a <see cref="T:System.Func`6" /> to an <see cref="T:System.Action`5" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T4">The fourth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T5">The fifth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`6" /> to wrap inside an <see cref="T:System.Action`5" />.</param>
            <returns>
            A new <see cref="T:System.Action`5" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``7(System.Func{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Converts a <see cref="T:System.Func`7" /> to an <see cref="T:System.Action`6" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T4">The fourth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T5">The fifth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T6">The sixth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`7" /> to wrap inside an <see cref="T:System.Action`6" />.</param>
            <returns>
            A new <see cref="T:System.Action`6" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>
            Converts a <see cref="T:System.Func`8" /> to an <see cref="T:System.Action`7" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T4">The fourth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T5">The fifth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T6">The sixth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T7">The seventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`8" /> to wrap inside an <see cref="T:System.Action`7" />.</param>
            <returns>
            A new <see cref="T:System.Action`7" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8})">
            <summary>
            Converts a <see cref="T:System.Func`9" /> to an <see cref="T:System.Action`8" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T4">The fourth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T5">The fifth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T6">The sixth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T7">The seventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T8">The eighth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`9" /> to wrap inside an <see cref="T:System.Action`8" />.</param>
            <returns>
            A new <see cref="T:System.Action`8" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})">
            <summary>
            Converts a <see cref="T:System.Func`10" /> to an <see cref="T:System.Action`9" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T4">The fourth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T5">The fifth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T6">The sixth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T7">The seventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T8">The eighth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T9">The ninth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`10" /> to wrap inside an <see cref="T:System.Action`9" />.</param>
            <returns>
            A new <see cref="T:System.Action`9" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})">
            <summary>
            Converts a <see cref="T:System.Func`11" /> to an <see cref="T:System.Action`10" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T4">The fourth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T5">The fifth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T6">The sixth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T7">The seventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T8">The eighth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T9">The ninth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T10">The tenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`11" /> to wrap inside an <see cref="T:System.Action`10" />.</param>
            <returns>
            A new <see cref="T:System.Action`10" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})">
            <summary>
            Converts a <see cref="T:System.Func`12" /> to an <see cref="T:System.Action`11" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T4">The fourth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T5">The fifth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T6">The sixth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T7">The seventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T8">The eighth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T9">The ninth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T10">The tenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T11">The eleventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`12" /> to wrap inside an <see cref="T:System.Action`11" />.</param>
            <returns>
            A new <see cref="T:System.Action`11" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})">
            <summary>
            Converts a <see cref="T:System.Func`13" /> to an <see cref="T:System.Action`12" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T4">The fourth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T5">The fifth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T6">The sixth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T7">The seventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T8">The eighth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T9">The ninth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T10">The tenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T11">The eleventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T12">The twelfth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`13" /> to wrap inside an <see cref="T:System.Action`12" />.</param>
            <returns>
            A new <see cref="T:System.Action`12" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})">
            <summary>
            Converts a <see cref="T:System.Func`14" /> to an <see cref="T:System.Action`13" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T4">The fourth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T5">The fifth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T6">The sixth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T7">The seventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T8">The eighth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T9">The ninth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T10">The tenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T11">The eleventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T12">The twelfth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T13">The thirteenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`14" /> to wrap inside an <see cref="T:System.Action`13" />.</param>
            <returns>
            A new <see cref="T:System.Action`13" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})">
            <summary>
            Converts a <see cref="T:System.Func`15" /> to an <see cref="T:System.Action`14" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T4">The fourth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T5">The fifth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T6">The sixth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T7">The seventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T8">The eighth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T9">The ninth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T10">The tenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T11">The eleventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T12">The twelfth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T13">The thirteenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T14">The fourteenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`15" /> to wrap inside an <see cref="T:System.Action`14" />.</param>
            <returns>
            A new <see cref="T:System.Action`14" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})">
            <summary>
            Converts a <see cref="T:System.Func`16" /> to an <see cref="T:System.Action`15" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T4">The fourth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T5">The fifth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T6">The sixth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T7">The seventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T8">The eighth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T9">The ninth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T10">The tenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T11">The eleventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T12">The twelfth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T13">The thirteenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T14">The fourteenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T15">The fifteenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`16" /> to wrap inside an <see cref="T:System.Action`15" />.</param>
            <returns>
            A new <see cref="T:System.Action`15" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DelegateExtensions.AsAction``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16})">
            <summary>
            Converts a <see cref="T:System.Func`17" /> to an <see cref="T:System.Action`16" />.
            </summary>
            <typeparam name="T1">The first parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T2">The second parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T3">The third parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T4">The fourth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T5">The fifth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T6">The sixth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T7">The seventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T8">The eighth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T9">The ninth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T10">The tenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T11">The eleventh parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T12">The twelfth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T13">The thirteenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T14">The fourteenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T15">The fifteenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="T16">The sixteenth parameter type of <paramref name="func" /> that is passed to the returned <see cref="T:System.Action" />.</typeparam>
            <typeparam name="TResult">The result type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`17" /> to wrap inside an <see cref="T:System.Action`16" />.</param>
            <returns>
            A new <see cref="T:System.Action`16" /> object that wraps <paramref name="func" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.ColorExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Windows.Media.Color" /> and <see cref="T:System.Drawing.Color" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.ColorExtensions.Convert(System.Drawing.Color)">
            <summary>
            Converts this <see cref="T:System.Drawing.Color" /> object to an equivalent <see cref="T:System.Windows.Media.Color" /> object.
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color" /> object to convert.</param>
            <returns>
            An equivalent <see cref="T:System.Windows.Media.Color" /> representation of this <see cref="T:System.Drawing.Color" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ColorExtensions.Convert(System.Windows.Media.Color)">
            <summary>
            Converts this <see cref="T:System.Windows.Media.Color" /> object to an equivalent <see cref="T:System.Drawing.Color" /> object.
            </summary>
            <param name="color">The <see cref="T:System.Windows.Media.Color" /> object to convert.</param>
            <returns>
            An equivalent <see cref="T:System.Drawing.Color" /> representation of this <see cref="T:System.Windows.Media.Color" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ColorExtensions.ToHtmlString(System.Windows.Media.Color)">
            <summary>
            Converts this <see cref="T:System.Windows.Media.Color" /> object to a HTML color <see cref="T:System.String" />.
            <para>Example: #ff7f00</para>
            </summary>
            <param name="color">The <see cref="T:System.Windows.Media.Color" /> object to convert.</param>
            <returns>
            An equivalent HTML color <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Color" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ColorExtensions.ToHtmlString(System.Windows.Media.Color,System.Boolean)">
            <summary>
            Converts this <see cref="T:System.Windows.Media.Color" /> object to a HTML color <see cref="T:System.String" />.
            <para>Example: #ff7f00 (when <paramref name="rgba" /> = <see langword="false" />)</para>
            <para>Example: rgba(255, 127, 0, 0.5) (when <paramref name="rgba" /> = <see langword="true" />)</para>
            </summary>
            <param name="color">The <see cref="T:System.Windows.Media.Color" /> object to convert.</param>
            <param name="rgba"><see langword="true" /> to convert to an rgba representation; <see langword="false" /> to convert to a hexadecimal representation.</param>
            <returns>
            An equivalent HTML color <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Color" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ColorExtensions.ToHtmlString(System.Drawing.Color)">
            <summary>
            Converts this <see cref="T:System.Drawing.Color" /> object to a HTML color <see cref="T:System.String" />.
            <para>Example: #ff7f00</para>
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color" /> object to convert.</param>
            <returns>
            An equivalent HTML color <see cref="T:System.String" /> representation of this <see cref="T:System.Drawing.Color" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ColorExtensions.ToHtmlString(System.Drawing.Color,System.Boolean)">
            <summary>
            Converts this <see cref="T:System.Drawing.Color" /> object to a HTML color <see cref="T:System.String" />.
            <para>Example: #ff7f00 (when <paramref name="rgba" /> = <see langword="false" />)</para>
            <para>Example: rgba(255, 127, 0, 0.5) (when <paramref name="rgba" /> = <see langword="true" />)</para>
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color" /> object to convert.</param>
            <param name="rgba"><see langword="true" /> to convert to an rgba representation; <see langword="false" /> to convert to a hexadecimal representation.</param>
            <returns>
            An equivalent HTML color <see cref="T:System.String" /> representation of this <see cref="T:System.Drawing.Color" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.ExpressionExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Linq.Expressions.Expression" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.ExpressionExtensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Returns the member name of this <see cref="T:System.Linq.Expressions.Expression`1" />. If this instance does not resolve to a <see cref="T:System.Linq.Expressions.MemberExpression" />, <see langword="null" /> is returned.
            </summary>
            <typeparam name="T">The member type.</typeparam>
            <param name="member">The member to retrieve its name from.</param>
            <returns>
            The member name of this <see cref="T:System.Linq.Expressions.Expression`1" />, or <see langword="null" />, if this instance does not resolve to a <see cref="T:System.Linq.Expressions.MemberExpression" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ExpressionExtensions.GetMemberValue``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Retrieves the value of the member of this <see cref="T:System.Linq.Expressions.Expression`1" />.
            </summary>
            <typeparam name="T">The member type.</typeparam>
            <param name="member">The member to retrieve its value from.</param>
            <returns>
            The value of the member of this <see cref="T:System.Linq.Expressions.Expression`1" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ExpressionExtensions.SetMemberValue``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Object,``0)">
            <summary>
            Sets the value of the member of this <see cref="T:System.Linq.Expressions.Expression`1" />.
            </summary>
            <typeparam name="T">The member type.</typeparam>
            <param name="member">The member from which to update the value.</param>
            <param name="obj">The class instance of <paramref name="member" />, or <see langword="null" />, if the member is <see langword="static" />.</param>
            <param name="value">The new value to be assigned to <paramref name="member" />.</param>
        </member>
        <member name="T:BytecodeApi.Extensions.IEnumerableConvertExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for conversion of <see cref="T:System.Collections.IEnumerable" /> objects to different collection types.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToArray``1(System.Collections.IEnumerable)">
            <summary>
            Converts this <see cref="T:System.Collections.IEnumerable" /> to an <see cref="T:System.Array" /> of the specified type.
            </summary>
            <typeparam name="TSource">The type of the returned <see cref="T:System.Array" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Array" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToList``1(System.Collections.IEnumerable)">
            <summary>
            Converts this <see cref="T:System.Collections.IEnumerable" /> to a <see cref="T:System.Collections.Generic.List`1" /> of the specified type.
            </summary>
            <typeparam name="TSource">The type of the returned <see cref="T:System.Collections.Generic.List`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.List`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToReadOnlyCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts this <see cref="T:System.Collections.IEnumerable" /> to a <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of the specified type.
            </summary>
            <typeparam name="TSource">The type of the returned <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``1,``0}})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.Generic.Dictionary`2" />.
            </summary>
            <typeparam name="TKey">The type of the key of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <param name="source">The collection of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains all <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``1,``0}},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.Generic.Dictionary`2" /> using the specified equality comparer.
            </summary>
            <typeparam name="TKey">The type of the key of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <param name="source">The collection of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects to convert.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when creating the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains all <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``1,``0}})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.Generic.Dictionary`2" />, where Item1 of the <see cref="T:System.Tuple`2" /> is representing the key and Item2 is representing the value.
            </summary>
            <typeparam name="TKey">The type of the key of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <param name="source">The collection of <see cref="T:System.Tuple`2" /> objects to convert, where Item1 is representing the key and Item2 is representing the value.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains all converted <see cref="T:System.Tuple`2" /> objects in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``1,``0}},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.Generic.Dictionary`2" />using the specified equality comparer, where Item1 of the <see cref="T:System.Tuple`2" /> is representing the key and Item2 is representing the value.
            </summary>
            <typeparam name="TKey">The type of the key of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <param name="source">The collection of <see cref="T:System.Tuple`2" /> objects to convert, where Item1 is representing the key and Item2 is representing the value.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when creating the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains all converted <see cref="T:System.Tuple`2" /> objects in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToReadOnlyDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``1,``0}})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />.
            </summary>
            <typeparam name="TKey">The type of the key of the returned <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the returned <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />.</typeparam>
            <param name="source">The collection of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> that contains all <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToReadOnlyDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``1,``0}},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> using the specified equality comparer.
            </summary>
            <typeparam name="TKey">The type of the key of the returned <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the returned <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />.</typeparam>
            <param name="source">The collection of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects to convert.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when creating the new <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />.</param>
            <returns>
            A new <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> that contains all <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToReadOnlyDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``1,``0}})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />, where Item1 of the <see cref="T:System.Tuple`2" /> is representing the key and Item2 is representing the value.
            </summary>
            <typeparam name="TKey">The type of the key of the returned <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the returned <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />.</typeparam>
            <param name="source">The collection of <see cref="T:System.Tuple`2" /> objects to convert, where Item1 is representing the key and Item2 is representing the value.</param>
            <returns>
            A new <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> that contains all converted <see cref="T:System.Tuple`2" /> objects in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToReadOnlyDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``1,``0}},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />using the specified equality comparer, where Item1 of the <see cref="T:System.Tuple`2" /> is representing the key and Item2 is representing the value.
            </summary>
            <typeparam name="TKey">The type of the key of the returned <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the returned <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />.</typeparam>
            <param name="source">The collection of <see cref="T:System.Tuple`2" /> objects to convert, where Item1 is representing the key and Item2 is representing the value.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when creating the new <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />.</param>
            <returns>
            A new <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> that contains all converted <see cref="T:System.Tuple`2" /> objects in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToHashSet``1(System.Collections.IEnumerable)">
            <summary>
            Converts this <see cref="T:System.Collections.IEnumerable" /> to a <see cref="T:System.Collections.Generic.HashSet`1" /> of the specified type.
            </summary>
            <typeparam name="TSource">The type of the returned <see cref="T:System.Collections.Generic.HashSet`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.HashSet`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToHashSet``1(System.Collections.IEnumerable,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Converts this <see cref="T:System.Collections.IEnumerable" /> to a <see cref="T:System.Collections.Generic.HashSet`1" /> of the specified type using the specified equality comparer.
            </summary>
            <typeparam name="TSource">The type of the returned <see cref="T:System.Collections.Generic.HashSet`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to convert.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when creating the new <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.HashSet`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.Generic.HashSet`1" />.
            </summary>
            <typeparam name="TSource">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.HashSet`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.Generic.HashSet`1" /> using the specified equality comparer.
            </summary>
            <typeparam name="TSource">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when creating the new <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.HashSet`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToObservableCollection``1(System.Collections.IEnumerable)">
            <summary>
            Converts this <see cref="T:System.Collections.IEnumerable" /> to an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> of the specified type.
            </summary>
            <typeparam name="TSource">The type of the returned <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.
            </summary>
            <typeparam name="TSource">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> that contains all values in this <see cref="T:System.Collections.Generic.IEnumerable`1" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToReadOnlyObservableCollection``1(System.Collections.IEnumerable)">
            <summary>
            Converts this <see cref="T:System.Collections.IEnumerable" /> to an <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> of the specified type.
            </summary>
            <typeparam name="TSource">The type of the returned <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableConvertExtensions.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to an <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" />.
            </summary>
            <typeparam name="TSource">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> that contains all values in this <see cref="T:System.Collections.Generic.IEnumerable`1" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.ArrayExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Array" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.ArrayExtensions.IsNullOrEmpty(System.Array)">
            <summary>
            Indicates whether this <see cref="T:System.Array" /> is <see langword="null" />, has no elements or all elements are equal to <see langword="null" />.
            </summary>
            <param name="array">The <see cref="T:System.Array" /> to test.</param>
            <returns>
            <see langword="true" />, if this <see cref="T:System.Array" /> is <see langword="null" />, has no elements or all elements are equal to <see langword="null" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.BooleanExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Boolean" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.BooleanExtensions.ToStringInvariant(System.Boolean)">
            <summary>
            Converts the value of this <see cref="T:System.Boolean" /> to its equivalent <see cref="T:System.String" /> representation using the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" /> value to convert.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.BooleanExtensions.ToNullIfDefault(System.Boolean)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Boolean" /> value is <see langword="false" />, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Boolean" /> value is <see langword="false" />;
            otherwise, its original value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.BooleanExtensions.ToVisibility(System.Boolean)">
            <summary>
            Converts this <see cref="T:System.Boolean" /> value to <see cref="F:System.Windows.Visibility.Visible" /> or <see cref="F:System.Windows.Visibility.Collapsed" />.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" /> value to be converted.</param>
            <returns>
            <see cref="F:System.Windows.Visibility.Visible" />, if <paramref name="value" /> is <see langword="true" />;
            otherwise, <see cref="F:System.Windows.Visibility.Collapsed" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.BooleanExtensions.ToVisibility(System.Boolean,System.Boolean)">
            <summary>
            Converts this <see cref="T:System.Boolean" /> value to <see cref="F:System.Windows.Visibility.Visible" />, <see cref="F:System.Windows.Visibility.Hidden" /> or <see cref="F:System.Windows.Visibility.Collapsed" /> depending on its value and the <paramref name="preserveSpace" /> parameter.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" /> value to be converted.</param>
            <param name="preserveSpace"><see langword="true" /> to use <see cref="F:System.Windows.Visibility.Hidden" />; <see langword="false" /> to use <see cref="F:System.Windows.Visibility.Collapsed" />. Only applies if <paramref name="value" /> is <see langword="false" />.</param>
            <returns>
            <see cref="F:System.Windows.Visibility.Visible" />, if <paramref name="value" /> is <see langword="true" />;
            <see cref="F:System.Windows.Visibility.Collapsed" />, if <paramref name="value" /> is <see langword="false" />;
            <see cref="F:System.Windows.Visibility.Hidden" />, if <paramref name="value" /> is <see langword="false" /> and <paramref name="preserveSpace" /> is <see langword="true" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.ByteArrayExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Byte" />[] objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.ByteArrayExtensions.Compare(System.Byte[],System.Byte[])">
            <summary>
            Compares the content of this <see cref="T:System.Byte" />[] agains another <see cref="T:System.Byte" />[]. Returns <see langword="true" />, if both arrays contain the exact same set of data. If <paramref name="array" /> and <paramref name="otherArray" /> are both <see langword="null" />, <see langword="true" /> is returned.
            </summary>
            <param name="array">A <see cref="T:System.Byte" />[] to compare to <paramref name="otherArray" />.</param>
            <param name="otherArray">A <see cref="T:System.Byte" />[] to compare to <paramref name="array" />.</param>
            <returns>
            <see langword="true" />, if both arrays contain the exact same set of data or if <paramref name="array" /> and <paramref name="otherArray" /> are both <see langword="null" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ByteArrayExtensions.GetBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies a specified number of bytes from this <see cref="T:System.Byte" />[] and returns a new array representing a fraction of the original <see cref="T:System.Byte" />[].
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] to take the subset of bytes from.</param>
            <param name="index">A <see cref="T:System.Int32" /> value specifying the offset from which to start copying bytes.</param>
            <param name="count">A <see cref="T:System.Int32" /> value specifying the number of bytes to copy.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] representing a fraction of the original <see cref="T:System.Byte" />[].
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ByteArrayExtensions.FindSequence(System.Byte[],System.Byte[])">
            <summary>
            Searches this <see cref="T:System.Byte" />[] for the first occurrence of <paramref name="sequence" />. If not found, returns -1.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] to be searched.</param>
            <param name="sequence">The <see cref="T:System.Byte" />[] to search for.</param>
            <returns>
            The index of the first occurrence of <paramref name="sequence" /> and -1, if not found.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ByteArrayExtensions.FindSequence(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Searches this <see cref="T:System.Byte" />[] for the first occurrence of <paramref name="sequence" /> starting from <paramref name="startIndex" />. If not found, returns -1.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] to be searched.</param>
            <param name="sequence">The <see cref="T:System.Byte" />[] to search for.</param>
            <param name="startIndex">The zero-based starting position to start searching from.</param>
            <returns>
            The index of the first occurrence of <paramref name="sequence" /> and -1, if not found.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ByteArrayExtensions.ToAnsiString(System.Byte[])">
            <summary>
            Decodes all the bytes in this <see cref="T:System.Byte" />[] into a <see cref="T:System.String" /> using the <see cref="P:System.Text.Encoding.Default" /> encoding.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] containing the sequence of bytes to decode.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the results of decoding this sequence of bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ByteArrayExtensions.ToUTF8String(System.Byte[])">
            <summary>
            Decodes all the bytes in this <see cref="T:System.Byte" />[] into a <see cref="T:System.String" /> using the <see cref="P:System.Text.Encoding.UTF8" /> encoding.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] containing the sequence of bytes to decode.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the results of decoding this sequence of bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ByteArrayExtensions.ToUnicodeString(System.Byte[])">
            <summary>
            Decodes all the bytes in this <see cref="T:System.Byte" />[] into a <see cref="T:System.String" /> using the <see cref="P:System.Text.Encoding.Unicode" /> encoding.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] containing the sequence of bytes to decode.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the results of decoding this sequence of bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ByteArrayExtensions.ToHexadecimalString(System.Byte[])">
            <summary>
            Converts this <see cref="T:System.Byte" />[] into into its hexadecimal <see cref="T:System.String" /> representation.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] containing the sequence of bytes to convert.</param>
            <returns>
            An equivalent hexadecimal <see cref="T:System.String" /> representation of this <see cref="T:System.Byte" />[].
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ByteArrayExtensions.ToHexadecimalString(System.Byte[],System.Boolean)">
            <summary>
            Converts this <see cref="T:System.Byte" />[] into its hexadecimal <see cref="T:System.String" /> representation.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] containing the sequence of bytes to convert.</param>
            <param name="upperCase"><see langword="true" /> to use uppercase letters (a-f); <see langword="false" /> to use lowercase letters (A-F).</param>
            <returns>
            An equivalent hexadecimal <see cref="T:System.String" /> representation of this <see cref="T:System.Byte" />[].
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ByteArrayExtensions.Concat(System.Byte[],System.Byte[][])">
            <summary>
            Merges all <see cref="T:System.Byte" />[] objects and returns a new <see cref="T:System.Byte" />[], where <paramref name="otherArrays" /> are concatenated after this array.
            </summary>
            <param name="array">The first <see cref="T:System.Byte" />[] object.</param>
            <param name="otherArrays">An array of <see cref="T:System.Byte" />[] objects to append.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] starting with <paramref name="array" />, followed by all elements from <paramref name="otherArrays" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.CharExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Char" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.ToStringInvariant(System.Char)">
            <summary>
            Converts the value of this <see cref="T:System.Char" /> to its equivalent <see cref="T:System.String" /> representation using the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Char" /> value to convert.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Char" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.GetNumericValue(System.Char)">
            <summary>
            Converts this numeric <see langword="char" /> to a <see cref="T:System.Double" /> value.
            </summary>
            <param name="value">The unicode character to convert.</param>
            <returns>
            The numeric value of <paramref name="value" />, if that character represents a number;
            otherwise, -1.0.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.GetUnicodeCategory(System.Char)">
            <summary>
            Categorizes this <see langword="char" /> into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.
            </summary>
            <param name="value">The unicode character to categorize.</param>
            <returns>
            A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsControl(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a control character.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> is a control character;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsDigit(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a decimal.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> is a decimal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsHighSurrogate(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is a high surrogate.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if the numeric value of the <paramref name="value" /> parameter ranges from U+D800 through U+DBFF;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsLetter(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a unicode letter.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> is a letter;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsLetterOrDigit(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a unicode letter or a decimal digit.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> is a letter or a decimal digit;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsLower(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a lowercase letter.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> is a lowercase letter;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsLowSurrogate(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is a low surrogate.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if the numeric value of the <paramref name="value" /> parameter ranges from U+DC00 through U+DFFF;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsNumber(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a number.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> is a number;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsPunctuation(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a punctuation mark.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> is a punctuation mark;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsSeparator(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a separator character.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> is a separator character;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsSurrogate(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> has a surrogate code unit.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if the numeric value of the <paramref name="value" /> is either a high surrogate or a low surrogate;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsSymbol(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a symbol character.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> is a symbol character;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsUpper(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as an uppercase letter.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> is an uppercase letter;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsWhiteSpace(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as whitespace.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> is whitespace;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.IsHexadecimal(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a hexadecimal character (0-9, a-f, A-F).
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> is a hexadecimal character (0-9, a-f, A-F);
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.ToLower(System.Char)">
            <summary>
            Converts the value of this <see langword="char" /> to its lowercase equivalent.
            </summary>
            <param name="value">The unicode character to convert.</param>
            <returns>
            The lowercase equivalent of <paramref name="value" />, or the unchanged value of <paramref name="value" />, if <paramref name="value" /> is already lowercase or not alphabetic.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.ToLower(System.Char,System.Globalization.CultureInfo)">
            <summary>
            Converts the value of this <see langword="char" /> to its lowercase equivalent using specified culture-specific formatting information.
            </summary>
            <param name="value">The unicode character to convert.</param>
            <param name="culture">An object that supplies culture-specific casing rules.</param>
            <returns>
            The lowercase equivalent of <paramref name="value" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="value" />, if <paramref name="value" /> is already lowercase, has no lowercase equivalent, or is not alphabetic.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.ToLowerInvariant(System.Char)">
            <summary>
            Converts the value of this <see langword="char" /> to its lowercase equivalent using the casing rules of the invariant culture.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            The lowercase equivalent of <paramref name="value" />, or the unchanged value of <paramref name="value" />, if <paramref name="value" /> is already lowercase, has no lowercase equivalent, or is not alphabetic.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.ToUpper(System.Char)">
            <summary>
            Converts the value of this <see langword="char" /> to its uppercase equivalent.
            </summary>
            <param name="value">The unicode character to convert.</param>
            <returns>
            The uppercase equivalent of <paramref name="value" />, or the unchanged value of <paramref name="value" />, if <paramref name="value" /> is already uppercase or not alphabetic.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.ToUpper(System.Char,System.Globalization.CultureInfo)">
            <summary>
            Converts the value of this <see langword="char" /> to its uppercase equivalent using specified culture-specific formatting information.
            </summary>
            <param name="value">The unicode character to convert.</param>
            <param name="culture">An object that supplies culture-specific casing rules.</param>
            <returns>
            The uppercase equivalent of <paramref name="value" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="value" />, if <paramref name="value" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.ToUpperInvariant(System.Char)">
            <summary>
            Converts the value of this <see langword="char" /> to its uppercase equivalent using the casing rules of the invariant culture.
            </summary>
            <param name="value">The unicode character to evaluate.</param>
            <returns>
            The uppercase equivalent of <paramref name="value" />, or the unchanged value of <paramref name="value" />, if <paramref name="value" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.ToNullIfDefault(System.Char)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Char" /> value is '\0', otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Char" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Char" /> value is '\0';
            otherwise, its original value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.CharExtensions.Repeat(System.Char,System.Int32)">
            <summary>
            Creates a <see cref="T:System.String" /> using the value of the <paramref name="value" /> parameter and repeats it a specified number of times.
            </summary>
            <param name="value">The unicode character to repeat.</param>
            <param name="count">The number of times <paramref name="value" /> is repeated.</param>
            <returns>
            A new <see cref="T:System.String" /> object containing characters with the value of <paramref name="value" /> with a length based on <paramref name="count" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.WebClientExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Net.WebClient" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.WebClientExtensions.DownloadLines(System.Net.WebClient,System.String)">
            <summary>
            Downloads the requested resource as a <see cref="T:System.String" />[], separated by either a CRLF or a LF. The resource to download is specified as a <see cref="T:System.String" /> containing the URI.
            </summary>
            <param name="webClient">The <see cref="T:System.Net.WebClient" /> to be used.</param>
            <param name="address">A <see cref="T:System.String" /> containing the URI to download.</param>
            <returns>
            A <see cref="T:System.String" />[] containing the requested resource, separated by either a CRLF or a LF.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.WebClientExtensions.DownloadLines(System.Net.WebClient,System.Uri)">
            <summary>
            Downloads the requested resource as a <see cref="T:System.String" />[], separated by either a CRLF or a LF. The resource to download is specified as a <see cref="T:System.Uri" />.
            </summary>
            <param name="webClient">The <see cref="T:System.Net.WebClient" /> to be used.</param>
            <param name="address">A <see cref="T:System.Uri" /> object containing the URI to download.</param>
            <returns>
            A <see cref="T:System.String" />[] containing the requested resource, separated by either a CRLF or a LF.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.CompressionExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.IO.Compression.ZipArchive" /> and related objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.CompressionExtensions.CreateEntry(System.IO.Compression.ZipArchive,System.String,System.Byte[])">
            <summary>
            Adds a <see cref="T:System.IO.Compression.ZipArchiveEntry" /> to this <see cref="T:System.IO.Compression.ZipArchive" /> with the specified name and content.
            </summary>
            <param name="archive">The <see cref="T:System.IO.Compression.ZipArchive" /> where the <see cref="T:System.IO.Compression.ZipArchiveEntry" /> is created in.</param>
            <param name="name">A <see cref="T:System.String" /> value speficying the name for the entry.</param>
            <param name="content">A <see cref="T:System.Byte" />[] speficying the content for the entry.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.CompressionExtensions.CreateEntry(System.IO.Compression.ZipArchive,System.String,System.Byte[],System.IO.Compression.CompressionLevel)">
            <summary>
            Adds a <see cref="T:System.IO.Compression.ZipArchiveEntry" /> to this <see cref="T:System.IO.Compression.ZipArchive" /> with the specified name, content and <see cref="T:System.IO.Compression.CompressionLevel" />.
            </summary>
            <param name="archive">The <see cref="T:System.IO.Compression.ZipArchive" /> where the <see cref="T:System.IO.Compression.ZipArchiveEntry" /> is created in.</param>
            <param name="name">A <see cref="T:System.String" /> value speficying the name for the entry.</param>
            <param name="content">A <see cref="T:System.Byte" />[] speficying the content for the entry.</param>
            <param name="compressionLevel">The <see cref="T:System.IO.Compression.CompressionLevel" /> to apply to the data in <paramref name="content" />.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.CompressionExtensions.GetContent(System.IO.Compression.ZipArchiveEntry)">
            <summary>
            Extracts the content of this <see cref="T:System.IO.Compression.ZipArchiveEntry" /> into a <see cref="T:System.Byte" />[].
            </summary>
            <param name="entry">The <see cref="T:System.IO.Compression.ZipArchiveEntry" /> object that holds the compressed data.</param>
            <returns>
            A <see cref="T:System.Byte" />[] with the uncompressed data from this <see cref="T:System.IO.Compression.ZipArchiveEntry" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.DateTimeExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.DateTime" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.ToStringInvariant(System.DateTime,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.DateTime" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value specifying the format that is used to convert this <see cref="T:System.DateTime" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.DateTime" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.ToNullIfDefault(System.DateTime)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.DateTime" /> object is <see langword="default" />(<see cref="T:System.DateTime" />), otherwise its original value.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.DateTime" /> object is <see langword="default" />(<see cref="T:System.DateTime" />);
            otherwise, its original value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.SubtractYears(System.DateTime,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of years from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the years to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified years.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.SubtractMonths(System.DateTime,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of months from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the months to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified months.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.SubtractDays(System.DateTime,System.Double)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of days from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the days to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified days.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.SubtractHours(System.DateTime,System.Double)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of hours from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the hours to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified hours.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.SubtractMinutes(System.DateTime,System.Double)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of minutes from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the minutes to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified minutes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.SubtractSeconds(System.DateTime,System.Double)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of seconds from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the seconds to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified seconds.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.SubtractMilliseconds(System.DateTime,System.Double)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of milliseconds from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the milliseconds to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified milliseconds.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.SubtractTicks(System.DateTime,System.Int64)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of ticks from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the ticks to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified ticks.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.AddBusinessDays(System.DateTime,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that adds the specified number of business days to this <see cref="T:System.DateTime" /> value. Business days exclude Saturday and Sunday. The calculation is iterative. If <paramref name="days" /> is positive, days are added, otherwise days are subtracted.
            <para>Example 1: Friday + 2 business days = Tuesday</para>
            <para>Example 2: Monday - 2 business days = Thursday</para>
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="days">A <see cref="T:System.Int32" /> value specifying the business days to be added to this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the sum of this <see cref="T:System.DateTime" /> value and the specified business days.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.SubtractBusinessDays(System.DateTime,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of business days from this <see cref="T:System.DateTime" /> value. Business days exclude Saturday and Sunday. The calculation is iterative. If <paramref name="days" /> is positive, days are subtracted, otherwise days are added.
            <para>Example 1: Friday + 2 business days = Tuesday</para>
            <para>Example 2: Monday - 2 business days = Thursday</para>
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="days">A <see cref="T:System.Int32" /> value specifying the business days to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified business days.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.GetTotalBusinessDays(System.DateTime,System.DateTime)">
            <summary>
            Computes the total count of business days between two <see cref="T:System.DateTime" /> instances. Business days exclude Saturday and Sunday. The time fraction is ignored and the returned value is inclusive.
            <para>Example 1: Friday through Tuesday = 3 business days</para>
            <para>Example 2: Saturday through Sunday = 0 business days</para>
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime" /> value to compare to <paramref name="value" />.</param>
            <param name="value">The <see cref="T:System.DateTime" /> value to compare to this <see cref="T:System.DateTime" />. <paramref name="value" /> can be either less or greater than this <see cref="T:System.DateTime" /> value.</param>
            <returns>
            A <see cref="T:System.Int32" /> value representing the total count of business days between two <see cref="T:System.DateTime" /> instances.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.CompareTo(System.DateTime,System.DateTime,BytecodeApi.DateTimePart)">
            <summary>
            Compares the value of this <see cref="T:System.DateTime" /> instance to a specified <see cref="T:System.DateTime" /> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value. The <paramref name="part" /> parameter specifies which fraction is considered during comparison.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime" /> value to be compared to <paramref name="other" />.</param>
            <param name="other">A <see cref="T:System.DateTime" /> to compare with <paramref name="dateTime" />.</param>
            <param name="part">The <see cref="T:BytecodeApi.DateTimePart" /> specifying, which fraction is considered during comparison.</param>
            <returns>
            A value that indicates the relative order of the objects being compared considering only the specified <see cref="T:BytecodeApi.DateTimePart" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.GetPart(System.DateTime,BytecodeApi.DateTimePart)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that represents a fraction of this <see cref="T:System.DateTime" /> value specified by the <paramref name="part" /> parameter.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime" /> value to be stripped.</param>
            <param name="part">The <see cref="T:BytecodeApi.DateTimePart" /> specifying, which fraction of <paramref name="dateTime" /> is returned.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> that represents a fraction of this <see cref="T:System.DateTime" /> value specified by the <paramref name="part" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.GetFirstDayOfWeek(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> representing the first day of the week according to the current culture.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object representing the first day of the week according to the current culture.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.GetFirstDayOfWeek(System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> representing the first day of the week using specified culture-specific calendar rules.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="culture">An object that supplies culture-specific calendar rules.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object representing the first day of the week according to <paramref name="culture" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DateTimeExtensions.GetFirstDayOfWeek(System.DateTime,System.DayOfWeek)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> representing the first day of the week, according to the <paramref name="firstDayOfWeek" /> parameter.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="firstDayOfWeek">The first day of week.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object representing the first day of the week, according to the <paramref name="firstDayOfWeek" /> parameter.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.DoubleExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Double" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.DoubleExtensions.IsInfinity(System.Double)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number evaluates to negative or positive infinity.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />.
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DoubleExtensions.IsNaN(System.Double)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number is not a number (<see cref="F:System.Double.NaN" />).
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Double.NaN" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DoubleExtensions.IsNegativeInfinity(System.Double)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number evaluates to negative infinity.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Double.NegativeInfinity" />.
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DoubleExtensions.IsPositiveInfinity(System.Double)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number evaluates to positive infinity.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Double.PositiveInfinity" />.
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DoubleExtensions.ToStringInvariant(System.Double)">
            <summary>
            Converts the value of this <see cref="T:System.Double" /> to its equivalent <see cref="T:System.String" /> representation using the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to convert.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Double" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DoubleExtensions.ToStringInvariant(System.Double,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.Double" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value with the format that is used to convert this <see cref="T:System.Double" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Double" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DoubleExtensions.ToNullIfDefault(System.Double)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Double" /> value is 0.0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Double" /> value is 0.0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.ByteExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Byte" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.ByteExtensions.ToStringInvariant(System.Byte)">
            <summary>
            Converts the value of this <see cref="T:System.Byte" /> to its equivalent <see cref="T:System.String" /> representation using the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to convert.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Byte" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ByteExtensions.ToStringInvariant(System.Byte,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.Byte" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value with the format that is used to convert this <see cref="T:System.Byte" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Byte" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ByteExtensions.ToNullIfDefault(System.Byte)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Byte" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Byte" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.SByteExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.SByte" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.SByteExtensions.ToStringInvariant(System.SByte)">
            <summary>
            Converts the value of this <see cref="T:System.SByte" /> to its equivalent <see cref="T:System.String" /> representation using the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to convert.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.SByte" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.SByteExtensions.ToStringInvariant(System.SByte,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.SByte" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value with the format that is used to convert this <see cref="T:System.SByte" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.SByte" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.SByteExtensions.ToNullIfDefault(System.SByte)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.SByte" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.SByte" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.SingleExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Single" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.SingleExtensions.IsInfinity(System.Single)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number evaluates to negative or positive infinity.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Single.PositiveInfinity" /> or <see cref="F:System.Single.NegativeInfinity" />.
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.SingleExtensions.IsNaN(System.Single)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number is not a number (<see cref="F:System.Single.NaN" />).
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Single.NaN" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.SingleExtensions.IsNegativeInfinity(System.Single)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number evaluates to negative infinity.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Single.NegativeInfinity" />.
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.SingleExtensions.IsPositiveInfinity(System.Single)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number evaluates to positive infinity.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Single.PositiveInfinity" />.
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.SingleExtensions.ToStringInvariant(System.Single)">
            <summary>
            Converts the value of this <see cref="T:System.Single" /> to its equivalent <see cref="T:System.String" /> representation using the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to convert.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Single" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.SingleExtensions.ToStringInvariant(System.Single,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.Single" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value with the format that is used to convert this <see cref="T:System.Single" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Single" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.SingleExtensions.ToNullIfDefault(System.Single)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Single" /> value is 0.0f, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Single" /> value is 0.0f;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.GuidExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Guid" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.GuidExtensions.ToString(System.Guid,BytecodeApi.GuidFormat)">
            <summary>
            Returns a <see cref="T:System.String" /> representation of the value of this <see cref="T:System.Guid" /> instance, according to the provided format specifier.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="format">The <see cref="T:BytecodeApi.GuidFormat" /> that is used as a format specifier.</param>
            <returns>
            The value of this <see cref="T:System.Guid" /> represented as a <see cref="T:System.String" /> in the specified format.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.UInt16Extensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.UInt16" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.UInt16Extensions.ToStringInvariant(System.UInt16)">
            <summary>
            Converts the value of this <see cref="T:System.UInt16" /> to its equivalent <see cref="T:System.String" /> representation using the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to convert.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.UInt16" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.UInt16Extensions.ToStringInvariant(System.UInt16,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.UInt16" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value with the format that is used to convert this <see cref="T:System.UInt16" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.UInt16" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.UInt16Extensions.ToNullIfDefault(System.UInt16)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.UInt16" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.UInt16" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.Int16Extensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Int16" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.Int16Extensions.ToStringInvariant(System.Int16)">
            <summary>
            Converts the value of this <see cref="T:System.Int16" /> to its equivalent <see cref="T:System.String" /> representation using the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to convert.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Int16" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.Int16Extensions.ToStringInvariant(System.Int16,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.Int16" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value with the format that is used to convert this <see cref="T:System.Int16" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Int16" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.Int16Extensions.ToNullIfDefault(System.Int16)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Int16" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Int16" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.UInt32Extensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.UInt32" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.UInt32Extensions.ToStringInvariant(System.UInt32)">
            <summary>
            Converts the value of this <see cref="T:System.UInt32" /> to its equivalent <see cref="T:System.String" /> representation using the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to convert.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.UInt32" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.UInt32Extensions.ToStringInvariant(System.UInt32,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.UInt32" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value with the format that is used to convert this <see cref="T:System.UInt32" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.UInt32" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.UInt32Extensions.ToNullIfDefault(System.UInt32)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.UInt32" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.UInt32" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.UInt64Extensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.UInt64" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.UInt64Extensions.ToStringInvariant(System.UInt64)">
            <summary>
            Converts the value of this <see cref="T:System.UInt64" /> to its equivalent <see cref="T:System.String" /> representation using the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to convert.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.UInt64" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.UInt64Extensions.ToStringInvariant(System.UInt64,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.UInt64" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value with the format that is used to convert this <see cref="T:System.UInt64" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.UInt64" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.UInt64Extensions.ToNullIfDefault(System.UInt64)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.UInt64" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.UInt64" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.Int64Extensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Int64" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.Int64Extensions.ToStringInvariant(System.Int64)">
            <summary>
            Converts the value of this <see cref="T:System.Int64" /> to its equivalent <see cref="T:System.String" /> representation using the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to convert.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Int64" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.Int64Extensions.ToStringInvariant(System.Int64,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.Int64" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value with the format that is used to convert this <see cref="T:System.Int64" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Int64" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.Int64Extensions.ToNullIfDefault(System.Int64)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Int64" /> value is 0L, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Int64" /> value is 0L;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.Int32Extensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Int32" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.Int32Extensions.ToStringInvariant(System.Int32)">
            <summary>
            Converts the value of this <see cref="T:System.Int32" /> to its equivalent <see cref="T:System.String" /> representation using the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to convert.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Int32" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.Int32Extensions.ToStringInvariant(System.Int32,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.Int32" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value with the format that is used to convert this <see cref="T:System.Int32" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Int32" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.Int32Extensions.ToNullIfDefault(System.Int32)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Int32" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Int32" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.EnumExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see langword="enum" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.EnumExtensions.GetDescription(System.Enum)">
            <summary>
            Returns the <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> of this <see langword="enum" /> value, or <see langword="null" />, if the attribute was not found.
            </summary>
            <param name="value">The <see cref="T:System.Enum" /> value to be processed.</param>
            <returns>
            The <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> of this <see langword="enum" /> value, or <see langword="null" />, if the attribute was not found.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.EnumExtensions.GetDescriptionOrString(System.Enum)">
            <summary>
            Returns the <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> of this <see langword="enum" /> value. If the attribute was not found, the <see cref="T:System.String" /> representation of this <see langword="enum" /> is returned.
            </summary>
            <param name="value">The <see cref="T:System.Enum" /> value to be processed.</param>
            <returns>
            The <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> of this <see langword="enum" /> value.
            If the attribute was not found, the <see cref="T:System.String" /> representation of this <see langword="enum" /> is returned.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.ExceptionExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Exception" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.ExceptionExtensions.GetFullStackTrace(System.Exception)">
            <summary>
            Gets a <see cref="T:System.String" /> representing the complete stack trace including all inner exceptions for this <see cref="T:System.Exception" /> object.
            </summary>
            <param name="exception">The <see cref="T:System.Exception" /> to evaluate.</param>
            <returns>
            The complete stack trace including all inner exceptions for this <see cref="T:System.Exception" /> object.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ExceptionExtensions.GetFullStackTrace(System.Exception,System.Int32@)">
            <summary>
            Gets a <see cref="T:System.String" /> representing the complete stack trace including all inner exceptions for this <see cref="T:System.Exception" /> object.
            </summary>
            <param name="exception">The <see cref="T:System.Exception" /> to evaluate.</param>
            <param name="count">When this method returns, a <see cref="T:System.Int32" /> value indicating the amount of cascaded exceptions (inner exceptions).</param>
            <returns>
            The complete stack trace including all inner exceptions for this <see cref="T:System.Exception" /> object.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ExceptionExtensions.FindInnerException``1(System.Exception)">
            <summary>
            Tries to find an inner exception of this <see cref="T:System.Exception" /> that matches the specified type.
            </summary>
            <typeparam name="T">The explicit type of the inner exception to search for.</typeparam>
            <param name="exception">The <see cref="T:System.Exception" /> to traverse from.</param>
            <returns>
            The closest first inner exception of this <see cref="T:System.Exception" /> that matches the specified type, if found;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ExceptionExtensions.AppendStackTrace(System.Exception,System.Diagnostics.StackTrace)">
            <summary>
            Appends the specified <see cref="T:System.Diagnostics.StackTrace" /> to this <see cref="T:System.Exception" />.
            </summary>
            <param name="exception">The <see cref="T:System.Exception" /> to append <paramref name="stackTrace" /> to.</param>
            <param name="stackTrace">The <see cref="T:System.Diagnostics.StackTrace" /> to append to <paramref name="exception" />.</param>
        </member>
        <member name="T:BytecodeApi.Extensions.FileInfoExtension">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.IO.FileInfo" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.FileInfoExtension.ReadAllBytes(System.IO.FileInfo)">
            <summary>
            Opens the file, reads the contents of the file into a <see cref="T:System.Byte" />[], and then closes the file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] containing the contents of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.FileInfoExtension.ReadAllLines(System.IO.FileInfo)">
            <summary>
            Opens the file, reads all lines of the file into a <see cref="T:System.String" />[], and then closes the file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <returns>
            A new <see cref="T:System.String" />[] containing all lines of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.FileInfoExtension.ReadAllLines(System.IO.FileInfo,System.Text.Encoding)">
            <summary>
            Opens the file, reads all lines of the file with the specified encoding into a <see cref="T:System.String" />[], and then closes the file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>
            A new <see cref="T:System.String" />[] containing all lines of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.FileInfoExtension.ReadAllText(System.IO.FileInfo)">
            <summary>
            Opens a text file, reads all lines of the file into a <see cref="T:System.String" />, and then closes the file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <returns>
            A <see cref="T:System.String" /> containing all lines of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.FileInfoExtension.ReadAllText(System.IO.FileInfo,System.Text.Encoding)">
            <summary>
            Opens a text file, reads all lines of the file with the specified encoding into a <see cref="T:System.String" />, and then closes the file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>
            A <see cref="T:System.String" /> containing all lines of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.FileInfoExtension.ReadLines(System.IO.FileInfo)">
            <summary>
            Reads the lines of a file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <returns>
            All the lines of the file, or the lines that are the result of a query.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.FileInfoExtension.ReadLines(System.IO.FileInfo,System.Text.Encoding)">
            <summary>
            Reads the lines of a file that has a specified encoding.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>
            All the lines of the file, or the lines that are the result of a query.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.FileInfoExtension.SendToRecycleBin(System.IO.FileInfo)">
            <summary>
            Sends this file to the recycle bin.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.FileInfoExtension.Unblock(System.IO.FileInfo)">
            <summary>
            Deletes the :Zone.Identifier alternate data stream for this file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <returns>
            <see langword="true" />, if the :Zone.Identifier alternate data stream was present and could be deleted;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.FileInfoExtension.GetIcon(System.IO.FileInfo,System.Boolean)">
            <summary>
            Extracts the icon of this file. Returns <see langword="null" />, if extraction failed.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <param name="large"><see langword="true" /> to extract the large icon; otherwise, <see langword="false" />.</param>
            <returns>
            A new <see cref="T:System.Drawing.Icon" /> that has been extracted from this file and <see langword="null" />, if extraction failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.FileInfoExtension.CompareContents(System.IO.FileInfo,System.IO.FileInfo)">
            <summary>
            Compares the contents of two files. Returns <see langword="true" />, if both files are of equal size and equal binary content.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <param name="other">The other <see cref="T:System.IO.FileInfo" /> to compare to <paramref name="file" />.</param>
            <returns>
            <see langword="true" />, if both files are of equal size and equal binary content;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.FileInfoExtension.FindSequence(System.IO.FileInfo,System.Byte[])">
            <summary>
            Searches the file for the first occurrence of <paramref name="sequence" />. If not found, returns -1.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to be searched.</param>
            <param name="sequence">The <see cref="T:System.Byte" />[] to search for.</param>
            <returns>
            The index of the first occurrence of <paramref name="sequence" /> and -1, if not found.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.FileInfoExtension.FindSequence(System.IO.FileInfo,System.Byte[],System.Int32)">
            <summary>
            Searches the file for the first occurrence of <paramref name="sequence" /> starting from <paramref name="startIndex" />. If not found, returns -1.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to be searched.</param>
            <param name="sequence">The <see cref="T:System.Byte" />[] to search for.</param>
            <param name="startIndex">The zero-based starting position to start searching from.</param>
            <returns>
            The index of the first occurrence of <paramref name="sequence" /> and -1, if not found.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.DirectoryInfoExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.IO.DirectoryInfo" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.DirectoryInfoExtensions.SendToRecycleBin(System.IO.DirectoryInfo)">
            <summary>
            Sends this directory and all of its contents to recycle bin.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.DirectoryInfoExtensions.ToUncPath(System.IO.DirectoryInfo)">
            <summary>
            Gets the UNC path of this directory. If the path cannot be converted to a UNC path, the original path is returned.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
            <returns>
            The UNC path of this directory, if conversion is possible;
            otherwise, the original path.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DirectoryInfoExtensions.ComputeDirectorySize(System.IO.DirectoryInfo)">
            <summary>
            Computes the size of this directory including all of its subdirectories.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
            <returns>
            The total size in bytes of this directory.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DirectoryInfoExtensions.Compare(System.IO.DirectoryInfo,System.IO.DirectoryInfo,BytecodeApi.IO.FileSystem.CompareDirectoryOptions)">
            <summary>
            Compares two directories with an <see cref="T:BytecodeApi.IO.FileSystem.CompareDirectoryOptions" /> parameter specifying the properties to compare.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
            <param name="other">The other <see cref="T:System.IO.DirectoryInfo" /> to compare to <paramref name="directory" />.</param>
            <param name="options">The <see cref="T:BytecodeApi.IO.FileSystem.CompareDirectoryOptions" /> flags specifying what properties to compare.</param>
            <returns>
            A value indicating whether the directories are equal.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DirectoryInfoExtensions.CopyTo(System.IO.DirectoryInfo,System.String)">
            <summary>
            Copies this directory to a new location including all files and subdirectories recursively.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
            <param name="destDirectoryName">The path of the new location including the top directory name.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.DirectoryInfoExtensions.CopyTo(System.IO.DirectoryInfo,System.String,System.Boolean)">
            <summary>
            Copies this directory to a new location including all files and subdirectories recursively.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
            <param name="destDirectoryName">The path of the new location including the top directory name.</param>
            <param name="overwrite"><see langword="true" /> to overwrite contents. Existing files in the destination directory that do not exist in the source directory are not deleted.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.DirectoryInfoExtensions.DeleteContents(System.IO.DirectoryInfo)">
            <summary>
            Deletes all files and directories from this directory, if it exists.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.DirectoryInfoExtensions.DeleteContents(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Deletes all files and directories from this directory, if it exists. If <paramref name="create" /> is set to <see langword="true" />, an empty directory will be created.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
            <param name="create"><see langword="true" /> to create the directory, if it does not exist.</param>
        </member>
        <member name="T:BytecodeApi.Extensions.FileSystemInfoExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.IO.FileSystemInfo" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.FileSystemInfoExtensions.ShowPropertiesDialog(System.IO.FileSystemInfo)">
            <summary>
            Shows the properties dialog for this file or directory.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileSystemInfo" /> representing a file or directory to show the properties dialog from.</param>
        </member>
        <member name="T:BytecodeApi.Extensions.IEnumerableExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for querying data structures that implement <see cref="T:System.Collections.IEnumerable" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.Any(System.Collections.IEnumerable)">
            <summary>
            Determines whether a sequence contains any elements.
            </summary>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to check for emptiness.</param>
            <returns>
            <see langword="true" />, if the source sequence contains any elements;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.None``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether a sequence contains no elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to check for emptiness.</param>
            <returns>
            <see langword="true" />, if the source sequence is empty;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.None``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Determines whether a sequence that satisfies a specified condition contains no elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to check for emptiness.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            <see langword="true" />, if the source sequence that satisfies a specified condition is empty;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.None(System.Collections.IEnumerable)">
            <summary>
            Determines whether a sequence contains no elements.
            </summary>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to check for emptiness.</param>
            <returns>
            <see langword="true" />, if the source sequence is empty;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.Count(System.Collections.IEnumerable)">
            <summary>
            Returns the number of elements in a sequence.
            </summary>
            <param name="source">A sequence that contains elements to be counted.</param>
            <returns>
            The number of elements in the input sequence.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Searches for the specified item in the sequence and returns the index of its first occurrence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to search in.</param>
            <param name="item">The item to search for in <paramref name="source" />.</param>
            <returns>
            The index of <paramref name="item" />, if found in <paramref name="source" />; If not found, returns -1.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Searches for the sequence until a specified condition is met and returns the index of its first occurrence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to search in.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The index of the first occurrence, where a specified condition met; If not found, returns -1.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.AllValuesEqual``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns <see langword="true" />, if all values of <paramref name="source" /> are equal or if the <see cref="T:System.Collections.Generic.IEnumerable`1" /> has no elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to check.</param>
            <returns>
            <see langword="true" />, if all values of <paramref name="source" /> are equal or if the <see cref="T:System.Collections.Generic.IEnumerable`1" /> has no elements;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.ToIndeterminate(System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Converts all <see cref="T:System.Boolean" /> values to a nullable <see cref="T:System.Boolean" /> value representing an indeterminate indicator.
            </summary>
            <param name="values">A collection of <see cref="T:System.Boolean" /> of values to be processed.</param>
            <returns>
            <see langword="true" />, if all values of <paramref name="values" /> are equal to <see langword="true" />;
            <see langword="false" />, if all values of <paramref name="values" /> are equal to <see langword="false" /> or <paramref name="values" /> has no elements;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.ToIndeterminate(System.Collections.Generic.IEnumerable{System.Nullable{System.Boolean}})">
            <summary>
            Converts all <see cref="T:System.Boolean" /> values to a nullable <see cref="T:System.Boolean" /> value representing an indeterminate indicator.
            </summary>
            <param name="values">A collection of <see cref="T:System.Boolean" /> of values to be processed.</param>
            <returns>
            <see langword="true" />, if all values of <paramref name="values" /> are equal to <see langword="true" />;
            <see langword="false" />, if all values of <paramref name="values" /> are equal to <see langword="false" /> or <paramref name="values" /> has no elements;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.Sum(System.Collections.Generic.IEnumerable{System.TimeSpan})">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.TimeSpan" /> values.
            </summary>
            <param name="source">A sequence of <see cref="T:System.TimeSpan" /> values that are used to calculate a sum.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> with the sum of the projected values.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}})">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.TimeSpan" /> values. Values equal to <see langword="null" /> are excluded from the calculation and treated as <see cref="F:System.TimeSpan.Zero" />.
            </summary>
            <param name="source">A sequence of <see cref="T:System.TimeSpan" /> values that are used to calculate a sum.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> with the sum of the projected values.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.Average(System.Collections.Generic.IEnumerable{System.TimeSpan})">
            <summary>
            Computes the average of a sequence of <see cref="T:System.TimeSpan" /> values.
            </summary>
            <param name="source">A sequence of <see cref="T:System.TimeSpan" /> values that are used to calculate a sum.</param>
            <returns>
            The average of the sequence of <paramref name="source" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.FirstOrException``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the first element of a sequence or throws an exception of the type <typeparamref name="TException" />, if <paramref name="source" /> does not have any elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TException">The type of the exception that is instantiated and thrown.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return an element from.</param>
            <returns>
            The first element of a sequence, if <paramref name="source" /> has any;
            otherwise, instantiates and throws an exception of the type <typeparamref name="TException" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.FirstOrException``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Returns the first element of a sequence that satisfies a specified condition or throws an exception of the type <typeparamref name="TException" />, if no such element is found.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TException">The type of the exception that is instantiated and thrown.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return an element from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The first element of a sequence that satisfies a specified condition, if any item satisfied;
            otherwise, instantiates and throws an exception of the type <typeparamref name="TException" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.ValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Gets the value associated with the specified key from this <see cref="T:System.Collections.Generic.IDictionary`2" />, or returns a default value if it was not found.
            </summary>
            <typeparam name="TKey">The type of the key of this <see cref="T:System.Collections.Generic.IDictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of this <see cref="T:System.Collections.Generic.IDictionary`2" />.</typeparam>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2" /> to search.</param>
            <param name="key">The key of the value to get.</param>
            <returns>
            The value associated with the specified key, or a default value if it was not found.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.ValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Gets the value associated with the specified key from this <see cref="T:System.Collections.Generic.IDictionary`2" />, or returns a default value if it was not found.
            </summary>
            <typeparam name="TKey">The type of the key of this <see cref="T:System.Collections.Generic.IDictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of this <see cref="T:System.Collections.Generic.IDictionary`2" />.</typeparam>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2" /> to search.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defaultValue">The value that is used if the key was not found.</param>
            <returns>
            The value associated with the specified key, or a default value if it was not found.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.AsString(System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            Creates a <see cref="T:System.String" /> from this collection of characters.
            </summary>
            <param name="source">The collection of characters to create the <see cref="T:System.String" /> from.</param>
            <returns>
            A new <see cref="T:System.String" />, created from this collection of characters.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.AsString(System.Char[])">
            <summary>
            Creates a <see cref="T:System.String" /> from this <see cref="T:System.Char" />[].
            </summary>
            <param name="source">The <see cref="T:System.Char" />[] to create the <see cref="T:System.String" /> from.</param>
            <returns>
            A new <see cref="T:System.String" />, created from this <see cref="T:System.Char" />[].
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.AsString(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Creates a <see cref="T:System.String" /> from this collection of objects. All objects in <paramref name="source" /> are converted to <see cref="T:System.String" /> by calling <see cref="M:System.Object.ToString" />. Then, the resulting strings are concatenated.
            </summary>
            <param name="source">The collection of objects to concatenate.</param>
            <returns>
            A new <see cref="T:System.String" />, created from this collection of objects, where <see cref="M:System.Object.ToString" /> was called on each object prior to concatenation.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.AsString(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a <see cref="T:System.String" /> from this collection of strings, by concatenating all values in <paramref name="source" />.
            </summary>
            <param name="source">The collection strings to concatenate.</param>
            <returns>
            A new <see cref="T:System.String" />, created from this collection of strings, where all values in <paramref name="source" /> are concatenated.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.AsString(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Creates a <see cref="T:System.String" /> from this collection of strings, by concatenating all values in <paramref name="source" /> using the specified separator.
            </summary>
            <param name="source">The collection strings to concatenate.</param>
            <param name="separator">A <see cref="T:System.String" /> specifying the separator to concatenate the values in <paramref name="source" /> with, or <see langword="null" /> to not use a separator.</param>
            <returns>
            A new <see cref="T:System.String" />, created from this collection of strings, where all values in <paramref name="source" /> are concatenated using the specified separator.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.AsMultilineString(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a multiline <see cref="T:System.String" /> from this collection of strings, by concatenating all values with a CRLF.
            </summary>
            <param name="source">The <see cref="T:System.String" />[] to concatenate.</param>
            <returns>
            A new <see cref="T:System.String" /> that represents this <see cref="T:System.String" /> collection as multiline text, where each element is concatenated with a CRLF.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.AsMultilineString(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Creates a multiline <see cref="T:System.String" /> from this collection of strings, by concatenating all values with a CRLF.
            </summary>
            <param name="source">The <see cref="T:System.String" />[] to concatenate.</param>
            <param name="lastLine"><see langword="true" /> to add an additional CRLF at the end.</param>
            <returns>
            A new <see cref="T:System.String" /> that represents this <see cref="T:System.String" /> collection as multiline text, where each element is concatenated with a CRLF.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performs an <see cref="T:System.Action`1" /> on each element of a sequence and returns the elements after invoking <paramref name="action" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to process.</param>
            <param name="action">The action to perform on each element of <paramref name="source" />.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains all elements from the input sequence.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.OfExactType``1(System.Collections.IEnumerable)">
            <summary>
            Filters the elements of an <see cref="T:System.Collections.IEnumerable" /> based on a specified type. Objects must be of type <typeparamref name="TResult" />. Objects of classes that inherit <typeparamref name="TResult" /> are not returned.
            </summary>
            <typeparam name="TResult">The type to filter the elements of the sequence on.</typeparam>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> whose elements to filter.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains elements from the input sequence of type <typeparamref name="TResult" />. Objects of classes that inherit <typeparamref name="TResult" /> are not returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Bypasses a specified number of elements at the end of a sequence and then returns the preceding elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return elements from.</param>
            <param name="count">The number of elements to remove from the end of <paramref name="source" /> before returning the preceding elements.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the preceding elements that occur before the removed elements in the input sequence.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.TakeWhileInclusive``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Returns elements from a sequence as long as a specified condition is <see langword="true" />, however including the last element, where the condition is <see langword="false" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return elements from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the elements from the input sequence that occur before the element at which the test no longer passes, however including the last element, where the condition is <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.TakeWhileInclusive``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
            <summary>
            Returns elements from a sequence as long as a specified condition is <see langword="true" />, however including the last element, where the condition is <see langword="false" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return elements from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the elements from the input sequence that occur before the element at which the test no longer passes, however including the last element, where the condition is <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.SkipWhileExclusive``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Bypasses elements in a sequence as long as a specified condition is <see langword="true" /> and then returns the remaining elements, excluding the first element, where the condition is <see langword="true" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return elements from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the elements from the input sequence starting after the first element in the linear series that does not pass the test specified by predicate.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.SkipWhileExclusive``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
            <summary>
            Bypasses elements in a sequence as long as a specified condition is <see langword="true" /> and then returns the remaining elements, excluding the first element, where the condition is <see langword="true" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return elements from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the elements from the input sequence starting after the first element in the linear series that does not pass the test specified by predicate.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.SelectMany``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and flattens the resulting sequences into one sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to project.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.ExceptNull``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Filters a sequence of values and returns only values which are not <see langword="null" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return elements from.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains elements from the input sequence that are not <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.ExceptNull``1(System.Collections.Generic.IEnumerable{System.Nullable{``0}})">
            <summary>
            Filters a sequence of values and returns only values which are not <see langword="null" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return elements from.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains elements from the input sequence that are not <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns all distinct elements of a sequence according to a specified key selector function.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TKey">The type of the key returned by keySelector.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return elements from.</param>
            <param name="keySelector">A <see cref="T:System.Func`2" /> to extract the key for each element.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with all distinct elements of <paramref name="source" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Returns all distinct elements of a sequence according to a specified key selector function by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TKey">The type of the key returned by keySelector.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return elements from.</param>
            <param name="keySelector">A <see cref="T:System.Func`2" /> to extract the key for each element.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare the elements.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with all distinct elements of <paramref name="source" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.Except``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Produces the set difference of a sequence and one element.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequence and the second element.</typeparam>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that are not equal to <paramref name="second" /> will be returned.</param>
            <param name="second">The second element, which will be removed from the returned sequence, if it also occurs in the first sequence.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the set difference of the elements from the input sequence and the second element.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.Except``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Produces the set difference of a sequence and one element by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequence and the second element.</typeparam>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that are not equal to <paramref name="second" /> will be returned.</param>
            <param name="second">The second element, which will be removed from the returned sequence, if it also occurs in the first sequence.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare the elements.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the set difference of the elements from the input sequence and the second element.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Splits up a sequence into chunks with the specified size. Each chunk is an <see cref="T:System.Collections.Generic.IEnumerable`1" />, containing a maximum number of elements according to <paramref name="chunkSize" />. The last chunk may contain less elements than specified <paramref name="chunkSize" />.
            </summary>
            <typeparam name="TSource">The type of the elements to chunk.</typeparam>
            <param name="source">A sequence of values to chunk.</param>
            <param name="chunkSize">The chunk size. The last chunk may contain less elements than specified <paramref name="chunkSize" />. All previous chunks contain exactly the amount of chunks specified in <paramref name="chunkSize" />.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with an <see cref="T:System.Collections.Generic.IEnumerable`1" /> for each returned chunk.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.Sort``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Sorts the elements of a sequence in ascending order.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to sort.</param>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1" /> whose elements are sorted.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Sorts the elements of a sequence in ascending order using a specified comparer.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to sort.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare the elements.</param>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1" /> whose elements are sorted.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.SortDescending``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Sorts the elements of a sequence in descending order.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to sort.</param>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1" /> whose elements are sorted in descending order.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.SortDescending``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Sorts the elements of a sequence in descending order using a specified comparer.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to sort.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare the elements.</param>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1" /> whose elements are sorted in descending order.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.SortRandom``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Randomizes the order of the elements of a sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to sort.</param>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1" /> whose elements are sorted in randomized order.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.Swap``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Exchanges keys with values in this <see cref="T:System.Collections.Generic.IDictionary`2" /> and returns a new <see cref="T:System.Collections.Generic.Dictionary`2" />, where keys and values are swapped.
            </summary>
            <typeparam name="TKey">The type of the key of this <see cref="T:System.Collections.Generic.IDictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of this <see cref="T:System.Collections.Generic.IDictionary`2" />.</typeparam>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2" /> to process.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" />, where keys and values are swapped.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.Swap``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Exchanges keys with values in this <see cref="T:System.Collections.Generic.IDictionary`2" /> using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> and returns a new <see cref="T:System.Collections.Generic.Dictionary`2" />, where keys and values are swapped.
            </summary>
            <typeparam name="TKey">The type of the key of this <see cref="T:System.Collections.Generic.IDictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of this <see cref="T:System.Collections.Generic.IDictionary`2" />.</typeparam>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2" /> to process.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare the elements.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" />, where keys and values are swapped.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds the elements of the specified collection to the end of <paramref name="source" />.
            </summary>
            <typeparam name="TSource">The type of the elements to add.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.ICollection`1" /> to add the elements from <paramref name="collection" /> to.</param>
            <param name="collection">The collection of elements to be addded to <paramref name="source" />.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.RemoveAll``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean})">
            <summary>
            Removes all elements that satisfy a specified condition.
            </summary>
            <typeparam name="TSource">The type of the elements to remove.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.ICollection`1" /> to remove elements from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.RemoveRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Removes all elements that occur in the specified collection.
            </summary>
            <typeparam name="TSource">The type of the elements to remove.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.ICollection`1" /> to remove elements from.</param>
            <param name="collection">The <see cref="T:System.Collections.Generic.ICollection`1" /> with all elements to remove from <paramref name="source" />.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performs the specified <see cref="T:System.Action" /> on each element of this <see cref="T:System.Collections.Generic.IEnumerable`1" />.
            </summary>
            <typeparam name="TSource">The type of the elements to process.</typeparam>
            <param name="source">A sequence of values to process.</param>
            <param name="action">The action to perform on each element of <paramref name="source" />.</param>
        </member>
        <member name="T:BytecodeApi.Extensions.ImageExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Drawing.Image" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.ImageExtensions.ToArray(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Converts this <see cref="T:System.Drawing.Image" /> in the specified format to its <see cref="T:System.Byte" />[] representation.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <param name="format">An <see cref="T:System.Drawing.Imaging.ImageFormat" /> that specifies the format of the saved image.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] representing this <see cref="T:System.Drawing.Image" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ImageExtensions.ToArray(System.Drawing.Image,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
            <summary>
            Converts this <see cref="T:System.Drawing.Image" /> with the specified encoder and image encoder parameters to its <see cref="T:System.Byte" />[] representation.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <param name="encoder">The <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> for this <see cref="T:System.Drawing.Image" />.</param>
            <param name="encoderParams">An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> that specifies parameters used by the image encoder.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] representing this <see cref="T:System.Drawing.Image" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ImageExtensions.SaveJpeg(System.Drawing.Image,System.String)">
            <summary>
            Saves this <see cref="T:System.Drawing.Image" /> in JPEG format with 95 % quality to the specified file.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <param name="path">A <see cref="T:System.String" /> that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" />.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.ImageExtensions.SaveJpeg(System.Drawing.Image,System.String,System.Int32)">
            <summary>
            Saves this <see cref="T:System.Drawing.Image" /> in JPEG format with the specified quality to the specified file.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <param name="path">A <see cref="T:System.String" /> that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" />.</param>
            <param name="quality">The quality to be used for JPEG encoding.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.ImageExtensions.SaveJpeg(System.Drawing.Image,System.IO.Stream)">
            <summary>
            Writes this <see cref="T:System.Drawing.Image" /> in JPEG format with 95 % quality to the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which to write the image to.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.ImageExtensions.SaveJpeg(System.Drawing.Image,System.IO.Stream,System.Int32)">
            <summary>
            Writes this <see cref="T:System.Drawing.Image" /> in JPEG format with the specified quality to the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which to write the image to.</param>
            <param name="quality">The quality to be used for JPEG encoding.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.ImageExtensions.ToArrayJpeg(System.Drawing.Image)">
            <summary>
            Converts this <see cref="T:System.Drawing.Image" /> in JPEG format with 95 % quality to its <see cref="T:System.Byte" />[] representation.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] representing this <see cref="T:System.Drawing.Image" />, saved in JPEG format with 95 % quality.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ImageExtensions.ToArrayJpeg(System.Drawing.Image,System.Int32)">
            <summary>
            Converts this <see cref="T:System.Drawing.Image" /> in JPEG format with the specified quality to its <see cref="T:System.Byte" />[] representation.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <param name="quality">The quality to be used for JPEG encoding.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] representing this <see cref="T:System.Drawing.Image" />, saved in JPEG format with the specified quality.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ImageExtensions.ToBitmapSource(System.Drawing.Bitmap)">
            <summary>
            Returns a managed <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, based on the provided <see cref="T:System.Drawing.Bitmap" />.
            </summary>
            <param name="bitmap">The <see cref="T:System.Drawing.Bitmap" /> to convert.</param>
            <returns>
            The created <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.DecimalExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Decimal" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.DecimalExtensions.ToStringInvariant(System.Decimal)">
            <summary>
            Converts the value of this <see cref="T:System.Decimal" /> to its equivalent <see cref="T:System.String" /> representation using the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value to convert.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Decimal" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DecimalExtensions.ToStringInvariant(System.Decimal,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.Decimal" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value with the format that is used to convert this <see cref="T:System.Decimal" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.Decimal" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.DecimalExtensions.ToNullIfDefault(System.Decimal)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Decimal" /> value is 0.0m, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Decimal" /> value is 0.0m;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.IQueryableExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for querying data structures that implement <see cref="T:System.Linq.IQueryable" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.IQueryableExtensions.FirstOrException``2(System.Linq.IQueryable{``0})">
            <summary>
            Returns the first element of a sequence or throws an exception of the type <typeparamref name="TException" />, if <paramref name="source" /> does not have any elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TException">The type of the exception that is instantiated and thrown.</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</param>
            <returns>
            The first element of a sequence, if <paramref name="source" /> has any;
            otherwise, instantiates and throws an exception of the type <typeparamref name="TException" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.IQueryableExtensions.FirstOrException``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Returns the first element of a sequence that satisfies a specified condition or throws an exception of the type <typeparamref name="TException" />, if no such element is found.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TException">The type of the exception that is instantiated and thrown.</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The first element of a sequence that satisfies a specified condition, if any item satisfied;
            otherwise, instantiates and throws an exception of the type <typeparamref name="TException" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.RandomNumberGeneratorExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetBytes(System.Security.Cryptography.RandomNumberGenerator,System.Int32)">
            <summary>
            Creates a <see cref="T:System.Byte" />[] with a specified length and fills all elements with a cryptographically strong random sequence of bytes.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <param name="count">The size of the returned <see cref="T:System.Byte" />[].</param>
            <returns>
            A new <see cref="T:System.Byte" />[] with a specified length, filled with a cryptographically strong random sequence of bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetNonZeroBytes(System.Security.Cryptography.RandomNumberGenerator,System.Int32)">
            <summary>
            Creates a <see cref="T:System.Byte" />[] with a specified length and fills all elements with a cryptographically strong random sequence of nonzero bytes.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <param name="count">The size of the returned <see cref="T:System.Byte" />[].</param>
            <returns>
            A new <see cref="T:System.Byte" />[] with a specified length, filled with a cryptographically strong random sequence of nonzero bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetBoolean(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.Boolean" /> value that is either <see langword="false" /> or <see langword="true" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.Boolean" /> value that is either <see langword="false" /> or <see langword="true" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetByte(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.Byte" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.Byte.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.Byte" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.Byte.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetNonZeroByte(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random nonzero <see cref="T:System.Byte" /> value that is less than or equal to <see cref="F:System.Byte.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random nonzero <see cref="T:System.Byte" /> value that is less than or equal to <see cref="F:System.Byte.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetSByte(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.SByte" /> value that is greater than or equal to <see cref="F:System.SByte.MinValue" />, and less than or equal to <see cref="F:System.SByte.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.SByte" /> value that is greater than or equal to <see cref="F:System.SByte.MinValue" />, and less than or equal to <see cref="F:System.SByte.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetChar(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.Char" /> value that is greater than or equal to '\0', and less than or equal to <see cref="F:System.Char.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.Char" /> value that is greater than or equal to '\0', and less than or equal to <see cref="F:System.Char.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetInt32(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.Int32" /> value that is greater than or equal to <see cref="F:System.Int32.MinValue" />, and less than or equal to <see cref="F:System.Int32.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.Int32" /> value that is greater than or equal to <see cref="F:System.Int32.MinValue" />, and less than or equal to <see cref="F:System.Int32.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetUInt32(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.UInt32" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.UInt32.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.UInt32" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.UInt32.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetInt64(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.Int64" /> value that is greater than or equal to <see cref="F:System.Int64.MinValue" />, and less than or equal to <see cref="F:System.Int64.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.Int64" /> value that is greater than or equal to <see cref="F:System.Int64.MinValue" />, and less than or equal to <see cref="F:System.Int64.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetUInt64(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.UInt64" /> value that is greater than or equal to 0UL, and less than or equal to <see cref="F:System.UInt64.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.UInt64" /> value that is greater than or equal to 0UL, and less than or equal to <see cref="F:System.UInt64.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetInt16(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.Int16" /> value that is greater than or equal to <see cref="F:System.Int16.MinValue" />, and less than or equal to <see cref="F:System.Int16.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.Int16" /> value that is greater than or equal to <see cref="F:System.Int16.MinValue" />, and less than or equal to <see cref="F:System.Int16.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetUInt16(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.UInt16" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.UInt16.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.UInt16" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.UInt16.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomNumberGeneratorExtensions.GetBits(System.Security.Cryptography.RandomNumberGenerator,System.Int32)">
            <summary>
            Creates a <see cref="T:System.Collections.BitArray" /> with a specified length and fills all elements with a cryptographically strong random sequence of <see cref="T:System.Boolean" /> values.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <param name="count">The size of the returned <see cref="T:System.Collections.BitArray" />.</param>
            <returns>
            A new <see cref="T:System.Collections.BitArray" /> with a specified length, filled with a cryptographically strong random sequence of <see cref="T:System.Boolean" /> values.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.ReflectionExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with .NET reflection objects, such as <see cref="T:System.Type" /> and <see cref="T:System.Reflection.MethodBase" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.ReflectionExtensions.IsAssignableFrom(System.Type,System.Type,System.Boolean)">
            <summary>
            Determines whether an instance of this <see cref="T:System.Type" /> can be assigned to the current <see cref="T:System.Type" /> instance.
            </summary>
            <param name="type">The <see cref="T:System.Type" /> to check.</param>
            <param name="c">The <see cref="T:System.Type" /> to compare with this <see cref="T:System.Type" />.</param>
            <param name="excludeSelf"><see langword="true" /> to exclude this <see cref="T:System.Type" /> from being checked. If this parameter is <see langword="true" /> and this <see cref="T:System.Type" /> equals <paramref name="c" />, <see langword="false" /> is returned.</param>
            <returns>
            <see langword="true" />, if <paramref name="c" /> is derived either directly or indirectly derived from this <see cref="T:System.Type" />, this <see cref="T:System.Type" /> is an interface that <paramref name="c" /> implements, <paramref name="c" /> is a generic type parameter and this <see cref="T:System.Type" /> represents one of the constraints of <paramref name="c" />, <paramref name="c" /> represents a value type and this <see cref="T:System.Type" /> represents <see cref="T:System.Nullable" />&lt;<paramref name="c" />&gt;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ReflectionExtensions.GetNestedName(System.Type)">
            <summary>
            Returns the name of this <see cref="T:System.Type" />, including its nested class names.
            </summary>
            <param name="type">The <see cref="T:System.Type" /> to test.</param>
            <returns>
            The name of this <see cref="T:System.Type" />, including its nested class names.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ReflectionExtensions.GetNestedFullName(System.Type)">
            <summary>
            Returns the fully qualified name of this <see cref="T:System.Type" />, including its nested class names and its namespace but not its assembly.
            </summary>
            <param name="type">The <see cref="T:System.Type" /> to test.</param>
            <returns>
            The fully qualified name of this <see cref="T:System.Type" />, including its nested class names and its namespace but not its assembly.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ReflectionExtensions.ToCSharpName(System.Type)">
            <summary>
            Returns the equivalent <see cref="T:System.String" /> representation of the name of this <see cref="T:System.Type" /> using the <see cref="F:BytecodeApi.TypeNaming.CSharp" /> naming convention.
            </summary>
            <param name="type">The <see cref="T:System.Type" /> to be converted.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representation of the name of this <see cref="T:System.Type" /> using the <see cref="F:BytecodeApi.TypeNaming.CSharp" /> naming convention.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ReflectionExtensions.ToCSharpName(System.Type,BytecodeApi.TypeNaming)">
            <summary>
            Returns the equivalent <see cref="T:System.String" /> representation of the name of this <see cref="T:System.Type" /> using the specified naming convention.
            </summary>
            <param name="type">The <see cref="T:System.Type" /> to be converted.</param>
            <param name="namingConvention">The <see cref="T:BytecodeApi.TypeNaming" /> that specifies the naming convention for the converted <see cref="T:System.Type" />.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representation of the name of this <see cref="T:System.Type" /> using the specified naming convention.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ReflectionExtensions.GetValue``1(System.Reflection.FieldInfo,System.Object)">
            <summary>
            Returns the value of a field supported by a given <see cref="T:System.Object" />.
            </summary>
            <typeparam name="T">The type to which the returned value is casted to.</typeparam>
            <param name="fieldInfo">The <see cref="T:System.Reflection.FieldInfo" /> to retrieve the value from.</param>
            <param name="obj">The <see cref="T:System.Object" /> to retrieve the value from.</param>
            <returns>
            The value of a field supported by a given <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ReflectionExtensions.Invoke(System.Reflection.MethodBase)">
            <summary>
            Invokes the method or constructor represented by the current instance with no parameters.
            </summary>
            <param name="method">The method to invoke.</param>
            <returns>
            An <see cref="T:System.Object" /> containing the return value of the invoked method, or null in the case of a constructor.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ReflectionExtensions.Invoke``1(System.Reflection.MethodBase)">
            <summary>
            Invokes the method or constructor represented by the current instance with no parameters.
            </summary>
            <typeparam name="T">The return type of <paramref name="method" />.</typeparam>
            <param name="method">The method to invoke.</param>
            <returns>
            An <see cref="T:System.Object" /> containing the return value of the invoked method, or null in the case of a constructor.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ReflectionExtensions.Invoke``1(System.Reflection.MethodBase,System.Object,System.Object[])">
            <summary>
            Invokes the method or constructor represented by the current instance with, using the specified parameters.
            </summary>
            <typeparam name="T">The return type of <paramref name="method" />.</typeparam>
            <param name="method">The method to invoke.</param>
            <param name="obj">The <see cref="T:System.Object" /> on which to invoke the method or constructor. If a method is static, this argument is ignored. If a constructor is static, this argument must be <see langword="null" /> or an instance of the class that defines the constructor.</param>
            <param name="parameters">An argument list for the invoked method or constructor. This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked. If there are no parameters, parameters should be <see langword="null" />. If the method or constructor represented by this instance takes a ref parameter, no special attribute is required for that parameter in order to invoke the method or constructor using this function. Any <see cref="T:System.Object" /> in this array that is not explicitly initialized with a value will contain the default value for that <see cref="T:System.Object" /> type.</param>
            <returns>
            An <see cref="T:System.Object" /> containing the return value of the invoked method, or null in the case of a constructor.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.ProcessExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Diagnostics.Process" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.ProcessExtensions.GetUser(System.Diagnostics.Process)">
            <summary>
            Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the user running this <see cref="T:System.Diagnostics.Process" />.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            The <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the user running this <see cref="T:System.Diagnostics.Process" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ProcessExtensions.GetUserName(System.Diagnostics.Process)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the user running this <see cref="T:System.Diagnostics.Process" />. This <see cref="T:System.String" /> contains the full Windows logon name, including the machine or domain name.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            A <see cref="T:System.String" /> that represents the user running this <see cref="T:System.Diagnostics.Process" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ProcessExtensions.GetUserNameShort(System.Diagnostics.Process)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the user running this <see cref="T:System.Diagnostics.Process" />. This <see cref="T:System.String" /> contains only the user, excluding machine or domain name.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            A <see cref="T:System.String" /> that represents the user running this <see cref="T:System.Diagnostics.Process" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ProcessExtensions.GetParentProcess(System.Diagnostics.Process)">
            <summary>
            Gets the parent <see cref="T:System.Diagnostics.Process" /> of this <see cref="T:System.Diagnostics.Process" /> or <see langword="null" />, if this method failed.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            The parent <see cref="T:System.Diagnostics.Process" /> of this <see cref="T:System.Diagnostics.Process" /> or <see langword="null" />, if this method failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ProcessExtensions.GetCommandLine(System.Diagnostics.Process)">
            <summary>
            Gets the commandline <see cref="T:System.String" /> of this <see cref="T:System.Diagnostics.Process" /> that was passed during process creation.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            The commandline <see cref="T:System.String" /> of this <see cref="T:System.Diagnostics.Process" /> that was passed during process creation.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ProcessExtensions.GetCommandLineArgs(System.Diagnostics.Process)">
            <summary>
            Gets the commandline arguments of this <see cref="T:System.Diagnostics.Process" /> that were passed during process creation.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            A <see cref="T:System.String" />[] with the commandline arguments of this <see cref="T:System.Diagnostics.Process" /> that were passed during process creation.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ProcessExtensions.GetIntegrityLevel(System.Diagnostics.Process)">
            <summary>
            Gets the mandatory integrity level of this <see cref="T:System.Diagnostics.Process" /> or <see langword="null" />, if this method failed.
            Usually, this method (specifically, OpenToken) will fail on elevated processes if this method is called with medium IL.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            The <see cref="T:BytecodeApi.IO.ProcessIntegrityLevel" /> of this <see cref="T:System.Diagnostics.Process" /> or <see langword="null" />, if this method failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ProcessExtensions.Is64Bit(System.Diagnostics.Process)">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether this <see cref="T:System.Diagnostics.Process" /> is a 64-bit or a 32-bit process. Returns <see langword="null" />, if this method failed.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            <see langword="true" />, if this <see cref="T:System.Diagnostics.Process" /> is a 64-bit process;
            <see langword="false" />, if this <see cref="T:System.Diagnostics.Process" /> is a 32-bit process;
            <see langword="null" />, if this method failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ProcessExtensions.IsDotNet(System.Diagnostics.Process)">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether this <see cref="T:System.Diagnostics.Process" /> is a .NET process. Returns <see langword="null" />, if this method failed.
            To identify a .NET process, the presence of either the mscorlib.dll or the mscorlib.ni.dll module is checked.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            <see langword="true" />, if this <see cref="T:System.Diagnostics.Process" /> is a .NET process;
            <see langword="false" />, if this <see cref="T:System.Diagnostics.Process" /> is not a .NET process;
            <see langword="null" />, if this method failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.ProcessExtensions.LoadLibrary(System.Diagnostics.Process,System.String)">
            <summary>
            Injects a DLL into this <see cref="T:System.Diagnostics.Process" /> using the WriteProcessMemory / CreateRemoteThread technique. If <see cref="F:BytecodeApi.IO.ProcessLoadLibraryResult.Success" /> is returned, the DLL has been successfully loaded by this <see cref="T:System.Diagnostics.Process" />.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be injected.</param>
            <param name="dllName">A <see cref="T:System.String" /> specifying the path of the DLL file to inject into this <see cref="T:System.Diagnostics.Process" />.</param>
            <returns>
            <see cref="F:BytecodeApi.IO.ProcessLoadLibraryResult.Success" />, if DLL injection succeeded;
            otherwise, a <see cref="T:BytecodeApi.IO.ProcessLoadLibraryResult" /> value that indicates the error reason.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.RandomExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Random" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextBytes(System.Random,System.Int32)">
            <summary>
            Creates a <see cref="T:System.Byte" />[] with a specified length and fills all elements with random bytes.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <param name="count">The size of the returned <see cref="T:System.Byte" />[].</param>
            <returns>
            A new <see cref="T:System.Byte" />[] with a specified length, filled with random bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextBoolean(System.Random)">
            <summary>
            Returns a random <see cref="T:System.Boolean" /> value that is either <see langword="false" /> or <see langword="true" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.Boolean" /> value that is either <see langword="false" /> or <see langword="true" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextByte(System.Random)">
            <summary>
            Returns a random <see cref="T:System.Byte" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.Byte.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.Byte" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.Byte.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextSByte(System.Random)">
            <summary>
            Returns a random <see cref="T:System.SByte" /> value that is greater than or equal to <see cref="F:System.SByte.MinValue" />, and less than or equal to <see cref="F:System.SByte.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.SByte" /> value that is greater than or equal to <see cref="F:System.SByte.MinValue" />, and less than or equal to <see cref="F:System.SByte.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextChar(System.Random)">
            <summary>
            Returns a random <see cref="T:System.Char" /> value that is greater than or equal to '\0', and less than or equal to <see cref="F:System.Char.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.Char" /> value that is greater than or equal to '\0', and less than or equal to <see cref="F:System.Char.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextDouble(System.Random,System.Double)">
            <summary>
            Returns a random <see cref="T:System.Double" /> value that is greater than or equal to 0.0f, and less than <paramref name="max" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <param name="max">The upper bound of the random number returned.</param>
            <returns>
            A random <see cref="T:System.Double" /> value that is greater than or equal to 0.0f, and less than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextDouble(System.Random,System.Double,System.Double)">
            <summary>
            Returns a random <see cref="T:System.Double" /> value that is greater than or equal to <paramref name="min" />, and less than <paramref name="max" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <param name="min">The inclusive lower bound of the random number returned.</param>
            <param name="max">The upper bound of the random number returned.</param>
            <returns>
            A random <see cref="T:System.Double" /> value that is greater than or equal to <paramref name="min" />, and less than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextSingle(System.Random)">
            <summary>
            Returns a random <see cref="T:System.Single" /> value that is greater than or equal to 0.0f, and less than 1.0f.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.Single" /> value that is greater than or equal to 0.0f, and less than 1.0f.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextSingle(System.Random,System.Single)">
            <summary>
            Returns a random <see cref="T:System.Single" /> value that is greater than or equal to 0.0f, and less than <paramref name="max" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <param name="max">The upper bound of the random number returned.</param>
            <returns>
            A random <see cref="T:System.Single" /> value that is greater than or equal to 0.0f, and less than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextSingle(System.Random,System.Single,System.Single)">
            <summary>
            Returns a random <see cref="T:System.Single" /> value that is greater than or equal to <paramref name="min" />, and less than <paramref name="max" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <param name="min">The inclusive lower bound of the random number returned.</param>
            <param name="max">The upper bound of the random number returned.</param>
            <returns>
            A random <see cref="T:System.Single" /> value that is greater than or equal to <paramref name="min" />, and less than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextInt32(System.Random)">
            <summary>
            Returns a random <see cref="T:System.Int32" /> value that is greater than or equal to <see cref="F:System.Int32.MinValue" />, and less than or equal to <see cref="F:System.Int32.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.Int32" /> value that is greater than or equal to <see cref="F:System.Int32.MinValue" />, and less than or equal to <see cref="F:System.Int32.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextUInt32(System.Random)">
            <summary>
            Returns a random <see cref="T:System.UInt32" /> value that is less than or equal to <see cref="F:System.UInt32.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.UInt32" /> value that is less than or equal to <see cref="F:System.UInt32.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextInt64(System.Random)">
            <summary>
            Returns a random <see cref="T:System.Int64" /> value that is greater than or equal to <see cref="F:System.Int64.MinValue" />, and less than or equal to <see cref="F:System.Int64.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.Int64" /> value that is greater than or equal to <see cref="F:System.Int64.MinValue" />, and less than or equal to <see cref="F:System.Int64.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextUInt64(System.Random)">
            <summary>
            Returns a random <see cref="T:System.UInt64" /> value that is less than or equal to <see cref="F:System.UInt64.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.UInt64" /> value that is less than or equal to <see cref="F:System.UInt64.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextInt16(System.Random)">
            <summary>
            Returns a random <see cref="T:System.Int16" /> value that is greater than or equal to <see cref="F:System.Int16.MinValue" />, and less than or equal to <see cref="F:System.Int16.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.Int16" /> value that is greater than or equal to <see cref="F:System.Int16.MinValue" />, and less than or equal to <see cref="F:System.Int16.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextUInt16(System.Random)">
            <summary>
            Returns a random <see cref="T:System.UInt16" /> value that is less than or equal to <see cref="F:System.UInt16.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.UInt16" /> value that is less than or equal to <see cref="F:System.UInt16.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextBits(System.Random,System.Int32)">
            <summary>
            Creates a <see cref="T:System.Collections.BitArray" /> with a specified length and fills all elements with random <see cref="T:System.Boolean" /> values.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <param name="count">The size of the returned <see cref="T:System.Collections.BitArray" />.</param>
            <returns>
            A new <see cref="T:System.Collections.BitArray" /> with a specified length, filled with random <see cref="T:System.Boolean" /> values.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextObject``1(System.Random,``0[])">
            <summary>
            Returns a random <see cref="T:System.Object" /> of the specified type from <paramref name="array" />, selected based on a random index.
            </summary>
            <typeparam name="T">The element type of <paramref name="array" />.</typeparam>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <param name="array">An <see cref="T:System.Array" /> of the specified type.</param>
            <returns>
            A random <see cref="T:System.Object" /> of the specified type from <paramref name="array" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RandomExtensions.NextObject``1(System.Random,System.Collections.Generic.IList{``0})">
            <summary>
            Returns a random <see cref="T:System.Object" /> of the specified type from <paramref name="list" />, selected based on a random index.
            </summary>
            <typeparam name="T">The element type of <paramref name="list" />.</typeparam>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <param name="list">A <see cref="T:System.Collections.Generic.IList`1" /> of the specified type.</param>
            <returns>
            A random <see cref="T:System.Object" /> of the specified type from <paramref name="list" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.RegistryExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:Microsoft.Win32.RegistryKey" /> objects, specifically for easy data access of strongly typed values.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetBooleanValue(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.Boolean" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. Returns <see langword="null" />, if the value does not exist in the registry, is not a REG_DWORD value, or is not equal to 0 or 1.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            <see langword="true" />, if the value is a REG_DWORD and is equal to 1;
            <see langword="false" />, if the value is a REG_DWORD and is equal to 0;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetBooleanValue(Microsoft.Win32.RegistryKey,System.String,System.Boolean)">
            <summary>
            Retrieves a <see cref="T:System.Boolean" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. Returns a default value, if the value does not exist in the registry, is not a REG_DWORD value, or is not equal to 0 or 1.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            <see langword="true" />, if the value is a REG_DWORD and is equal to 1;
            <see langword="false" />, if the value is a REG_DWORD and is equal to 0;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetInt32Value(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.Int32" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. Returns <see langword="null" />, if the value does not exist in the registry or is not a REG_DWORD value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetInt32Value(Microsoft.Win32.RegistryKey,System.String,System.Int32)">
            <summary>
            Retrieves a <see cref="T:System.Int32" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. Returns a default value, if the value does not exist in the registry or is not a REG_DWORD value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetInt64Value(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.Int64" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_QWORD value. Returns <see langword="null" />, if the value does not exist in the registry or is not a REG_QWORD value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetInt64Value(Microsoft.Win32.RegistryKey,System.String,System.Int64)">
            <summary>
            Retrieves a <see cref="T:System.Int64" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_QWORD value. Returns a default value, if the value does not exist in the registry or is not a REG_QWORD value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetStringValue(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.String" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_SZ value. Returns <see langword="null" />, if the value does not exist in the registry or is not a REG_SZ value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetStringValue(Microsoft.Win32.RegistryKey,System.String,System.String)">
            <summary>
            Retrieves a <see cref="T:System.String" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_SZ value. Returns a default value, if the value does not exist in the registry or is not a REG_SZ value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetDateTimeValue(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.DateTime" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_SZ value with the format "yyyy-MM-dd HH:mm:ss". Returns <see langword="null" />, if the value does not exist in the registry, is not a REG_SZ value, or does not match the format.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetDateTimeValue(Microsoft.Win32.RegistryKey,System.String,System.DateTime)">
            <summary>
            Retrieves a <see cref="T:System.DateTime" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_SZ value with the format "yyyy-MM-dd HH:mm:ss". Returns a default value, if the value does not exist in the registry, is not a REG_SZ value, or does not match the format.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetEnumValue``1(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves an <see cref="T:System.Enum" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. Returns <see langword="null" />, if the value does not exist in the registry or is not a REG_DWORD value.
            </summary>
            <typeparam name="T">The type of the returned <see cref="T:System.Enum" /> value.</typeparam>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetEnumValue``1(Microsoft.Win32.RegistryKey,System.String,``0)">
            <summary>
            Retrieves an <see cref="T:System.Enum" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. Returns a default value, if the value does not exist in the registry or is not a REG_DWORD value.
            </summary>
            <typeparam name="T">The type of the returned <see cref="T:System.Enum" /> value.</typeparam>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetByteArrayValue(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.Byte" />[] value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_BINARY value. Returns <see langword="null" />, if the value does not exist in the registry or is not a REG_BINARY value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetByteArrayValue(Microsoft.Win32.RegistryKey,System.String,System.Byte[])">
            <summary>
            Retrieves a <see cref="T:System.Byte" />[] value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_BINARY value. Returns a default value, if the value does not exist in the registry or is not a REG_BINARY value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetStringArrayValue(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.String" />[] value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_MULTI_SZ value. Returns <see langword="null" />, if the value does not exist in the registry or is not a REG_MULTI_SZ value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.GetStringArrayValue(Microsoft.Win32.RegistryKey,System.String,System.String[])">
            <summary>
            Retrieves a <see cref="T:System.String" />[] value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_MULTI_SZ value. Returns a default value, if the value does not exist in the registry or is not a REG_MULTI_SZ value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.SetBooleanValue(Microsoft.Win32.RegistryKey,System.String,System.Nullable{System.Boolean})">
            <summary>
            Writes a <see cref="T:System.Boolean" /> value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.Boolean" /> value to be written to. If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.SetInt32Value(Microsoft.Win32.RegistryKey,System.String,System.Nullable{System.Int32})">
            <summary>
            Writes a <see cref="T:System.Int32" /> value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.Int32" /> value to be written to. If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.SetInt64Value(Microsoft.Win32.RegistryKey,System.String,System.Nullable{System.Int64})">
            <summary>
            Writes a <see cref="T:System.Int64" /> value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_QWORD value. If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.Int64" /> value to be written to. If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.SetStringValue(Microsoft.Win32.RegistryKey,System.String,System.String)">
            <summary>
            Writes a <see cref="T:System.String" /> value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_SZ value. If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.String" /> value to be written to. If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.SetDateTimeValue(Microsoft.Win32.RegistryKey,System.String,System.Nullable{System.DateTime})">
            <summary>
            Writes a <see cref="T:System.DateTime" /> value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_SZ value with the format "yyyy-MM-dd HH:mm:ss". If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.DateTime" /> value to be written in the format "yyyy-MM-dd HH:mm:ss". If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.SetEnumValue``1(Microsoft.Win32.RegistryKey,System.String,System.Nullable{``0})">
            <summary>
            Writes an <see cref="T:System.Enum" /> value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_dword value. If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Enum" /> to write.</typeparam>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.Enum" /> value to be written. If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.SetByteArrayValue(Microsoft.Win32.RegistryKey,System.String,System.Byte[])">
            <summary>
            Writes a <see cref="T:System.Byte" />[] value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_BINARY value. If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.Byte" />[] value to be written to. If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.SetStringArrayValue(Microsoft.Win32.RegistryKey,System.String,System.String[])">
            <summary>
            Writes a <see cref="T:System.String" />[] value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_MULTI_SZ value. If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.String" />[] value to be written to. If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.RegistryExtensions.OpenInRegedit(Microsoft.Win32.RegistryKey)">
            <summary>
            Starts regedit.exe and navigates to the location specified by this <see cref="T:Microsoft.Win32.RegistryKey" />. If regedit.exe is already running, the <see cref="T:System.Diagnostics.Process" /> will be terminated.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> that will be navigates to.</param>
        </member>
        <member name="T:BytecodeApi.Extensions.StreamExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.IO.Stream" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.StreamExtensions.Read(System.IO.Stream,System.Byte[])">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to read from.</param>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified <see cref="T:System.Byte" />[] with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or 0, if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StreamExtensions.Write(System.IO.Stream,System.Byte[])">
            <summary>
            Writes a sequence of bytes to the current <see cref="T:System.IO.Stream" /> and advances the current position within this <see cref="T:System.IO.Stream" /> by the number of bytes written.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to write to.</param>
            <param name="buffer">A <see cref="T:System.Byte" />[] that is copied to this <see cref="T:System.IO.Stream" />.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.StreamExtensions.ReadStructure``1(System.IO.Stream)">
            <summary>
            Reads a structure of the specified type from the stream.
            </summary>
            <typeparam name="T">The type of the structure to read.</typeparam>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to read from.</param>
            <returns>
            A new structure of the specified type that was read from the stream.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StreamExtensions.WriteStructure``1(System.IO.Stream,``0)">
            <summary>
            Writes a structure of the specified type to the stream.
            </summary>
            <typeparam name="T">The type of the structure to write.</typeparam>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to write to.</param>
            <param name="structure">The structure to write to <paramref name="stream" />.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.StreamExtensions.FindSequence(System.IO.Stream,System.Byte[])">
            <summary>
            Searches this <see cref="T:System.IO.Stream" /> for the first occurrence of <paramref name="sequence" />. If not found, returns -1.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to be searched.</param>
            <param name="sequence">The <see cref="T:System.Byte" />[] to search for.</param>
            <returns>
            The index of the first occurrence of <paramref name="sequence" /> and -1, if not found.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.StringConvertExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for conversion of <see cref="T:System.String" /> objects to different data types.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToBooleanOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Boolean" /> value or returns <see langword="false" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Boolean" /> value.</param>
            <returns>
            The <see cref="T:System.Boolean" /> value that was converted from <paramref name="str" /> and
            <see langword="false" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToBooleanOrDefault(System.String,System.Boolean)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Boolean" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Boolean" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Boolean" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToBooleanOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Boolean" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Boolean" /> value.</param>
            <returns>
            The <see cref="T:System.Boolean" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToByteOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Byte" /> value or returns 0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Byte" /> value.</param>
            <returns>
            The <see cref="T:System.Byte" /> value that was converted from <paramref name="str" /> and
            0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToByteOrDefault(System.String,System.Byte)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Byte" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Byte" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Byte" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToByteOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Byte" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Byte" /> value.</param>
            <returns>
            The <see cref="T:System.Byte" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToSByteOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.SByte" /> value or returns 0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.SByte" /> value.</param>
            <returns>
            The <see cref="T:System.SByte" /> value that was converted from <paramref name="str" /> and
            0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToSByteOrDefault(System.String,System.SByte)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.SByte" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.SByte" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.SByte" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToSByteOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.SByte" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.SByte" /> value.</param>
            <returns>
            The <see cref="T:System.SByte" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToCharOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Char" /> value or returns '\0' if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Char" /> value.</param>
            <returns>
            The <see cref="T:System.Char" /> value that was converted from <paramref name="str" /> and
            '\0' if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToCharOrDefault(System.String,System.Char)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Char" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Char" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Char" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToCharOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Char" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Char" /> value.</param>
            <returns>
            The <see cref="T:System.Char" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToDecimalOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Decimal" /> value or returns 0.0m if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Decimal" /> value.</param>
            <returns>
            The <see cref="T:System.Decimal" /> value that was converted from <paramref name="str" /> and
            0.0m if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToDecimalOrDefault(System.String,System.Decimal)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Decimal" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Decimal" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Decimal" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToDecimalOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Decimal" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Decimal" /> value.</param>
            <returns>
            The <see cref="T:System.Decimal" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToDoubleOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Double" /> value or returns 0.0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Double" /> value.</param>
            <returns>
            The <see cref="T:System.Double" /> value that was converted from <paramref name="str" /> and
            0.0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToDoubleOrDefault(System.String,System.Double)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Double" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Double" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Double" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToDoubleOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Double" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Double" /> value.</param>
            <returns>
            The <see cref="T:System.Double" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToSingleOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Single" /> value or returns 0.0f if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Single" /> value.</param>
            <returns>
            The <see cref="T:System.Single" /> value that was converted from <paramref name="str" /> and
            0.0f if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToSingleOrDefault(System.String,System.Single)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Single" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Single" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Single" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToSingleOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Single" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Single" /> value.</param>
            <returns>
            The <see cref="T:System.Single" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToInt32OrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int32" /> value or returns 0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int32" /> value.</param>
            <returns>
            The <see cref="T:System.Int32" /> value that was converted from <paramref name="str" /> and
            0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToInt32OrDefault(System.String,System.Int32)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int32" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int32" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Int32" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToInt32OrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int32" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int32" /> value.</param>
            <returns>
            The <see cref="T:System.Int32" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToUInt32OrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt32" /> value or returns 0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt32" /> value.</param>
            <returns>
            The <see cref="T:System.UInt32" /> value that was converted from <paramref name="str" /> and
            0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToUInt32OrDefault(System.String,System.UInt32)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt32" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt32" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.UInt32" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToUInt32OrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt32" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt32" /> value.</param>
            <returns>
            The <see cref="T:System.UInt32" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToInt64OrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int64" /> value or returns 0L if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int64" /> value.</param>
            <returns>
            The <see cref="T:System.Int64" /> value that was converted from <paramref name="str" /> and
            0L if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToInt64OrDefault(System.String,System.Int64)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int64" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int64" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Int64" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToInt64OrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int64" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int64" /> value.</param>
            <returns>
            The <see cref="T:System.Int64" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToUInt64OrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt64" /> value or returns 0UL if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt64" /> value.</param>
            <returns>
            The <see cref="T:System.UInt64" /> value that was converted from <paramref name="str" /> and
            0UL if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToUInt64OrDefault(System.String,System.UInt64)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt64" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt64" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.UInt64" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToUInt64OrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt64" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt64" /> value.</param>
            <returns>
            The <see cref="T:System.UInt64" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToInt16OrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int16" /> value or returns 0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int16" /> value.</param>
            <returns>
            The <see cref="T:System.Int16" /> value that was converted from <paramref name="str" /> and
            0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToInt16OrDefault(System.String,System.Int16)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int16" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int16" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Int16" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToInt16OrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int16" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int16" /> value.</param>
            <returns>
            The <see cref="T:System.Int16" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToUInt16OrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt16" /> value or returns 0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt16" /> value.</param>
            <returns>
            The <see cref="T:System.UInt16" /> value that was converted from <paramref name="str" /> and
            0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToUInt16OrDefault(System.String,System.UInt16)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt16" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt16" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.UInt16" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToUInt16OrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt16" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt16" /> value.</param>
            <returns>
            The <see cref="T:System.UInt16" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToDateTime(System.String,System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.DateTime" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.DateTime" /> value.</param>
            <param name="format">A <see cref="T:System.String" /> value specifying the format that is used to convert this <see cref="T:System.DateTime" />.</param>
            <returns>
            The <see cref="T:System.DateTime" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToTimeSpan(System.String,System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.TimeSpan" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.TimeSpan" /> value.</param>
            <param name="format">A <see cref="T:System.String" /> value specifying the format that is used to convert this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            The <see cref="T:System.TimeSpan" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringConvertExtensions.ToUri(System.String,System.UriKind)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Uri" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Uri" /> value.</param>
            <param name="uriKind">The <see cref="T:System.UriKind" /> that is used for conversion.</param>
            <returns>
            The <see cref="T:System.UriKind" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.StringExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.String" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.IsNullOrEmpty(System.String)">
            <summary>
            Indicates whether this <see cref="T:System.String" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to test.</param>
            <returns>
            <see langword="true" />, if this <see cref="T:System.String" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.IsNullOrWhiteSpace(System.String)">
            <summary>
            Indicates whether this <see cref="T:System.String" /> is <see langword="null" />, <see cref="F:System.String.Empty" />, or consists only of white-space characters.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to test.</param>
            <returns>
            <see langword="true" />, if this <see cref="T:System.String" /> is <see langword="null" />, <see cref="F:System.String.Empty" />, or consists only of white-space characters;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.ToNullIfEmpty(System.String)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.String" /> is <see cref="F:System.String.Empty" />, otherwise, its original value.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.String" /> is <see cref="F:System.String.Empty" />;
            otherwise, its original value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.ToNullIfEmptyOrWhiteSpace(System.String)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.String" /> is <see cref="F:System.String.Empty" />, or consists only of white-space characters, otherwise, its original value.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.String" /> is <see cref="F:System.String.Empty" />, or consists only of white-space characters;
            otherwise, its original value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.Equals(System.String,System.String,BytecodeApi.SpecialStringComparisons)">
            <summary>
            Determines whether this <see cref="T:System.String" /> and a specified <see cref="T:System.String" /> object have the same value. One or multiple <see cref="T:BytecodeApi.SpecialStringComparisons" /> flags specify what comparison properties apply.
            </summary>
            <param name="str">A <see cref="T:System.String" /> to compare to <paramref name="value" />.</param>
            <param name="value">A <see cref="T:System.String" /> to compare to <paramref name="str" />.</param>
            <param name="comparison">The <see cref="T:BytecodeApi.SpecialStringComparisons" /> flags specifying what comparison properties apply.</param>
            <returns>
            <see langword="true" />, if the value of the <paramref name="value" /> parameter is equal to the value of this <see cref="T:System.String" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.CompareTo(System.String,System.String,BytecodeApi.SpecialStringComparisons)">
            <summary>
            Compares this <see cref="T:System.String" /> with a specified <see cref="T:System.String" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.String" />. One or multiple <see cref="T:BytecodeApi.SpecialStringComparisons" /> flags specify what comparison properties apply.
            </summary>
            <param name="str">A <see cref="T:System.String" /> to compare to <paramref name="other" />.</param>
            <param name="other">A <see cref="T:System.String" /> to compare with <paramref name="str" />.</param>
            <param name="comparison">The <see cref="T:BytecodeApi.SpecialStringComparisons" /> flags specifying what comparison properties apply.</param>
            <returns>
            A value that indicates the relative order of the objects being compared using the specified <see cref="T:BytecodeApi.SpecialStringComparisons" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.Contains(System.String,System.String,BytecodeApi.SpecialStringComparisons)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether a specified substring occurs within this <see cref="T:System.String" />. One or multiple <see cref="T:BytecodeApi.SpecialStringComparisons" /> flags specify what comparison properties apply.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to compare.</param>
            <param name="comparison">The <see cref="T:BytecodeApi.SpecialStringComparisons" /> flags specifying what comparison properties apply.</param>
            <returns>
            <see langword="true" />, if this <see cref="T:System.String" /> contains the specified <see cref="T:System.String" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.StartsWith(System.String,System.String,BytecodeApi.SpecialStringComparisons)">
            <summary>
            Determines whether the beginning of this <see cref="T:System.String" /> instance matches the specified <see cref="T:System.String" />. One or multiple <see cref="T:BytecodeApi.SpecialStringComparisons" /> flags specify what comparison properties apply.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to compare.</param>
            <param name="comparison">The <see cref="T:BytecodeApi.SpecialStringComparisons" /> flags specifying what comparison properties apply.</param>
            <returns>
            <see langword="true" />, if value matches the beginning of this <see cref="T:System.String" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.EndsWith(System.String,System.String,BytecodeApi.SpecialStringComparisons)">
            <summary>
            Determines whether the end of this <see cref="T:System.String" /> instance matches the specified <see cref="T:System.String" />. One or multiple <see cref="T:BytecodeApi.SpecialStringComparisons" /> flags specify what comparison properties apply.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to compare.</param>
            <param name="comparison">The <see cref="T:BytecodeApi.SpecialStringComparisons" /> flags specifying what comparison properties apply.</param>
            <returns>
            <see langword="true" />, if value matches the end of this <see cref="T:System.String" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.Format(System.String,System.Object[])">
            <summary>
            Replaces the format item in a specified <see cref="T:System.String" /> with the <see cref="T:System.String" /> representation of a corresponding <see cref="T:System.Object" /> in a specified array.
            </summary>
            <param name="str">A composite format <see cref="T:System.String" />.</param>
            <param name="args">An <see cref="T:System.Object" /> array that contains zero or more objects to format.</param>
            <returns>
            A copy of this <see cref="T:System.String" /> in which the format items have been replaced by the <see cref="T:System.String" /> representation of the corresponding objects in <paramref name="args" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.FormatInvariant(System.String,System.Object[])">
            <summary>
            Replaces the format item in a specified <see cref="T:System.String" /> with the <see cref="T:System.String" /> representation of a corresponding <see cref="T:System.Object" /> in a specified array using the invariant culture.
            </summary>
            <param name="str">A composite format <see cref="T:System.String" />.</param>
            <param name="args">An <see cref="T:System.Object" /> array that contains zero or more objects to format.</param>
            <returns>
            A copy of this <see cref="T:System.String" /> in which the format items have been replaced by the <see cref="T:System.String" /> representation of the corresponding objects in <paramref name="args" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.SubstringFrom(System.String,System.String)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> after the first occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> after the first occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.SubstringFrom(System.String,System.String,System.Boolean)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> after the first or last occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />. If <paramref name="findLast" /> is <see langword="true" />, the last occurrence of <paramref name="value" /> is searched.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <param name="findLast"><see langword="true" /> to find the last occurrence of <paramref name="value" />; otherwise, <see langword="false" /> to find the first occurrence.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> after the first or last occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.SubstringFrom(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> after the first or last occurrence of <paramref name="value" />. If <paramref name="findLast" /> is <see langword="true" />, the last occurrence of <paramref name="value" /> is searched. If <paramref name="inclusive" /> is <see langword="true" />, the contents of <paramref name="value" /> are included in the result.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <param name="findLast"><see langword="true" /> to find the last occurrence of <paramref name="value" />; otherwise, <see langword="false" /> to find the first occurrence.</param>
            <param name="inclusive"><see langword="true" /> to include the contents of <paramref name="value" />; otherwise, <see langword="false" /> to exclude the contents of <paramref name="value" />.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> after the first or last occurrence of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.SubstringFrom(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> after the first or last occurrence of <paramref name="value" />. If <paramref name="findLast" /> is <see langword="true" />, the last occurrence of <paramref name="value" /> is searched. If <paramref name="inclusive" /> is <see langword="true" />, the contents of <paramref name="value" /> are included in the result.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <param name="findLast"><see langword="true" /> to find the last occurrence of <paramref name="value" />; otherwise, <see langword="false" /> to find the first occurrence.</param>
            <param name="inclusive"><see langword="true" /> to include the contents of <paramref name="value" />; otherwise, <see langword="false" /> to exclude the contents of <paramref name="value" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> after the first or last occurrence of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.SubstringUntil(System.String,System.String)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> before the first occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> before the first occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.SubstringUntil(System.String,System.String,System.Boolean)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> before the first or last occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />. If <paramref name="findLast" /> is <see langword="true" />, the last occurrence of <paramref name="value" /> is searched.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <param name="findLast"><see langword="true" /> to find the last occurrence of <paramref name="value" />; otherwise, <see langword="false" /> to find the first occurrence.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> before the first or last occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.SubstringUntil(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> before the first or last occurrence of <paramref name="value" />. If <paramref name="findLast" /> is <see langword="true" />, the last occurrence of <paramref name="value" /> is searched. If <paramref name="inclusive" /> is <see langword="true" />, the contents of <paramref name="value" /> are included in the result.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <param name="findLast"><see langword="true" /> to find the last occurrence of <paramref name="value" />; otherwise, <see langword="false" /> to find the first occurrence.</param>
            <param name="inclusive"><see langword="true" /> to include the contents of <paramref name="value" />; otherwise, <see langword="false" /> to exclude the contents of <paramref name="value" />.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> before the first or last occurrence of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.SubstringUntil(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> before the first or last occurrence of <paramref name="value" />. If <paramref name="findLast" /> is <see langword="true" />, the last occurrence of <paramref name="value" /> is searched. If <paramref name="inclusive" /> is <see langword="true" />, the contents of <paramref name="value" /> are included in the result.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <param name="findLast"><see langword="true" /> to find the last occurrence of <paramref name="value" />; otherwise, <see langword="false" /> to find the first occurrence.</param>
            <param name="inclusive"><see langword="true" /> to include the contents of <paramref name="value" />; otherwise, <see langword="false" /> to exclude the contents of <paramref name="value" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> before the first or last occurrence of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.Left(System.String,System.Int32)">
            <summary>
            Returns a <see cref="T:System.String" /> containing a specified number of characters from the left side of this <see cref="T:System.String" />. If this <see cref="T:System.String" /> is longer than <paramref name="length" />, the <see cref="T:System.String" /> is truncated by the specified <paramref name="length" /> parameter, otherwise, the original <see cref="T:System.String" /> is returned.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be truncated.</param>
            <param name="length">The amount of characters to which this <see cref="T:System.String" /> is truncated.</param>
            <returns>
            If this <see cref="T:System.String" /> is longer than <paramref name="length" />, the fraction truncated by the specified <paramref name="length" /> parameter;
            otherwise, the original <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.Right(System.String,System.Int32)">
            <summary>
            Returns a <see cref="T:System.String" /> containing a specified number of characters from the right side of this <see cref="T:System.String" />. If this <see cref="T:System.String" /> is longer than <paramref name="length" />, the <see cref="T:System.String" /> is truncated by the specified <paramref name="length" /> parameter, otherwise, the original <see cref="T:System.String" /> is returned.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be truncated.</param>
            <param name="length">The amount of characters to which this <see cref="T:System.String" /> is truncated.</param>
            <returns>
            If this <see cref="T:System.String" /> is longer than <paramref name="length" />, the fraction truncated by the specified <paramref name="length" /> parameter;
            otherwise, the original <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.PadCenter(System.String,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.String" /> that aligns the characters in this <see cref="T:System.String" /> by padding them on both the right and the left with spaces, for a specified total length, biased to the left in case right and left padding width differes by one.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be center padded.</param>
            <param name="totalWidth">The number of characters in the resulting <see cref="T:System.String" />, equal to the number of original characters plus any additional padding characters.</param>
            <returns>
            A new <see cref="T:System.String" /> that is equivalent to this <see cref="T:System.String" />, but centered on the left and the right with as many spaces as needed to create a length of <paramref name="totalWidth" />. If <paramref name="totalWidth" /> is less than or equal to the length of this <see cref="T:System.String" />, the method returns the original <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.PadCenter(System.String,System.Int32,System.Char)">
            <summary>
            Returns a new <see cref="T:System.String" /> that aligns the characters in this <see cref="T:System.String" /> by padding them on both the right and the left with a specified unicode character, for a specified total length, biased to the left in case right and left padding width differes by one.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be center padded.</param>
            <param name="totalWidth">The number of characters in the resulting <see cref="T:System.String" />, equal to the number of original characters plus any additional padding characters.</param>
            <param name="paddingChar">The padding character.</param>
            <returns>
            A new <see cref="T:System.String" /> that is equivalent to this <see cref="T:System.String" />, but centered on the left and the right with as many padding characters as needed to create a length of <paramref name="totalWidth" />. If <paramref name="totalWidth" /> is less than or equal to the length of this <see cref="T:System.String" />, the method returns the original <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.TrimStartString(System.String,System.String)">
            <summary>
            Removes all leading occurrences of the specified <see cref="T:System.String" /> from this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="removedString">A <see cref="T:System.String" /> that is removed from the beginning of this <see cref="T:System.String" />.</param>
            <returns>
            The <see cref="T:System.String" /> that remains after all occurrences of <paramref name="removedString" /> are removed from the start of this <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.TrimStartString(System.String,System.String,System.Boolean)">
            <summary>
            Removes all leading occurrences of the specified <see cref="T:System.String" /> from this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="removedString">A <see cref="T:System.String" /> that is removed from the beginning of this <see cref="T:System.String" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            The <see cref="T:System.String" /> that remains after all occurrences of <paramref name="removedString" /> are removed from the start of this <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.TrimStartString(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Removes one or all leading occurrences of the specified <see cref="T:System.String" /> from this <see cref="T:System.String" />. If <paramref name="removeOnlyFirst" /> is <see langword="true" />, only the first occurrence of <paramref name="removedString" /> is removed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="removedString">A <see cref="T:System.String" /> that is removed from the beginning of this <see cref="T:System.String" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <param name="removeOnlyFirst"><see langword="true" /> to only remove the first occurrence of <paramref name="removedString" />.</param>
            <returns>
            The <see cref="T:System.String" /> that remains after one or all occurrences of <paramref name="removedString" /> are removed from the start of this <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.TrimEndString(System.String,System.String)">
            <summary>
            Removes all trailing occurrences of the specified <see cref="T:System.String" /> from this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="removedString">A <see cref="T:System.String" /> that is removed from the end of this <see cref="T:System.String" />.</param>
            <returns>
            The <see cref="T:System.String" /> that remains after all occurrences of <paramref name="removedString" /> are removed from the end of this <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.TrimEndString(System.String,System.String,System.Boolean)">
            <summary>
            Removes all trailing occurrences of the specified <see cref="T:System.String" /> from this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="removedString">A <see cref="T:System.String" /> that is removed from the end of this <see cref="T:System.String" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            The <see cref="T:System.String" /> that remains after all occurrences of <paramref name="removedString" /> are removed from the end of this <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.TrimEndString(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Removes one or all trailing occurrences of the specified <see cref="T:System.String" /> from this <see cref="T:System.String" />. If <paramref name="removeOnlyFirst" /> is <see langword="true" />, only the first occurrence of <paramref name="removedString" /> is removed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="removedString">A <see cref="T:System.String" /> that is removed from the end of this <see cref="T:System.String" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <param name="removeOnlyFirst"><see langword="true" /> to only remove the first occurrence of <paramref name="removedString" />.</param>
            <returns>
            The <see cref="T:System.String" /> that remains after one or all occurrences of <paramref name="removedString" /> are removed from the end of this <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.EnsureStartsWith(System.String,System.String)">
            <summary>
            Appends the specified <see cref="T:System.String" /> at the beginning of this <see cref="T:System.String" />, if it does not start with the contents of <paramref name="value" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to append, if this <see cref="T:System.String" /> does not start with the contents of <paramref name="value" />.</param>
            <returns>
            The original <see cref="T:System.String" />, if it starts with the contents of <paramref name="value" />;
            otherwise, the original <see cref="T:System.String" /> with the contents of <paramref name="value" /> appended to the beginning.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.EnsureStartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified <see cref="T:System.String" /> at the beginning of this <see cref="T:System.String" />, if it does not start with the contents of <paramref name="value" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to append, if this <see cref="T:System.String" /> does not start with the contents of <paramref name="value" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            The original <see cref="T:System.String" />, if it starts with the contents of <paramref name="value" />;
            otherwise, the original <see cref="T:System.String" /> with the contents of <paramref name="value" /> appended to the beginning.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.EnsureEndsWith(System.String,System.String)">
            <summary>
            Appends the specified <see cref="T:System.String" /> to this <see cref="T:System.String" />, if it does not end with the contents of <paramref name="value" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to append, if this <see cref="T:System.String" /> does not end with the contents of <paramref name="value" />.</param>
            <returns>
            The original <see cref="T:System.String" />, if it ends with the contents of <paramref name="value" />;
            otherwise, the original <see cref="T:System.String" /> with the contents of <paramref name="value" /> appended to it.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.EnsureEndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified <see cref="T:System.String" /> to this <see cref="T:System.String" />, if it does not end with the contents of <paramref name="value" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to append, if this <see cref="T:System.String" /> does not end with the contents of <paramref name="value" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            The original <see cref="T:System.String" />, if it ends with the contents of <paramref name="value" />;
            otherwise, the original <see cref="T:System.String" /> with the contents of <paramref name="value" /> appended to it.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.ReplaceMultiple(System.String,System.String,System.String[])">
            <summary>
            Returns a new <see cref="T:System.String" /> in which all occurrences of a any of the specified old values in the current instance are replaced with another specified <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="newValue">The <see cref="T:System.String" /> to replace all occurrences of elements of <paramref name="oldValues" />.</param>
            <param name="oldValues">An array of <see cref="T:System.String" /> objects of which all are replaced with <paramref name="newValue" />.</param>
            <returns>
            A new <see cref="T:System.String" /> in which all occurrences of a any of the specified old values in the current instance are replaced with another specified <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.Exchange(System.String,System.String,System.String)">
            <summary>
            Returns a new <see cref="T:System.String" /> in which <paramref name="oldValue" /> has been replaced with <paramref name="newValue" />, only if this <see cref="T:System.String" /> is equal to <paramref name="oldValue" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="oldValue">The <see cref="T:System.String" /> which has to match this <see cref="T:System.String" /> exactly.</param>
            <param name="newValue">The <see cref="T:System.String" /> which is returned, if this <see cref="T:System.String" /> is equal to <paramref name="oldValue" />.</param>
            <returns>
            <paramref name="newValue" />, if this <see cref="T:System.String" /> is equal to <paramref name="oldValue" />;
            otherwise, the original <see cref="T:System.String" /> value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.Swap(System.String,System.String,System.String)">
            <summary>
            Exchanges all occurrences of <paramref name="a" /> with <paramref name="b" /> and vice versa in this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="a">The <see cref="T:System.String" /> to be swapped with <paramref name="b" />.</param>
            <param name="b">The <see cref="T:System.String" /> to be swapped with <paramref name="a" />.</param>
            <returns>
            A new <see cref="T:System.String" /> where <paramref name="a" /> has been exchanged with <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.Swap(System.String,System.Char,System.Char)">
            <summary>
            Exchanges all occurrences of <paramref name="a" /> with <paramref name="b" /> and vice versa in this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="a">The <see cref="T:System.Char" /> to be swapped with <paramref name="b" />.</param>
            <param name="b">The <see cref="T:System.Char" /> to be swapped with <paramref name="a" />.</param>
            <returns>
            A new <see cref="T:System.String" /> where <paramref name="a" /> has been exchanged with <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.Reverse(System.String)">
            <summary>
            Reverses the sequence of all characters in this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <returns>
            A new <see cref="T:System.String" /> containing the characters from the original <see cref="T:System.String" /> in reversed order.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.Repeat(System.String,System.Int32)">
            <summary>
            Generates a sequence that contains the repeated value of this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be repeated.</param>
            <param name="count">A <see cref="T:System.Int32" /> value specifying the number of times to repeat this <see cref="T:System.String" />.</param>
            <returns>
            A new <see cref="T:System.String" /> composed of the repetition of the original <see cref="T:System.String" /> value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.ChangeCasing(System.String,BytecodeApi.StringCasing)">
            <summary>
            Changes the casing of this <see cref="T:System.String" /> to the specified <see cref="T:BytecodeApi.StringCasing" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="casing">The <see cref="T:BytecodeApi.StringCasing" /> specifying the casing rule of the returned <see cref="T:System.String" />.</param>
            <returns>
            A new <see cref="T:System.String" /> with character casing changed using the specified <see cref="T:BytecodeApi.StringCasing" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.ToAnsiBytes(System.String)">
            <summary>
            Encodes all the characters in the specified <see cref="T:System.String" /> into a sequence of bytes using the <see cref="P:System.Text.Encoding.Default" /> encoding.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <returns>
            A <see cref="T:System.Byte" />[] containing the results of encoding the specified set of characters.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.ToUTF8Bytes(System.String)">
            <summary>
            Encodes all the characters in the specified <see cref="T:System.String" /> into a sequence of bytes using the <see cref="P:System.Text.Encoding.UTF8" /> encoding.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <returns>
            A <see cref="T:System.Byte" />[] containing the results of encoding the specified set of characters.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.ToUnicodeBytes(System.String)">
            <summary>
            Encodes all the characters in the specified <see cref="T:System.String" /> into a sequence of bytes using the <see cref="P:System.Text.Encoding.Unicode" /> encoding.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <returns>
            A <see cref="T:System.Byte" />[] containing the results of encoding the specified set of characters.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.ToBase64String(System.String,System.Text.Encoding)">
            <summary>
            Converts this <see cref="T:System.String" /> to its equivalent base-64 <see cref="T:System.String" /> representation using the specified encoding.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <param name="encoding">The encoding be used to encode this <see cref="T:System.String" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation that is encoded with base-64 using the specified encoding.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.FromBase64String(System.String,System.Text.Encoding)">
            <summary>
            Converts this <see cref="T:System.String" /> from its equivalent base-64 <see cref="T:System.String" /> representation using the specified encoding.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <param name="encoding">The encoding be used to encode the resulting binary to a <see cref="T:System.String" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation that is decoded from a base-64 <see cref="T:System.String" /> using the specified encoding.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.SplitToLines(System.String)">
            <summary>
            Splits this <see cref="T:System.String" /> into an array of lines, which are separated by either a CR or a CRLF separator.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to split.</param>
            <returns>
            A new <see cref="T:System.String" />[] that represents the lines of the original <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.SplitToLines(System.String,System.Boolean)">
            <summary>
            Splits this <see cref="T:System.String" /> into an array of lines, which are separated by either a CR or a CRLF separator.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to split.</param>
            <param name="removeEmptyEntries"><see langword="true" /> to remove empty lines.</param>
            <returns>
            A new <see cref="T:System.String" />[] that represents the lines of the original <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.SplitToChunks(System.String,System.Int32)">
            <summary>
            Splits this <see cref="T:System.String" /> into chunks of a given size. The last <see cref="T:System.String" /> may be smaller than <paramref name="chunkSize" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to chunk.</param>
            <param name="chunkSize">The size of each chunk.</param>
            <returns>
            A new <see cref="T:System.String" />[] with the chunks from the original <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.StringExtensions.ReplaceLineBreaks(System.String,System.String)">
            <summary>
            Replaces all occurrences of linebreaks ("\n" and "\r\n") in this <see cref="T:System.String" /> with a specified replacement value.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="newValue">The <see cref="T:System.String" /> which will replace "\n" and "\r\n" occurrences in this <see cref="T:System.String" />.</param>
            <returns>
            The original value of this <see cref="T:System.String" /> where "\r" and "\r\n" have been replaced with <paramref name="newValue" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.TimeSpanExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.TimeSpan" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.ToStringInvariant(System.TimeSpan,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.TimeSpan" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value with the format that is used to convert this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.TimeSpan" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.ToNullIfDefault(System.TimeSpan)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.TimeSpan" /> object is <see cref="F:System.TimeSpan.Zero" />, otherwise its original value.
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.TimeSpan" /> object is <see cref="F:System.TimeSpan.Zero" />;
            otherwise, its original value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.AddDays(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified days.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the days to be added to this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified days.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.AddHours(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified hours.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the hours to be added to this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified hours.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.AddMinutes(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified minutes.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the minutes to be added to this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified minutes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.AddSeconds(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified seconds.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the seconds to be added to this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified seconds.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.AddMilliseconds(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified milliseconds.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the milliseconds to be added to this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified milliseconds.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.AddTicks(System.TimeSpan,System.Int64)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified ticks.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the ticks to be added to this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified ticks.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.SubtractDays(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified days.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the days to be subtracted from this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified days.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.SubtractHours(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified hours.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the hours to be subtracted from this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified hours.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.SubtractMinutes(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified minutes.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the minutes to be subtracted from this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified minutes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.SubtractSeconds(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified seconds.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the seconds to be subtracted from this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified seconds.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.SubtractMilliseconds(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified milliseconds.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the milliseconds to be subtracted from this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified milliseconds.
            </returns>
        </member>
        <member name="M:BytecodeApi.Extensions.TimeSpanExtensions.SubtractTicks(System.TimeSpan,System.Int64)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified ticks.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the ticks to be subtracted from this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified ticks.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.CookieContainerExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Net.CookieContainer" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.CookieContainerExtensions.GetCookies(System.Net.CookieContainer)">
            <summary>
            Gets the cookies from all domains from this <see cref="T:System.Net.CookieContainer" />.
            </summary>
            <param name="cookieContainer">The <see cref="T:System.Net.CookieContainer" /> to get the cookies from.</param>
            <returns>
            A new <see cref="T:System.Net.Cookie" />[] with the cookies from all domains from this <see cref="T:System.Net.CookieContainer" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Extensions.XmlExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Xml.Linq.XDocument" /> and related objects.
            </summary>
        </member>
        <member name="P:BytecodeApi.Extensions.XmlExtensions.FormattedXmlWriterSettings">
            <summary>
            Represents the <see cref="T:System.Xml.XmlWriterSettings" /> object that is used in the <see cref="M:BytecodeApi.Extensions.XmlExtensions.SaveFormatted(System.Xml.Linq.XDocument,System.String)" /> method. This <see cref="T:System.Object" /> is <see langword="static" /> and can be modified.
            <para>The default value is <see langword="new" /> <see cref="T:System.Xml.XmlWriterSettings" /> { Indent = <see langword="true" />, IndentChars = "\t" }</para>
            </summary>
        </member>
        <member name="M:BytecodeApi.Extensions.XmlExtensions.Save(System.Xml.Linq.XDocument,System.String,System.Xml.XmlWriterSettings)">
            <summary>
            Serializes this <see cref="T:System.Xml.Linq.XDocument" /> to a file with the specified filename.
            </summary>
            <param name="xml">The <see cref="T:System.Xml.Linq.XDocument" /> to be serialized.</param>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which this <see cref="T:System.Xml.Linq.XDocument" /> is written to.</param>
            <param name="settings">An <see cref="T:System.Xml.XmlWriterSettings" /> value with serialization settings.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.XmlExtensions.Save(System.Xml.Linq.XDocument,System.IO.Stream,System.Xml.XmlWriterSettings)">
            <summary>
            Serializes this <see cref="T:System.Xml.Linq.XDocument" /> to a <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="xml">The <see cref="T:System.Xml.Linq.XDocument" /> to be serialized.</param>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this <see cref="T:System.Xml.Linq.XDocument" /> is written to.</param>
            <param name="settings">An <see cref="T:System.Xml.XmlWriterSettings" /> value with serialization settings.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.XmlExtensions.SaveFormatted(System.Xml.Linq.XDocument,System.String)">
            <summary>
            Serializes this <see cref="T:System.Xml.Linq.XDocument" /> to a file with the specified filename using the formatting settings as specified in <see cref="P:BytecodeApi.Extensions.XmlExtensions.FormattedXmlWriterSettings" />.
            </summary>
            <param name="xml">The <see cref="T:System.Xml.Linq.XDocument" /> to be serialized.</param>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which this <see cref="T:System.Xml.Linq.XDocument" /> is written to.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.XmlExtensions.SaveFormatted(System.Xml.Linq.XDocument,System.IO.Stream)">
            <summary>
            Serializes this <see cref="T:System.Xml.Linq.XDocument" /> to a <see cref="T:System.IO.Stream" /> using the formatting settings as specified in <see cref="P:BytecodeApi.Extensions.XmlExtensions.FormattedXmlWriterSettings" />.
            </summary>
            <param name="xml">The <see cref="T:System.Xml.Linq.XDocument" /> to be serialized.</param>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this <see cref="T:System.Xml.Linq.XDocument" /> is written to.</param>
        </member>
        <member name="M:BytecodeApi.Extensions.XmlExtensions.Attribute(System.Xml.Linq.XElement,System.Xml.Linq.XName,System.Object)">
            <summary>
            Returns the <see cref="T:System.Xml.Linq.XAttribute" /> of this <see cref="T:System.Xml.Linq.XElement" /> that has the specified <see cref="T:System.Xml.Linq.XName" />, or returns a new <see cref="T:System.Xml.Linq.XAttribute" /> with a default value.
            </summary>
            <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to be searched by the <paramref name="name" /> parameter.</param>
            <param name="name">The <see cref="T:System.Xml.Linq.XName" /> of the <see cref="T:System.Xml.Linq.XAttribute" /> to get.</param>
            <param name="defaultValue">The value that is used if the <see cref="T:System.Xml.Linq.XAttribute" /> was not found.</param>
            <returns>
            The <see cref="T:System.Xml.Linq.XAttribute" /> of this <see cref="T:System.Xml.Linq.XElement" /> that has the specified <see cref="T:System.Xml.Linq.XName" />, or a new <see cref="T:System.Xml.Linq.XAttribute" /> with a default value, if the <see cref="T:System.Xml.Linq.XAttribute" /> was not found.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Cli.CliValidationSource">
            <summary>
            Specifies a validation source for a <see cref="T:BytecodeApi.IO.Cli.CliException" />, if validated using the <see cref="P:BytecodeApi.IO.Cli.ParsedOptionSet.Assert" /> object.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Cli.CliValidationSource.None">
            <summary>
            The exception is a general error that did not occur during validation using the <see cref="P:BytecodeApi.IO.Cli.ParsedOptionSet.Assert" /> object.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Cli.CliValidationSource.OptionRequired">
            <summary>
            The exception occurred in the <see cref="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.OptionRequired(System.String)" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Cli.CliValidationSource.OptionNotDuplicate">
            <summary>
            The exception occurred in the <see cref="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.OptionNotDuplicate(System.String)" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Cli.CliValidationSource.ValueCount">
            <summary>
            The exception occurred in the <see cref="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.ValueCount(System.String,System.Int32)" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Cli.CliValidationSource.MinimumValueCount">
            <summary>
            The exception occurred in the <see cref="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.MinimumValueCount(System.String,System.Int32)" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Cli.CliValidationSource.MaximumValueCount">
            <summary>
            The exception occurred in the <see cref="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.MaximumValueCount(System.String,System.Int32)" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Cli.CliValidationSource.Custom">
            <summary>
            The exception occurred in the <see cref="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.Custom(System.String,System.Predicate{System.String[]})" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Cli.CliValidationSource.Int32">
            <summary>
            The exception occurred in the <see cref="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.Int32(System.String)" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Cli.CliValidationSource.FileExists">
            <summary>
            The exception occurred in the <see cref="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.FileExists(System.String)" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Cli.CliValidationSource.DirectoryExists">
            <summary>
            The exception occurred in the <see cref="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.DirectoryExists(System.String)" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Cli.CliValidationSource.FileExtension">
            <summary>
            The exception occurred in the <see cref="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.FileExtension(System.String,System.String[])" /> method.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.Cli.CliException">
            <summary>
            The exception that is thrown when commandline parsing failed or was asserted using the <see cref="P:BytecodeApi.IO.Cli.ParsedOptionSet.Assert" /> object.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.CliException.ValidationSource">
            <summary>
            Gets a <see cref="T:BytecodeApi.IO.Cli.CliValidationSource" /> value that indicates what validation took place using the <see cref="P:BytecodeApi.IO.Cli.ParsedOptionSet.Assert" /> object. For general exceptions, <see cref="F:BytecodeApi.IO.Cli.CliValidationSource.None" /> is returned.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Cli.CliException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Cli.CliException" /> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:BytecodeApi.IO.Cli.CliException.#ctor(BytecodeApi.IO.Cli.CliValidationSource,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Cli.CliException" /> class.
            </summary>
            <param name="validationSource">If validated using the <see cref="P:BytecodeApi.IO.Cli.ParsedOptionSet.Assert" /> object, indicates what validation took place.</param>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:BytecodeApi.IO.Cli.ParsedOptionSet">
            <summary>
            Represents a set of commandline options, parsed from a given commandline.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.ParsedOptionSet.Arguments">
            <summary>
            Gets a <see cref="T:System.String" /> collection with arguments that are not associated to any <see cref="T:BytecodeApi.IO.Cli.Option" />. These are the first arguments before any option parameter, e.g. anything before "-a".
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.ParsedOptionSet.Options">
            <summary>
            Gets a collection of <see cref="T:BytecodeApi.IO.Cli.ParsedOption" /> objects that were parsed from the given commandline.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.ParsedOptionSet.Item(System.String)">
            <summary>
            Gets the <see cref="T:BytecodeApi.IO.Cli.ParsedOption" />, identified by an <see cref="T:BytecodeApi.IO.Cli.Option" /> that matches the <paramref name="argument" /> parameter and throws an exception, if it was not found.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />. If <paramref name="argument" /> matches any of the strings in the <see cref="P:BytecodeApi.IO.Cli.Option.Arguments" /> property, the <see cref="T:BytecodeApi.IO.Cli.ParsedOption" /> is returned.</param>
        </member>
        <member name="P:BytecodeApi.IO.Cli.ParsedOptionSet.HasDuplicateOptions">
            <summary>
            Gets a value indicating whether multiple <see cref="T:BytecodeApi.IO.Cli.ParsedOption" /> objects share the same <see cref="T:BytecodeApi.IO.Cli.Option" /> object. This can be used to sanitize commandline arguments.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.ParsedOptionSet.Validate">
            <summary>
            Validates conditions of this <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> and invokes a custom handler, if the condition was not met.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.ParsedOptionSet.Assert">
            <summary>
            Asserts conditions of this <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> and throws a <see cref="T:BytecodeApi.IO.Cli.CliException" />, if the condition was not met.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{BytecodeApi.IO.Cli.ParsedOption})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> class.
            </summary>
            <param name="arguments">A <see cref="T:System.String" /> collection with arguments that are not associated to any <see cref="T:BytecodeApi.IO.Cli.Option" />. These are the first arguments before any option parameter, e.g. anything before "-a".</param>
            <param name="options">A collection of <see cref="T:BytecodeApi.IO.Cli.ParsedOption" /> objects that were parsed from the given commandline.</param>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.HasOption(System.String)">
            <summary>
            Determines whether a <see cref="T:BytecodeApi.IO.Cli.ParsedOption" /> with the specified <see cref="T:BytecodeApi.IO.Cli.Option" /> argument exists in this collection.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <returns>
            <see langword="true" />, if the <see cref="T:BytecodeApi.IO.Cli.ParsedOption" /> with the specified <see cref="T:BytecodeApi.IO.Cli.Option" /> argument exists;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.GetOptions(System.String)">
            <summary>
            Returns an enumerable collection of all <see cref="T:BytecodeApi.IO.Cli.ParsedOption" />, identified by an <see cref="T:BytecodeApi.IO.Cli.Option" /> that matches the <paramref name="argument" /> parameter.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />. If <paramref name="argument" /> matches any of the strings in the <see cref="P:BytecodeApi.IO.Cli.Option.Arguments" /> property, the <see cref="T:BytecodeApi.IO.Cli.ParsedOption" /> is returned.</param>
            <returns>
            An enumerable collection of all <see cref="T:BytecodeApi.IO.Cli.ParsedOption" />, identified by an <see cref="T:BytecodeApi.IO.Cli.Option" /> that matches the <paramref name="argument" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.Handle(System.String,System.Action{System.String[]})">
            <summary>
            Handles all <see cref="T:BytecodeApi.IO.Cli.ParsedOption" /> objects with the specified argument using a custom handler.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="handler">A custom handler that is invoked with a <see cref="T:System.String" />[] containing the values of the <see cref="T:BytecodeApi.IO.Cli.ParsedOption" />.</param>
            <returns>
            A reference to this instance after the operation has completed.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Cli.ParsedOptionSet.ValidateHelper">
            <summary>
            Helper class that validates <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> conditions. If a condition is not met, a custom handler is invoked.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.ValidateHelper.OptionRequired(System.String,System.Action)">
            <summary>
            Validates that the specified argument is present.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="failed">A custom handler that is invoked, if the condition is not met.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.ValidateHelper.OptionNotDuplicate(System.String,System.Action)">
            <summary>
            Validates that the argument has only one occurrence, or none.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="failed">A custom handler that is invoked, if the condition is not met.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.ValidateHelper.ValueCount(System.String,System.Int32,System.Action)">
            <summary>
            Validates that the argument has a specific amount of values. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="count">A <see cref="T:System.Int32" /> specifying the amount of values for the <see cref="T:BytecodeApi.IO.Cli.ParsedOption" />.</param>
            <param name="failed">A custom handler that is invoked, if the condition is not met.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.ValidateHelper.MinimumValueCount(System.String,System.Int32,System.Action)">
            <summary>
            Validates that the argument has a minimum amount of values. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="count">A <see cref="T:System.Int32" /> specifying the minimum amount of values for the <see cref="T:BytecodeApi.IO.Cli.ParsedOption" />.</param>
            <param name="failed">A custom handler that is invoked, if the condition is not met.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.ValidateHelper.MaximumValueCount(System.String,System.Int32,System.Action)">
            <summary>
            Validates that the argument does not exceed a maximum amount of values. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="count">A <see cref="T:System.Int32" /> specifying the maximum amount of values for the <see cref="T:BytecodeApi.IO.Cli.ParsedOption" />.</param>
            <param name="failed">A custom handler that is invoked, if the condition is not met.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.ValidateHelper.Custom(System.String,System.Predicate{System.String[]},System.Action)">
            <summary>
            Performs a custom validation on the values. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="validate">The <see cref="T:System.Predicate`1" /> that determines whether the validation succeeded.</param>
            <param name="failed">A custom handler that is invoked, if the condition is not met.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.ValidateHelper.Int32(System.String,System.Action)">
            <summary>
            Validates that all values represent a valid <see cref="T:System.Int32" /> value. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="failed">A custom handler that is invoked, if the condition is not met.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.ValidateHelper.FileExists(System.String,System.Action)">
            <summary>
            Validates that all values represent existing files. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="failed">A custom handler that is invoked, if the condition is not met.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.ValidateHelper.FileExtension(System.String,System.String[],System.Action)">
            <summary>
            Validates that all values represent filenames with one of several specific extensions. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="extensions">A set of allowed extensions for each filename.</param>
            <param name="failed">A custom handler that is invoked, if the condition is not met.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.ValidateHelper.DirectoryExists(System.String,System.Action)">
            <summary>
            Validates that all values represent existing directories. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="failed">A custom handler that is invoked, if the condition is not met.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper">
            <summary>
            Helper class that asserts <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> conditions. If a condition is not met, an exception is thrown.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.OptionRequired(System.String)">
            <summary>
            Validates that the specified argument is present; otherwise, a <see cref="T:BytecodeApi.IO.Cli.CliException" /> is thrown.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.OptionNotDuplicate(System.String)">
            <summary>
            Validates that the argument has only one occurrence, or none; otherwise, a <see cref="T:BytecodeApi.IO.Cli.CliException" /> is thrown.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.ValueCount(System.String,System.Int32)">
            <summary>
            Validates that the argument has a specific amount of values; otherwise, a <see cref="T:BytecodeApi.IO.Cli.CliException" /> is thrown. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="count">A <see cref="T:System.Int32" /> specifying the amount of values for the <see cref="T:BytecodeApi.IO.Cli.ParsedOption" />.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.MinimumValueCount(System.String,System.Int32)">
            <summary>
            Validates that the argument has a minimum amount of values; otherwise, a <see cref="T:BytecodeApi.IO.Cli.CliException" /> is thrown. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="count">A <see cref="T:System.Int32" /> specifying the minimum amount of values for the <see cref="T:BytecodeApi.IO.Cli.ParsedOption" />.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.MaximumValueCount(System.String,System.Int32)">
            <summary>
            Validates that the argument does not exceed a maximum amount of values; otherwise, a <see cref="T:BytecodeApi.IO.Cli.CliException" /> is thrown. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="count">A <see cref="T:System.Int32" /> specifying the maximum amount of values for the <see cref="T:BytecodeApi.IO.Cli.ParsedOption" />.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.Custom(System.String,System.Predicate{System.String[]})">
            <summary>
            Performs a custom validation on the values and throws a <see cref="T:BytecodeApi.IO.Cli.CliException" />, if the validation failed. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="validate">The <see cref="T:System.Predicate`1" /> that determines whether the validation succeeded.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.Int32(System.String)">
            <summary>
            Validates that all values represent a valid <see cref="T:System.Int32" /> value; otherwise, a <see cref="T:BytecodeApi.IO.Cli.CliException" /> is thrown. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.FileExists(System.String)">
            <summary>
            Validates that all values represent existing files; otherwise, a <see cref="T:BytecodeApi.IO.Cli.CliException" /> is thrown. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.FileExtension(System.String,System.String[])">
            <summary>
            Validates that all values represent filenames with one of several specific extensions; otherwise, a <see cref="T:BytecodeApi.IO.Cli.CliException" /> is thrown. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="extensions">A set of allowed extensions for each filename.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOptionSet.AssertHelper.DirectoryExists(System.String)">
            <summary>
            Validates that all values represent existing directories; otherwise, a <see cref="T:BytecodeApi.IO.Cli.CliException" /> is thrown. If the <see cref="T:BytecodeApi.IO.Cli.Option" /> was not found, this validation succeeds.
            </summary>
            <param name="argument">A <see cref="T:System.String" /> that identifies an <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <returns>
            A reference to the instance of <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> after the operation has completed.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Cli.ParsedOption">
            <summary>
            Represents a commandline option, parsed from a given commandline. An <see cref="T:BytecodeApi.IO.Cli.Option" /> reference identifies the option.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.ParsedOption.Option">
            <summary>
            Gets a reference to the associated <see cref="T:BytecodeApi.IO.Cli.Option" /> this <see cref="T:BytecodeApi.IO.Cli.ParsedOption" /> is associated with.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.ParsedOption.Values">
            <summary>
            Gets a <see cref="T:System.String" /> collection with the parsed values.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Cli.ParsedOption.#ctor(BytecodeApi.IO.Cli.Option,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Cli.ParsedOption" /> class with a reference to the associated <see cref="T:BytecodeApi.IO.Cli.Option" /> and a <see cref="T:System.String" />[] with the parsed values.
            </summary>
            <param name="option">A reference to the associated <see cref="T:BytecodeApi.IO.Cli.Option" /> this <see cref="T:BytecodeApi.IO.Cli.ParsedOption" /> is associated with.</param>
            <param name="values">A <see cref="T:System.String" />[] with the parsed values.</param>
        </member>
        <member name="T:BytecodeApi.IO.Cli.Option">
            <summary>
            Represents a commandline option, specified by possible arguments and alternatives.
            <para>Example: "-p 12345" and "--password 12345"</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.Option.Arguments">
            <summary>
            Gets a collection of strings that defines what arguments apply to this commandline option.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.Option.Alternatives">
            <summary>
            Gets a collection of strings that defines what arguments apply to this commandline option alternatively.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Cli.Option.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Cli.Option" /> class with the specified collection of arguments.
            </summary>
            <param name="arguments">A collection of strings that defines what arguments apply to this commandline option.</param>
        </member>
        <member name="M:BytecodeApi.IO.Cli.Option.#ctor(System.String[],System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Cli.Option" /> class with the specified collection of arguments and alternatives.
            </summary>
            <param name="arguments">A collection of strings that defines what arguments apply to this commandline option.</param>
            <param name="alternatives">A collection of strings that defines what arguments apply to this commandline option alternatively.</param>
        </member>
        <member name="M:BytecodeApi.IO.Cli.Option.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <see langword="true" />, if the specified <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.Option.Equals(BytecodeApi.IO.Cli.Option)">
            <summary>
            Determines whether this instance is equal to another <see cref="T:BytecodeApi.IO.Cli.Option" />.
            </summary>
            <param name="other">The <see cref="T:BytecodeApi.IO.Cli.Option" /> to compare to this instance.</param>
            <returns>
            <see langword="true" />, if this instance is equal to the <paramref name="other" /> parameter;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.Option.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:BytecodeApi.IO.Cli.Option" />.
            </summary>
            <returns>
            The hash code for this <see cref="T:BytecodeApi.IO.Cli.Option" /> instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.Option.op_Equality(BytecodeApi.IO.Cli.Option,BytecodeApi.IO.Cli.Option)">
            <summary>
            Compares two <see cref="T:BytecodeApi.IO.Cli.Option" /> instances for equality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.IO.Cli.Option" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.IO.Cli.Option" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.IO.Cli.Option" /> are equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.Option.op_Inequality(BytecodeApi.IO.Cli.Option,BytecodeApi.IO.Cli.Option)">
            <summary>
            Compares two <see cref="T:BytecodeApi.IO.Cli.Option" /> instances for inequality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.IO.Cli.Option" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.IO.Cli.Option" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.IO.Cli.Option" /> are not equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Cli.OptionSet">
            <summary>
            Represents a set of commandline options that can be used to parse a given commandline.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.OptionSet.OptionPrefix">
            <summary>
            Gets the prefix <see cref="T:System.String" /> for commandline options. This is typically a dash or a slash character.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.OptionSet.OptionAlternativePrefix">
            <summary>
            Gets the prefix <see cref="T:System.String" /> for the alternative commandline options. This is typically a double dash.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.OptionSet.OptionPrefixIgnoreCase">
            <summary>
            Gets a value indicating whether the commandline parsing ignores character casing.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.OptionSet.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:BytecodeApi.IO.Cli.OptionSet" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Cli.OptionSet.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:BytecodeApi.IO.Cli.OptionSet" /> is read-only.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Cli.OptionSet.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Cli.OptionSet" /> class with the specified prefixes.
            <para>Example: "-" and "--", or "/" and "--"</para>
            </summary>
            <param name="optionPrefix">The prefix <see cref="T:System.String" /> for commandline options. This is typically a dash or a slash character.</param>
            <param name="optionAlternativePrefix">The prefix <see cref="T:System.String" /> for the alternative commandline options. This is typically a double dash.</param>
        </member>
        <member name="M:BytecodeApi.IO.Cli.OptionSet.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Cli.OptionSet" /> class with the specified prefixes.
            <para>Example: "-" and "--", or "/" and "--"</para>
            </summary>
            <param name="optionPrefix">The prefix <see cref="T:System.String" /> for commandline options. This is typically a dash or a slash character.</param>
            <param name="optionAlternativePrefix">The prefix <see cref="T:System.String" /> for the alternative commandline options. This is typically a double dash.</param>
            <param name="optionPrefixIgnoreCase"><see langword="true" /> to ignore character casing during commandline parsing.</param>
        </member>
        <member name="M:BytecodeApi.IO.Cli.OptionSet.Add(System.String[])">
            <summary>
            Creates a new <see cref="T:BytecodeApi.IO.Cli.Option" /> and adds it to this <see cref="T:BytecodeApi.IO.Cli.OptionSet" />.
            </summary>
            <param name="arguments">A collection of strings that defines what arguments apply to the new <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <returns>
            A reference to this instance after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.OptionSet.Add(System.String[],System.String[])">
            <summary>
            Creates a new <see cref="T:BytecodeApi.IO.Cli.Option" /> and adds it to this <see cref="T:BytecodeApi.IO.Cli.OptionSet" />.
            </summary>
            <param name="arguments">A collection of strings that defines what arguments apply to the new <see cref="T:BytecodeApi.IO.Cli.Option" />.</param>
            <param name="alternatives">A collection of strings that defines what arguments apply to the new <see cref="T:BytecodeApi.IO.Cli.Option" /> alternatively.</param>
            <returns>
            A reference to this instance after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.OptionSet.Add(BytecodeApi.IO.Cli.Option)">
            <summary>
            Adds the specified <see cref="T:BytecodeApi.IO.Cli.Option" /> to this <see cref="T:BytecodeApi.IO.Cli.OptionSet" />.
            </summary>
            <param name="option">The <see cref="T:BytecodeApi.IO.Cli.Option" /> to be added.</param>
            <returns>
            A reference to this instance after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.OptionSet.Parse(System.String[])">
            <summary>
            Parses a commandline arguments and returns a new <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> with the result.
            </summary>
            <param name="args">An array of <see cref="T:System.String" /> objects with the commandline arguments, excluding the executable filename.</param>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> with the parsed commandline.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.OptionSet.Parse(System.String)">
            <summary>
            Parses a commandline <see cref="T:System.String" /> and returns a new <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> with the result.
            </summary>
            <param name="commandLine">The commandline <see cref="T:System.String" />, where each argument is separated with spaces, excluding the executable filename. Arguments containing spaces should be quoted.</param>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Cli.ParsedOptionSet" /> with the parsed commandline.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.OptionSet.ParseCommandLine(System.String)">
            <summary>
            Parses commandline arguments from a <see cref="T:System.String" /> and returns the equivalent <see cref="T:System.String" />[] with split commandline arguments.
            </summary>
            <param name="commandLine">A <see cref="T:System.String" /> specifying a commandline.</param>
            <returns>
            The equivalent <see cref="T:System.String" />[] with split commandline arguments from the given commandline.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.OptionSet.Remove(BytecodeApi.IO.Cli.Option)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:BytecodeApi.IO.Cli.Option" /> from the <see cref="T:BytecodeApi.IO.Cli.OptionSet" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.IO.Cli.Option" /> to remove from the <see cref="T:BytecodeApi.IO.Cli.OptionSet" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="item" /> is successfully removed;
            otherwise, <see langword="false" />.
            This method also returns <see langword="false" />, if <paramref name="item" /> was not found in the <see cref="T:BytecodeApi.IO.Cli.OptionSet" />.</returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.OptionSet.Clear">
            <summary>
            Removes all elements from the <see cref="T:BytecodeApi.IO.Cli.OptionSet" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Cli.OptionSet.Contains(BytecodeApi.IO.Cli.Option)">
            <summary>
            Determines whether an element is in the <see cref="T:BytecodeApi.IO.Cli.OptionSet" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.IO.Cli.Option" /> to locate in the <see cref="T:BytecodeApi.IO.Cli.OptionSet" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="item" /> is found in the <see cref="T:BytecodeApi.IO.Cli.OptionSet" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Cli.OptionSet.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:BytecodeApi.IO.Cli.OptionSet" />.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the <see cref="T:BytecodeApi.IO.Cli.OptionSet" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Debugging.BindingErrorTraceListener">
            <summary>
            Directs WPF binding error output to event handlers.
            </summary>
        </member>
        <member name="E:BytecodeApi.IO.Debugging.BindingErrorTraceListener.EventReceived">
            <summary>
            Occurs when a WPF binding error is traced.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.BindingErrorTraceListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Debugging.BindingErrorTraceListener" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.BindingErrorTraceListener.Write(System.String)">
            <summary>
            When overridden in a derived class, writes the specified message to the listener you create in the derived class.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.BindingErrorTraceListener.WriteLine(System.String)">
            <summary>
            When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.BindingErrorTraceListener.OnEventReceived(System.String)">
            <summary>
            Raises the <see cref="E:BytecodeApi.IO.Debugging.BindingErrorTraceListener.EventReceived" /> event.
            </summary>
            <param name="message">The message for the <see cref="E:BytecodeApi.IO.Debugging.BindingErrorTraceListener.EventReceived" /> event.</param>
        </member>
        <member name="T:BytecodeApi.IO.Debugging.TraceEventInfo">
            <summary>
            Specifies a trace event.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceEventInfo.EventCache">
            <summary>
            Gets the <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceEventInfo.Source">
            <summary>
            Gets the name used to identify the output, typically the name of the application that generated the trace event.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceEventInfo.EventType">
            <summary>
            Gets the <see cref="T:System.Diagnostics.TraceEventType" /> value specifying the type of event that has caused the trace.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceEventInfo.Id">
            <summary>
            Gets the numeric identifier for the event.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceEventInfo.Message">
            <summary>
            Gets the event message.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.TraceEventInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Debugging.TraceEventInfo" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.TraceEventInfo.#ctor(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Debugging.TraceEventInfo" /> class with the specified trace event parameters.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.TraceEventInfo.#ctor(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Debugging.TraceEventInfo" /> class with the specified trace event parameters.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="message">The event message.</param>
        </member>
        <member name="T:BytecodeApi.IO.Debugging.TraceTransferInfo">
            <summary>
            Specifies a trace transfer.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceTransferInfo.EventCache">
            <summary>
            Gets the <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceTransferInfo.Source">
            <summary>
            Gets the name used to identify the output, typically the name of the application that generated the trace event.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceTransferInfo.Id">
            <summary>
            Gets the numeric identifier for the event.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceTransferInfo.Message">
            <summary>
            Gets the event message.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceTransferInfo.RelatedActivityId">
            <summary>
            Gets the <see cref="T:System.Guid" /> object identifying a related activity.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.TraceTransferInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Debugging.TraceTransferInfo" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.TraceTransferInfo.#ctor(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Debugging.TraceTransferInfo" /> class with the specified trace transfer parameters.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="message">The event message.</param>
            <param name="relatedActivityId">A <see cref="T:System.Guid" /> object identifying a related activity.</param>
        </member>
        <member name="T:BytecodeApi.IO.Debugging.TraceDataInfo">
            <summary>
            Specifies trace data.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceDataInfo.EventCache">
            <summary>
            Gets the <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceDataInfo.Source">
            <summary>
            Gets the name used to identify the output, typically the name of the application that generated the trace event.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceDataInfo.EventType">
            <summary>
            Gets the <see cref="T:System.Diagnostics.TraceEventType" /> value specifying the type of event that has caused the trace.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceDataInfo.Id">
            <summary>
            Gets the numeric identifier for the event.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Debugging.TraceDataInfo.Data">
            <summary>
            Gets the array of emitted data objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.TraceDataInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Debugging.TraceDataInfo" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.TraceDataInfo.#ctor(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Debugging.TraceDataInfo" /> class with the specified trace data parameters.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="data">The array of emitted data objects.</param>
        </member>
        <member name="T:BytecodeApi.IO.Debugging.DelegateTraceListener">
            <summary>
            Directs tracing or debugging output to event handlers.
            </summary>
        </member>
        <member name="E:BytecodeApi.IO.Debugging.DelegateTraceListener.EventReceived">
            <summary>
            Occurs when an event is traced.
            </summary>
        </member>
        <member name="E:BytecodeApi.IO.Debugging.DelegateTraceListener.DataReceived">
            <summary>
            Occurs when data is traced.
            </summary>
        </member>
        <member name="E:BytecodeApi.IO.Debugging.DelegateTraceListener.TransferReceived">
            <summary>
            Occurs when a transfer is traced.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.DelegateTraceListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Debugging.DelegateTraceListener" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.DelegateTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <summary>
            Writes trace and event information to the listener specific output.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.DelegateTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Writes trace information, a message, and event information to the listener specific output.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.DelegateTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>
            Writes trace information, a formatted array of objects and event information to the listener specific output.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="format">A format <see cref="T:System.String" /> that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</param>
            <param name="args">An <see cref="T:System.Object" /> array containing zero or more objects to format.</param>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.DelegateTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>
            Writes trace information, a data object and event information to the listener specific output.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="data">The trace data to emit.</param>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.DelegateTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>
            Writes trace information, an array of data objects and event information to the listener specific output.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="data">An array of objects to emit as data.</param>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.DelegateTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
            <summary>
            Writes trace information, a message, a related activity identity and event information to the listener specific output.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="message">A message to write.</param>
            <param name="relatedActivityId">A <see cref="T:System.Guid" /> object identifying a related activity.</param>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.DelegateTraceListener.Write(System.String)">
            <summary>
            When overridden in a derived class, writes the specified message to the listener you create in the derived class.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.DelegateTraceListener.WriteLine(System.String)">
            <summary>
            When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.DelegateTraceListener.OnEventReceived(BytecodeApi.IO.Debugging.TraceEventInfo)">
            <summary>
            Raises the <see cref="E:BytecodeApi.IO.Debugging.DelegateTraceListener.EventReceived" /> event.
            </summary>
            <param name="traceEvent">The event data for the <see cref="E:BytecodeApi.IO.Debugging.DelegateTraceListener.EventReceived" /> event.</param>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.DelegateTraceListener.OnDataReceived(BytecodeApi.IO.Debugging.TraceDataInfo)">
            <summary>
            Raises the <see cref="E:BytecodeApi.IO.Debugging.DelegateTraceListener.DataReceived" /> event.
            </summary>
            <param name="traceData">The event data for the <see cref="E:BytecodeApi.IO.Debugging.DelegateTraceListener.DataReceived" /> event.</param>
        </member>
        <member name="M:BytecodeApi.IO.Debugging.DelegateTraceListener.OnTransferReceived(BytecodeApi.IO.Debugging.TraceTransferInfo)">
            <summary>
            Raises the <see cref="E:BytecodeApi.IO.Debugging.DelegateTraceListener.TransferReceived" /> event.
            </summary>
            <param name="traceTransfer">The event data for the <see cref="E:BytecodeApi.IO.Debugging.DelegateTraceListener.TransferReceived" /> event.</param>
        </member>
        <member name="T:BytecodeApi.IO.FileSystem.CompareDirectoryOptions">
            <summary>
            Specifies flags for the comparison of two directories.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.CompareDirectoryOptions.None">
            <summary>
            Specifies that no comparison flags are defined.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.CompareDirectoryOptions.Recursive">
            <summary>
            Specifies to compare subdirectories recursively.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.CompareDirectoryOptions.IgnoreCase">
            <summary>
            Specifies that character casing of file and directory names is ignored during comparison.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.CompareDirectoryOptions.CompareFileSize">
            <summary>
            Specifies that files with equal size are considered equal. If no CompareFile* flags are defined, the list of filenames is compared.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.CompareDirectoryOptions.CompareFileContents">
            <summary>
            Specifies that file contents are compared. If no CompareFile* flags are defined, the list of filenames is compared.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.CompareDirectoryOptions.CompareDirectoryLastWriteTime">
            <summary>
            Specifies that the timestamps (last write time) of files are compared.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.CompareDirectoryOptions.CompareFileLastWriteTime">
            <summary>
            Specifies that the timestamps (last write time) of directories are compared.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.CompareDirectoryOptions.IgnoreFiles">
            <summary>
            Specifies that files are excluded from comparison.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.CompareDirectoryOptions.IgnoreDirectories">
            <summary>
            Specifies that directories are excluded from comparison.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.FileSystem.PathEx">
            <summary>
            Provides <see langword="static" /> methods that extend the <see cref="T:System.IO.Path" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.PathEx.GetOriginalPath(System.String)">
            <summary>
            Returns the path of an existing file or directory in its original representation with fixed character casing. If it does not exist, the original <see cref="T:System.String" /> is returned.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file or directory.</param>
            <returns>
            The path of an existing file or directory in its original representation with fixed character casing. If it does not exist, the original <see cref="T:System.String" /> is returned.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.FileSystem.AlternateDataStreamAttributes">
            <summary>
            Specifies the attributes of an alternate data stream.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamAttributes.None">
            <summary>
            The alternate data stream has no attributes.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamAttributes.ModifiedWhenRead">
            <summary>
            The alternate data stream contains data that is modified when read.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamAttributes.ContainsSecurity">
            <summary>
            The alternate data stream contains security data.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamAttributes.ContainsProperties">
            <summary>
            The alternate data stream contains properties.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamAttributes.Sparse">
            <summary>
            The alternate data stream is sparse.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.FileSystem.AlternateDataStreamType">
            <summary>
            Specifies the type of an alternate data stream.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamType.Unknown">
            <summary>
            The stream type is unknown.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamType.Data">
            <summary>
            The stream contains standard data.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamType.ExtendedAttributes">
            <summary>
            The stream contains extended attribute data.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamType.SecurityData">
            <summary>
            The stream contains security data.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamType.AlternateDataStream">
            <summary>
            The stream contains an alternate data stream.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamType.Link">
            <summary>
            The stream contains hard link information.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamType.PropertyData">
            <summary>
            The stream contains property data.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamType.ObjectId">
            <summary>
            The stream contains object identifiers.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamType.ReparseData">
            <summary>
            The stream contains reparse points.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamType.SparseBlock">
            <summary>
            The stream contains a sparse file.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.AlternateDataStreamType.TransactionData">
            <summary>
            The stream contains transactional data.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.FileSystem.AlternateDataStreamInfo">
            <summary>
            Provides properties and instance methods for NTFS alternate data streams.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.FileSystem.AlternateDataStreamInfo.Path">
            <summary>
            Gets the path of the file.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.FileSystem.AlternateDataStreamInfo.Streams">
            <summary>
            Gets a collection of <see cref="T:BytecodeApi.IO.FileSystem.AlternateDataStream" /> objects associated with the specified file.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.AlternateDataStreamInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.FileSystem.AlternateDataStreamInfo" /> class with the specified file path.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file from which to access alternate data streams.</param>
        </member>
        <member name="T:BytecodeApi.IO.FileSystem.AlternateDataStream">
            <summary>
            Represents an alternate data stream entry of a file or directory.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.FileSystem.AlternateDataStream.Name">
            <summary>
            Gets the name of the alternate data stream without the leading colon.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.FileSystem.AlternateDataStream.Size">
            <summary>
            Gets the size of the alternate data stream.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.FileSystem.AlternateDataStream.Type">
            <summary>
            Gets the type of the alternate data stream.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.FileSystem.AlternateDataStream.Attributes">
            <summary>
            Gets the alternate data stream attributes.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.AlternateDataStream.#ctor(System.String,System.Int64,BytecodeApi.IO.FileSystem.AlternateDataStreamType,BytecodeApi.IO.FileSystem.AlternateDataStreamAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.FileSystem.AlternateDataStream" /> class with the specified name, size, type and attributes.
            </summary>
            <param name="name">The name of the alternate data stream without the leading colon.</param>
            <param name="size">The size of the alternate data stream.</param>
            <param name="type">The type of the alternate data stream.</param>
            <param name="attributes">The alternate data stream attributes.</param>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.AlternateDataStream.ToString">
            <summary>
            Returns the name of this <see cref="T:BytecodeApi.IO.FileSystem.AlternateDataStream" />.
            </summary>
            <returns>
            The name of this <see cref="T:BytecodeApi.IO.FileSystem.AlternateDataStream" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.FileSystem.CacheFile">
            <summary>
            Represents a file that is a cached version of another content source. The file is located on the disk and is updated by a specified callback condition or a timeout. Read operations are performed directly from the disk, the file is not cached in memory.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.FileSystem.CacheFile.Path">
            <summary>
            Gets the path to the file of this instance. This file does not need to exist.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.FileSystem.CacheFile.Age">
            <summary>
            Gets the amount of time that has passed since the cached file was last written to.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.CacheFile.CreateWithTimeout(System.String,System.TimeSpan,BytecodeApi.IO.FileSystem.CacheFileUpdateCallback)">
            <summary>
            Creates a new <see cref="T:BytecodeApi.IO.FileSystem.CacheFile" /> instance for the file specified by <paramref name="path" />. If the file does not exist, yet, it is created upon first access.
            </summary>
            <param name="path">A <see cref="T:System.String" /> that contains the name of the file that represents the cached version. This file does not need to exist.</param>
            <param name="timeout">A <see cref="T:System.TimeSpan" /> value that specifies the timeout period after which the file will be updated. This value is compared to the LastWriteTime property of the file.</param>
            <param name="updateCallback">The method that is called when the file needs to be updated.</param>
            <returns>
            The <see cref="T:BytecodeApi.IO.FileSystem.CacheFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.CacheFile.CreateWithCallback(System.String,BytecodeApi.IO.FileSystem.CacheFileRequestCallback,BytecodeApi.IO.FileSystem.CacheFileUpdateCallback)">
            <summary>
            Creates a new <see cref="T:BytecodeApi.IO.FileSystem.CacheFile" /> instance for the file specified by <paramref name="path" />. If the file does not exist, yet, it is created upon first access.
            </summary>
            <param name="path">A <see cref="T:System.String" /> that contains the name of the file that represents the cached version. This file does not need to exist.</param>
            <param name="requestCallback">The method that is called when the file is accessed. If the method returns <see langword="false" />, it means the cached file is invalid and <paramref name="updateCallback" /> is called to update the file. If it returns <see langword="true" />, the existing file is read from the disk. This method is only called when the file on the disk exists.</param>
            <param name="updateCallback">The method that is called when the file needs to be updated.</param>
            <returns>
            The <see cref="T:BytecodeApi.IO.FileSystem.CacheFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.CacheFile.OpenRead(System.Boolean@)">
            <summary>
            Opens the file for reading.
            If the file does not exist or an update is required by the specified conditions (timeout or callback), the file is updated and then opened.
            </summary>
            <param name="updated">When this method returns, a <see cref="T:System.Boolean" /> value indicating whether the file has been updated before it was opened.</param>
            <returns>
            A <see cref="T:System.IO.FileStream" /> from the file located in <see cref="P:BytecodeApi.IO.FileSystem.CacheFile.Path" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.CacheFile.ReadAllBytes">
            <summary>
            Opens the file, reads the contents of the file into a <see cref="T:System.Byte" />[], and then closes the file.
            If the file does not exist or an update is required by the specified conditions (timeout or callback), the file is updated and then opened.
            </summary>
            <returns>
            A new <see cref="T:System.Byte" />[] containing the contents of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.CacheFile.ReadAllLines">
            <summary>
            Opens the file, reads all lines of the file into a <see cref="T:System.String" />[], and then closes the file.
            If the file does not exist or an update is required by the specified conditions (timeout or callback), the file is updated and then opened.
            </summary>
            <returns>
            A new <see cref="T:System.String" />[] containing all lines of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.CacheFile.ReadAllLines(System.Text.Encoding)">
            <summary>
            Opens the file, reads all lines of the file with the specified encoding into a <see cref="T:System.String" />[], and then closes the file.
            If the file does not exist or an update is required by the specified conditions (timeout or callback), the file is updated and then opened.
            </summary>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>
            A new <see cref="T:System.String" />[] containing all lines of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.CacheFile.ReadAllText">
            <summary>
            Opens a text file, reads all lines of the file into a <see cref="T:System.String" />, and then closes the file.
            If the file does not exist or an update is required by the specified conditions (timeout or callback), the file is updated and then opened.
            </summary>
            <returns>
            A <see cref="T:System.String" /> containing all lines of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.CacheFile.ReadAllText(System.Text.Encoding)">
            <summary>
            Opens a text file, reads all lines of the file with the specified encoding into a <see cref="T:System.String" />, and then closes the file.
            If the file does not exist or an update is required by the specified conditions (timeout or callback), the file is updated and then opened.
            </summary>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>
            A <see cref="T:System.String" /> containing all lines of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.CacheFile.ReadLines">
            <summary>
            Reads the lines of a file.
            If the file does not exist or an update is required by the specified conditions (timeout or callback), the file is updated and then opened.
            </summary>
            <returns>
            All the lines of the file, or the lines that are the result of a query.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.CacheFile.ReadLines(System.Text.Encoding)">
            <summary>
            Reads the lines of a file that has a specified encoding.
            If the file does not exist or an update is required by the specified conditions (timeout or callback), the file is updated and then opened.
            </summary>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>
            All the lines of the file, or the lines that are the result of a query.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.CacheFile.Delete">
            <summary>
            Deletes the cached file, if it exists. The next call to <see cref="M:BytecodeApi.IO.FileSystem.CacheFile.OpenRead(System.Boolean@)" /> will trigger an update as specified in the <see cref="T:BytecodeApi.IO.FileSystem.CacheFileUpdateCallback" /> delegate.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.FileSystem.CacheFileRequestCallback">
            <summary>
            Represents the method that is called when a <see cref="T:BytecodeApi.IO.FileSystem.CacheFile" /> instance is checked for validity. A return value of <see langword="false" /> means the <see cref="T:BytecodeApi.IO.FileSystem.CacheFile" /> needs to be updated.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> that points to the cached file. This <see cref="T:System.Object" /> can be used to check timestamp and file properties.</param>
            <returns>
            <see langword="true" />, if the <see cref="T:BytecodeApi.IO.FileSystem.CacheFile" /> does not need to be updated;
            <see langword="false" />, if the <see cref="T:BytecodeApi.IO.FileSystem.CacheFile" /> is invalid and needs to be updated.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.FileSystem.CacheFileUpdateCallback">
            <summary>
            Represents the method that is called when a <see cref="T:BytecodeApi.IO.FileSystem.CacheFile" /> instance is invalid and requires to be updated.
            </summary>
            <param name="stream">The <see cref="T:System.IO.FileStream" /> of the cached file. Updated data needs to be written to this stream.</param>
        </member>
        <member name="T:BytecodeApi.IO.FileSystem.FileEx">
            <summary>
            Provides <see langword="static" /> methods that extend the <see cref="T:System.IO.File" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.FileEx.SendToRecycleBin(System.String)">
            <summary>
            Sends the specified file to the recycle bin.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.FileEx.Unblock(System.String)">
            <summary>
            Deletes the :Zone.Identifier alternate data stream for the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
            <returns>
            <see langword="true" />, if the :Zone.Identifier alternate data stream was present and could be deleted;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.FileEx.GetIcon(System.String,System.Boolean)">
            <summary>
            Extracts the icon of the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
            <param name="large"><see langword="true" /> to extract the large icon; otherwise, <see langword="false" />.</param>
            <returns>
            A new <see cref="T:System.Drawing.Icon" /> that has been extracted from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.FileEx.ShowPropertiesDialog(System.String)">
            <summary>
            Shows the properties dialog for the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.FileEx.CompareContents(System.String,System.String)">
            <summary>
            Compares the contents of two files. Returns <see langword="true" />, if both files are of equal size and equal binary content.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
            <param name="otherPath">A <see cref="T:System.String" /> representing the path to the other file to compare.</param>
            <returns>
            <see langword="true" />, if both files are of equal size and equal binary content;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.FileEx.FindSequence(System.String,System.Byte[])">
            <summary>
            Searches the file for the first occurrence of <paramref name="sequence" />. If not found, returns -1.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
            <param name="sequence">The <see cref="T:System.Byte" />[] to search for.</param>
            <returns>
            The index of the first occurrence of <paramref name="sequence" /> and -1, if not found.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.FileEx.FindSequence(System.String,System.Byte[],System.Int32)">
            <summary>
            Searches the file for the first occurrence of <paramref name="sequence" /> starting from <paramref name="startIndex" />. If not found, returns -1.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
            <param name="sequence">The <see cref="T:System.Byte" />[] to search for.</param>
            <param name="startIndex">The zero-based starting position to start searching from.</param>
            <returns>
            The index of the first occurrence of <paramref name="sequence" /> and -1, if not found.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.FileSystem.DirectoryEx">
            <summary>
            Provides <see langword="static" /> methods that extend the <see cref="T:System.IO.Directory" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.DirectoryEx.GetFreeDiskSpace(System.String)">
            <summary>
            Retrieves the number of free bytes, available on the specified path.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory. This can also be a UNC path.</param>
            <returns>
            The number of free bytes, available on the specified path.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.DirectoryEx.GetTotalDiskSpace(System.String)">
            <summary>
            Retrieves the number of total bytes on the specified path.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory. This can also be a UNC path.</param>
            <returns>
            The number of total bytes on the specified path.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.DirectoryEx.ToUncPath(System.String)">
            <summary>
            Gets the UNC path of this directory. If the path cannot be converted to a UNC path, the original path is returned.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
            <returns>
            The UNC path of this directory, if conversion is possible;
            otherwise, the original path.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.DirectoryEx.ComputeDirectorySize(System.String)">
            <summary>
            Computes the size of this directory including all of its subdirectories.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
            <returns>
            The total size in bytes of this directory.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.DirectoryEx.Compare(System.String,System.String,BytecodeApi.IO.FileSystem.CompareDirectoryOptions)">
            <summary>
            Compares two directories with an <see cref="T:BytecodeApi.IO.FileSystem.CompareDirectoryOptions" /> parameter specifying the properties to compare.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
            <param name="otherPath">A <see cref="T:System.String" /> representing the path to the other directory to compare.</param>
            <param name="options">The <see cref="T:BytecodeApi.IO.FileSystem.CompareDirectoryOptions" /> flags specifying what properties to compare.</param>
            <returns>
            A value indicating whether the directories are equal.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.DirectoryEx.CopyTo(System.String,System.String)">
            <summary>
            Copies this directory to a new location including all files and subdirectories recursively.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
            <param name="destDirectoryName">The path of the new location including the top directory name.</param>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.DirectoryEx.CopyTo(System.String,System.String,System.Boolean)">
            <summary>
            Copies this directory to a new location including all files and subdirectories recursively.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
            <param name="destDirectoryName">The path of the new location including the top directory name.</param>
            <param name="overwrite"><see langword="true" /> to overwrite contents. Existing files in the destination directory that do not exist in the source directory are not deleted.</param>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.DirectoryEx.DeleteContents(System.String)">
            <summary>
            Deletes all files and directories from this directory, if it exists.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.DirectoryEx.DeleteContents(System.String,System.Boolean)">
            <summary>
            Deletes all files and directories from this directory, if it exists. If <paramref name="create" /> is set to <see langword="true" />, an empty directory will be created.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
            <param name="create"><see langword="true" /> to create the directory, if it does not exist.</param>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.DirectoryEx.SendToRecycleBin(System.String)">
            <summary>
            Sends this directory and all of its contents to recycle bin.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.DirectoryEx.ShowPropertiesDialog(System.String)">
            <summary>
            Shows the properties dialog for the directory.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
        </member>
        <member name="T:BytecodeApi.IO.FileSystem.TempDirectory">
            <summary>
            Helper class for interoperability with the current user's temporary folder.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.TempDirectory.CreateDirectory">
            <summary>
            Creates a subdirectory in the current user's temporary folder named by a <see cref="T:System.Guid" /> with the <see cref="F:BytecodeApi.GuidFormat.Braces" /> format. The subdirectory is created with <see cref="F:System.IO.FileAttributes.NotContentIndexed" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> value with the full path to the created directory.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.TempDirectory.CreateFile(System.String,System.Byte[])">
            <summary>
            Creates a file in the current user's temporary folder with the specified filename and writes the value of <paramref name="content" /> to it. The file is created in a subdirectory named by a <see cref="T:System.Guid" /> with the <see cref="F:BytecodeApi.GuidFormat.Braces" /> format. The subdirectory is created with <see cref="F:System.IO.FileAttributes.NotContentIndexed" /> and the file's attributes are set to <see cref="F:System.IO.FileAttributes.NotContentIndexed" /> | <see cref="F:System.IO.FileAttributes.Temporary" />.
            </summary>
            <param name="fileName">A <see cref="T:System.String" /> value specifying the filename.</param>
            <param name="content">A <see cref="T:System.Byte" />[] specifying the content that is written to the file.</param>
            <returns>
            A <see cref="T:System.String" /> value with the full path to the created file.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.TempDirectory.ExecuteFile(System.String,System.Byte[])">
            <summary>
            Creates a file in the current user's temporary folder with the specified filename and writes the value of <paramref name="content" /> to it. The file is created in a subdirectory named by a <see cref="T:System.Guid" /> with the <see cref="F:BytecodeApi.GuidFormat.Braces" /> format. The subdirectory is created with <see cref="F:System.IO.FileAttributes.NotContentIndexed" /> and the file's attributes are set to <see cref="F:System.IO.FileAttributes.NotContentIndexed" /> | <see cref="F:System.IO.FileAttributes.Temporary" />. The file is then executed and the <see cref="T:System.Diagnostics.Process" /> is returned and <see langword="null" />, if the file could not be executed.
            </summary>
            <param name="fileName">A <see cref="T:System.String" /> value specifying the filename.</param>
            <param name="content">A <see cref="T:System.Byte" />[] specifying the content that is written to the file.</param>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> of the executed file and
            <see langword="null" />, if <see cref="T:System.Diagnostics.Process" /> creation failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.FileSystem.TempDirectory.ExecuteFile(System.String,System.Byte[],System.Boolean)">
            <summary>
            Creates a file in the current user's temporary folder with the specified filename and writes the value of <paramref name="content" /> to it. The file is created in a subdirectory named by a <see cref="T:System.Guid" /> with the <see cref="F:BytecodeApi.GuidFormat.Braces" /> format. The subdirectory is created with <see cref="F:System.IO.FileAttributes.NotContentIndexed" /> and the file's attributes are set to <see cref="F:System.IO.FileAttributes.NotContentIndexed" /> | <see cref="F:System.IO.FileAttributes.Temporary" />. The file is then executed and the <see cref="T:System.Diagnostics.Process" /> is returned and <see langword="null" />, if the file could not be executed.
            </summary>
            <param name="fileName">A <see cref="T:System.String" /> value specifying the filename.</param>
            <param name="content">A <see cref="T:System.Byte" />[] specifying the content that is written to the file.</param>
            <param name="runas"><see langword="true" /> to execute this file with the "runas" verb.</param>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> of the executed file and
            <see langword="null" />, if <see cref="T:System.Diagnostics.Process" /> creation failed.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.FileSystem.KnownPaths">
            <summary>
            Represents a <see langword="static" /> set of <see cref="T:System.String" /> objects representing common file system paths.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.KnownPaths.HostsFile">
            <summary>
            Represents the path to the Windows hosts file. This field is read-only.
            <para>Example: C:\Windows\System32\drivers\etc\hosts</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.FileSystem.KnownPaths.ServicesFile">
            <summary>
            Represents the path to the Windows services file. This field is read-only.
            <para>Example: C:\Windows\System32\drivers\etc\services</para>
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.Http.HttpHeadRequest">
            <summary>
            Represents a HTTP HEAD requests.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpHeadRequest.AddQueryParameter(System.String,System.String)">
            <summary>
            Adds a query parameter with the specified name and value to the HTTP HEAD request.
            </summary>
            <param name="name">The name of the query parameter.</param>
            <param name="value">The value of the query parameter.</param>
            <returns>
            A reference to this instance after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpHeadRequest.GetResponse">
            <summary>
            Gets the response headers of this HTTP HEAD request.
            </summary>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Http.HttpResponseHeaders" /> object with the response headers.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Http.HttpMultipartRequest">
            <summary>
            Represents a HTTP multipart requests.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpMultipartRequest.AddQueryParameter(System.String,System.String)">
            <summary>
            Adds a query parameter with the specified name and value to the HTTP multipart request.
            </summary>
            <param name="name">The name of the query parameter.</param>
            <param name="value">The value of the query parameter.</param>
            <returns>
            A reference to this instance after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpMultipartRequest.AddPostValue(System.String,System.String)">
            <summary>
            Adds an HTTP POST value with the specified key and value to the HTTP multipart request.
            </summary>
            <param name="key">The key of the POST value.</param>
            <param name="value">The value of the POST value.</param>
            <returns>
            A reference to this instance after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpMultipartRequest.AddFile(System.String,System.String,System.Byte[])">
            <summary>
            Adds a file to the HTTP multipart request.
            </summary>
            <param name="formName">The posted form name of the HTTP multipart entry.</param>
            <param name="fileName">The uploaded filename of the HTTP multipart entry.</param>
            <param name="content">The binary content of the HTTP multipart entry.</param>
            <returns>
            A reference to this instance after the operation has completed.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Http.HttpPostRequest">
            <summary>
            Represents a HTTP POST requests.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpPostRequest.AddQueryParameter(System.String,System.String)">
            <summary>
            Adds a query parameter with the specified name and value to the HTTP POST request.
            </summary>
            <param name="name">The name of the query parameter.</param>
            <param name="value">The value of the query parameter.</param>
            <returns>
            A reference to this instance after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpPostRequest.AddPostValue(System.String,System.String)">
            <summary>
            Adds an HTTP POST value with the specified key and value to the HTTP POST request.
            </summary>
            <param name="key">The key of the POST value.</param>
            <param name="value">The value of the POST value.</param>
            <returns>
            A reference to this instance after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpPostRequest.SetPostData(System.String)">
            <summary>
            Sets the raw POST data of the HTTP POST request. If required, this can be used instead of the <see cref="M:BytecodeApi.IO.Http.HttpPostRequest.AddPostValue(System.String,System.String)" /> method. Both methods cannot be used in the same request.
            </summary>
            <param name="data">A <see cref="T:System.String" /> with the raw POST data. This string is encoded using the <see cref="P:System.Text.Encoding.UTF8" /> encoding.</param>
            <returns>
            A reference to this instance after the operation has completed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpPostRequest.SetPostData(System.Byte[])">
            <summary>
            Sets the raw POST data of the HTTP POST request. If required, this can be used instead of the <see cref="M:BytecodeApi.IO.Http.HttpPostRequest.AddPostValue(System.String,System.String)" /> method. Both methods cannot be used in the same request.
            </summary>
            <param name="data">A <see cref="T:System.Byte" />[] with the raw POST data.</param>
            <returns>
            A reference to this instance after the operation has completed.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Http.HttpGetRequest">
            <summary>
            Represents a HTTP GET requests.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpGetRequest.AddQueryParameter(System.String,System.String)">
            <summary>
            Adds a query parameter with the specified name and value to the HTTP GET request.
            </summary>
            <param name="name">The name of the query parameter.</param>
            <param name="value">The value of the query parameter.</param>
            <returns>
            A reference to this instance after the operation has completed.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Http.HttpRequest">
            <summary>
            Represents the base class for HTTP requests. This is an abstract class.
            </summary>
        </member>
        <member name="E:BytecodeApi.IO.Http.HttpRequest.WebRequestCreated">
            <summary>
            Occurs when a <see cref="T:System.Net.HttpWebRequest" /> is created, prior to sending of the request. This can be used as a hook to modify the internal <see cref="T:System.Net.HttpWebRequest" /> object that is created with each HTTP request.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpRequest.Read(System.IO.Stream)">
            <summary>
            Sends the HTTP request and writes the response into <paramref name="stream" />. Throws a <see cref="T:BytecodeApi.IO.Http.HttpException" />, if the request failed.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream" /> to write the response into.</param>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpRequest.Read(System.IO.Stream,BytecodeApi.IO.TransferCallback)">
            <summary>
            Sends the HTTP request and writes the response into <paramref name="stream" />. Throws a <see cref="T:BytecodeApi.IO.Http.HttpException" />, if the request failed.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream" /> to write the response into.</param>
            <param name="callback">The method that is called periodically while binary data is transferred, or <see langword="null" />.</param>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpRequest.ReadString">
            <summary>
            Sends the HTTP request, reads the response and returns a <see cref="T:System.String" /> with the content. Throws a <see cref="T:BytecodeApi.IO.Http.HttpException" />, if the request failed.
            </summary>
            <returns>
            A <see cref="T:System.String" /> with the content of the HTTP request.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpRequest.ReadBytes">
            <summary>
            Sends the HTTP request, reads the response and returns a <see cref="T:System.Byte" />[] with the content. Throws a <see cref="T:BytecodeApi.IO.Http.HttpException" />, if the request failed.
            </summary>
            <returns>
            A <see cref="T:System.Byte" />[] with the content of the HTTP request.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpRequest.ReadBytes(BytecodeApi.IO.TransferCallback)">
            <summary>
            Sends the HTTP request, reads the response and returns a <see cref="T:System.Byte" />[] with the content. Throws a <see cref="T:BytecodeApi.IO.Http.HttpException" />, if the request failed.
            </summary>
            <param name="callback">The method that is called periodically while binary data is transferred, or <see langword="null" />.</param>
            <returns>
            A <see cref="T:System.Byte" />[] with the content of the HTTP request.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpRequest.ReadFile(System.String)">
            <summary>
            Sends the HTTP request and writes the response into a file. Throws a <see cref="T:BytecodeApi.IO.Http.HttpException" />, if the request failed.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which the response is written to.</param>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpRequest.ReadFile(System.String,BytecodeApi.IO.TransferCallback)">
            <summary>
            Sends the HTTP request and writes the response into a file. Throws a <see cref="T:BytecodeApi.IO.Http.HttpException" />, if the request failed.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which the response is written to.</param>
            <param name="callback">The method that is called periodically while binary data is transferred, or <see langword="null" />.</param>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpRequest.OnWebRequestCreated(System.Net.HttpWebRequest)">
            <summary>
            Raises the <see cref="E:BytecodeApi.IO.Http.HttpRequest.WebRequestCreated" /> event.
            </summary>
            <param name="request">The internal <see cref="T:System.Net.HttpWebRequest" /> object that is temporarily created with each HTTP request.</param>
        </member>
        <member name="T:BytecodeApi.IO.Http.HttpClient">
            <summary>
            Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URL.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Http.HttpClient.Default">
            <summary>
            Represents a singleton <see cref="T:BytecodeApi.IO.Http.HttpClient" /> object. This field is read-only.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Http.HttpClient.DefaultWithCookies">
            <summary>
            Represents a singleton <see cref="T:BytecodeApi.IO.Http.HttpClient" /> object with a cookie container. This field is read-only.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpClient.UseCookies">
            <summary>
            Gets or sets value indicating whether to use a <see cref="T:System.Net.CookieContainer" />. Changing the value will not clear existing cookies, until <see cref="M:BytecodeApi.IO.Http.HttpClient.ClearCookies" /> is invoked.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpClient.UserAgent">
            <summary>
            Gets or sets the user agent that is used for HTTP requests.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpClient.AllowAutoRedirect">
            <summary>
            Gets or sets a value that indicates whether the request should follow redirection responses.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpClient.CookieContainer">
            <summary>
            Gets the collection of cookies that is used for HTTP requests. If <see cref="P:BytecodeApi.IO.Http.HttpClient.UseCookies" /> is set to <see langword="true" />, <see cref="P:BytecodeApi.IO.Http.HttpClient.CookieContainer" /> is used; otherwise, it is ignored, however cookies will not be deleted.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Http.HttpClient" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpClient.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Http.HttpClient" /> class.
            </summary>
            <param name="useCookies"><see langword="true" /> to use cookies; otherwise, <see langword="false" />.</param>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpClient.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Http.HttpClient" /> class.
            </summary>
            <param name="useCookies"><see langword="true" /> to use cookies; otherwise, <see langword="false" />.</param>
            <param name="userAgent">The user agent that is used for HTTP requests.</param>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpClient.CreateGetRequest(System.String)">
            <summary>
            Creates a new HTTP GET request using the specified URL.
            </summary>
            <param name="url">The URL the request is sent to.</param>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Http.HttpGetRequest" /> object that represents the HTTP GET request.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpClient.CreatePostRequest(System.String)">
            <summary>
            Creates a new HTTP POST request using the specified URL.
            </summary>
            <param name="url">The URL the request is sent to.</param>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Http.HttpPostRequest" /> object that represents the HTTP POST request.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpClient.CreateMultipartRequest(System.String)">
            <summary>
            Creates a new HTTP multipart request using the specified URL.
            </summary>
            <param name="url">The URL the request is sent to.</param>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Http.HttpMultipartRequest" /> object that represents the HTTP multipart request.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpClient.CreateHeadRequest(System.String)">
            <summary>
            Creates a new HTTP HEAD request using the specified URL.
            </summary>
            <param name="url">The URL the request is sent to.</param>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Http.HttpHeadRequest" /> object that represents the HTTP HEAD request.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpClient.ClearCookies">
            <summary>
            Removes all cookies from the underlying <see cref="T:System.Net.CookieContainer" />.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.Http.HttpResponseHeaders">
            <summary>
            Represents the headers of a HTTP request.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.SupportsHeaders">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value that indicates whether headers are supported.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.IsFromCache">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value that indicates whether the response was obtained from the cache.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.IsMutuallyAuthenticated">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value that indicates whether mutual authentication occurred.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.ResponseUri">
            <summary>
            Gets the <see cref="T:System.Uri" /> of the response.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.ProtocolVersion">
            <summary>
            Gets the version of the HTTP protocol that is used in the response.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.StatusDescription">
            <summary>
            Gets the status description returned with the response.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.StatusCode">
            <summary>
            Gets the status of the response.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.ContentType">
            <summary>
            Gets the content type of the response.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.ContentLength">
            <summary>
            Gets content length in bytes of the response.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.LastModified">
            <summary>
            Gets the last <see cref="T:System.DateTime" /> that the contents of the response were modified.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.Server">
            <summary>
            Gets the name of the server that sent the response.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.CharacterSet">
            <summary>
            Gets the character set of the response.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.ContentEncoding">
            <summary>
            Gets the method that is used to encode the body of the response.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpResponseHeaders.Headers">
            <summary>
            Gets a collection of headers of the response.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.Http.HttpException">
            <summary>
            The exception that is thrown when a <see cref="T:BytecodeApi.IO.Http.HttpRequest" /> instance fails to process a request.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpException.Status">
            <summary>
            Gets the status of the response.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpException.Response">
            <summary>
            Gets the response that the remote host returned.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Http.HttpException.ResponseBody">
            <summary>
            Gets the response body, typically an HTML error page.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Http.HttpException.#ctor(System.Net.WebExceptionStatus,System.Net.WebResponse,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Http.HttpException" /> class.
            </summary>
            <param name="status">The status of the response.</param>
            <param name="response">The response that the remote host returned.</param>
            <param name="responseBody">The response body.</param>
            <param name="innerException">A nested <see cref="T:System.Exception" />.</param>
        </member>
        <member name="T:BytecodeApi.IO.IconHelper">
            <summary>
            Helper class for <see cref="T:System.Drawing.Icon" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.IconHelper.Split(System.Drawing.Icon)">
            <summary>
            Splits an <see cref="T:System.Drawing.Icon" /> and returns an array with a new <see cref="T:System.Drawing.Icon" /> for each frame.
            </summary>
            <param name="icon">The original <see cref="T:System.Drawing.Icon" /> to split.</param>
            <returns>
            An array with a new <see cref="T:System.Drawing.Icon" /> for each frame.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.IconHelper.Merge(System.Drawing.Image[])">
            <summary>
            Merges multiple <see cref="T:System.Drawing.Image" /> frames into a new <see cref="T:System.Drawing.Icon" />.
            </summary>
            <param name="images">The <see cref="T:System.Drawing.Image" /> objects to be merged into an <see cref="T:System.Drawing.Icon" />.</param>
            <returns>
            A new <see cref="T:System.Drawing.Icon" /> with the frames from the <paramref name="images" /> parameter.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Interop.GlobalAtom">
            <summary>
            Represents an entry in the global atom table.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.GlobalAtom.Value">
            <summary>
            Represents the atom as a 16-bit integer value.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.GlobalAtom.Name">
            <summary>
            Gets a <see cref="T:System.String" /> with the name of the atom.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Interop.GlobalAtom.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Interop.GlobalAtom" /> structure with a the specified atom value.
            </summary>
            <param name="value">A <see cref="T:System.UInt16" /> representing the atom value.</param>
        </member>
        <member name="M:BytecodeApi.IO.Interop.GlobalAtom.Find(System.String)">
            <summary>
            Finds a global atom by its name. If not found, a new <see cref="T:BytecodeApi.IO.Interop.GlobalAtom" /> value is returned with a value of 0.
            </summary>
            <param name="name">A <see cref="T:System.String" /> with the case insensitive name of the atom to be searched.</param>
            <returns>
            The <see cref="T:BytecodeApi.IO.Interop.GlobalAtom" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.GlobalAtom.Add(System.String)">
            <summary>
            Creates a new global atom using the specified name.
            </summary>
            <param name="name">A <see cref="T:System.String" /> with the name for the new atom.</param>
            <returns>
            The <see cref="T:BytecodeApi.IO.Interop.GlobalAtom" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.GlobalAtom.Delete">
            <summary>
            Decrements the reference count of this atom. If the atom's reference count is reduced to zero, it is removed from the global atom table.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.Interop.CommandPrompt">
            <summary>
            Represents a programmatic interface to a cmd.exe <see cref="T:System.Diagnostics.Process" /> to read from and write to.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.CommandPrompt.ProcessId">
            <summary>
            Gets the ProcessID of the underlying cmd.exe <see cref="T:System.Diagnostics.Process" />, or 0 if it is not running.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.CommandPrompt.Running">
            <summary>
            Gets a value indicating whether the underlying cmd.exe <see cref="T:System.Diagnostics.Process" /> is running.
            </summary>
        </member>
        <member name="E:BytecodeApi.IO.Interop.CommandPrompt.MessageReceived">
            <summary>
            Occurs when a message is received from the standard error stream or the standard output stream.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Interop.CommandPrompt.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:BytecodeApi.IO.Interop.CommandPrompt" /> class and kills the underlying cmd.exe <see cref="T:System.Diagnostics.Process" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Interop.CommandPrompt.Start">
            <summary>
            Starts a new cmd.exe <see cref="T:System.Diagnostics.Process" /> to read from and write to.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Interop.CommandPrompt.Write(System.String)">
            <summary>
            Writes a <see cref="T:System.String" /> to the standard input stream.
            </summary>
            <param name="value">The <see cref="T:System.String" /> to write to the stream. If <paramref name="value" /> is <see langword="null" />, nothing is written.</param>
        </member>
        <member name="M:BytecodeApi.IO.Interop.CommandPrompt.WriteLine(System.String)">
            <summary>
            Writes a <see cref="T:System.String" /> followed by a line terminator to the standard input stream.
            </summary>
            <param name="value">The <see cref="T:System.String" /> to write to the stream. If <paramref name="value" /> is <see langword="null" />, only the line terminator is written.</param>
        </member>
        <member name="M:BytecodeApi.IO.Interop.CommandPrompt.OnMessageReceived(BytecodeApi.IO.Interop.CommandPromptEventArgs)">
            <summary>
            Raises the <see cref="E:BytecodeApi.IO.Interop.CommandPrompt.MessageReceived" /> event.
            </summary>
            <param name="e">The event data for the <see cref="E:BytecodeApi.IO.Interop.CommandPrompt.MessageReceived" /> event.</param>
        </member>
        <member name="T:BytecodeApi.IO.Interop.Atom">
            <summary>
            Represents an entry in the local atom table.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.Atom.Value">
            <summary>
            Represents the atom as a 16-bit integer value.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.Atom.Name">
            <summary>
            Gets a <see cref="T:System.String" /> with the name of the atom.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Interop.Atom.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Interop.Atom" /> structure with a the specified atom value.
            </summary>
            <param name="value">A <see cref="T:System.UInt16" /> representing the atom value.</param>
        </member>
        <member name="M:BytecodeApi.IO.Interop.Atom.Find(System.String)">
            <summary>
            Finds an atom by its name. If not found, a new <see cref="T:BytecodeApi.IO.Interop.Atom" /> value is returned with a value of 0.
            </summary>
            <param name="name">A <see cref="T:System.String" /> with the case insensitive name of the atom to be searched.</param>
            <returns>
            The <see cref="T:BytecodeApi.IO.Interop.Atom" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.Atom.Add(System.String)">
            <summary>
            Creates a new atom using the specified name.
            </summary>
            <param name="name">A <see cref="T:System.String" /> with the name for the new atom.</param>
            <returns>
            The <see cref="T:BytecodeApi.IO.Interop.Atom" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.Atom.Delete">
            <summary>
            Decrements the reference count of this atom. If the atom's reference count is reduced to zero, it is removed from the atom table.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.Interop.IAtom">
            <summary>
            Defines base properties for atom table entries.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.IAtom.Value">
            <summary>
            Represents the atom as a 16-bit integer value.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.IAtom.Name">
            <summary>
            Gets a <see cref="T:System.String" /> with the name of the atom.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.Interop.CommandPromptEventArgs">
            <summary>
            Provides data for <see cref="T:BytecodeApi.IO.Interop.CommandPrompt" /> events.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.CommandPromptEventArgs.IsError">
            <summary>
            Gets a value indicating whether the message was read from the standard error stream or the standard output stream.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.CommandPromptEventArgs.Message">
            <summary>
            Gets a <see cref="T:System.String" /> with the message that was read from the output stream.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Interop.CommandPromptEventArgs.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Interop.CommandPromptEventArgs" /> class using the specified message.
            </summary>
            <param name="isError"><see langword="true" />, if the message was read from the standard error stream; <see langword="false" />, if it was read from the standard output stream.</param>
            <param name="message">A <see cref="T:System.String" /> with the message that was read from the output stream.</param>
        </member>
        <member name="T:BytecodeApi.IO.Interop.DynamicLibraryFunction">
            <summary>
            Represents the function of a native DLL file that does not return a value.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.DynamicLibraryFunction.Library">
            <summary>
            Gets the <see cref="T:BytecodeApi.IO.Interop.DynamicLibrary" /> that was used to create this <see cref="T:BytecodeApi.IO.Interop.DynamicLibraryFunction" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.DynamicLibraryFunction.Name">
            <summary>
            Gets the name of the name of the entry point in the DLL.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Interop.DynamicLibraryFunction.Call(System.Object[])">
            <summary>
            Calls the function with the specified parameters.
            </summary>
            <param name="parameters">A collection of parameters. The number of parameters must match the number of parameter types upon creation.</param>
        </member>
        <member name="M:BytecodeApi.IO.Interop.DynamicLibraryFunction.ToString">
            <summary>
            Returns the name of this <see cref="T:BytecodeApi.IO.Interop.DynamicLibraryFunction" />.
            </summary>
            <returns>
            The name of this <see cref="T:BytecodeApi.IO.Interop.DynamicLibraryFunction" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Interop.DynamicLibraryFunction`1">
            <summary>
            Represents the function of a native DLL file that returns a value of the specified type.
            </summary>
            <typeparam name="T">The function's return type.</typeparam>
        </member>
        <member name="P:BytecodeApi.IO.Interop.DynamicLibraryFunction`1.Library">
            <summary>
            Gets the <see cref="T:BytecodeApi.IO.Interop.DynamicLibrary" /> that was used to create this <see cref="T:BytecodeApi.IO.Interop.DynamicLibraryFunction`1" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.DynamicLibraryFunction`1.Name">
            <summary>
            Gets the name of the name of the entry point in the DLL.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Interop.DynamicLibraryFunction`1.Call(System.Object[])">
            <summary>
            Calls the function with the specified parameters and returns a value.
            </summary>
            <param name="parameters">A collection of parameters. The number of parameters must match the number of parameter types upon creation.</param>
            <returns>
            The value that the native function returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.DynamicLibraryFunction`1.ToString">
            <summary>
            Returns the name of this <see cref="T:BytecodeApi.IO.Interop.DynamicLibraryFunction`1" />.
            </summary>
            <returns>
            The name of this <see cref="T:BytecodeApi.IO.Interop.DynamicLibraryFunction`1" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Interop.DynamicLibrary">
            <summary>
            Represents a native DLL file with functions that can be dynamically generated and called.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Interop.DynamicLibrary.DllName">
            <summary>
            Gets the name of the DLL that is supplied in the constructor of <see cref="T:BytecodeApi.IO.Interop.DynamicLibrary" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Interop.DynamicLibrary.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Interop.DynamicLibrary" /> class.
            </summary>
            <param name="dllName">A <see cref="T:System.String" /> specifying the path of the DLL file to use.</param>
        </member>
        <member name="M:BytecodeApi.IO.Interop.DynamicLibrary.GetFunction(System.String,System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet,System.Type[])">
            <summary>
            Returns a new <see cref="T:BytecodeApi.IO.Interop.DynamicLibraryFunction" /> object that can be used to call the function. The function does not return a value.
            </summary>
            <param name="name">The name of the entry point in the DLL.</param>
            <param name="callingConvention">The function's calling convention.</param>
            <param name="charSet">The method's native character set.</param>
            <param name="parameterTypes">The types of the method's parameters.</param>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Interop.DynamicLibraryFunction" /> object that can be used to call the function.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.DynamicLibrary.GetFunction``1(System.String,System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet,System.Type[])">
            <summary>
            Returns a new <see cref="T:BytecodeApi.IO.Interop.DynamicLibraryFunction`1" /> object that can be used to call the function. The function returns a value.
            </summary>
            <typeparam name="TReturn">The function's return type.</typeparam>
            <param name="name">The name of the entry point in the DLL.</param>
            <param name="callingConvention">The function's calling convention.</param>
            <param name="charSet">The method's native character set.</param>
            <param name="parameterTypes">The types of the method's parameters.</param>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Interop.DynamicLibraryFunction`1" /> object that can be used to call the function.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.DynamicLibrary.ToString">
            <summary>
            Returns the filename of the DLL of this <see cref="T:BytecodeApi.IO.Interop.DynamicLibrary" />.
            </summary>
            <returns>
            The filename of the DLL of this <see cref="T:BytecodeApi.IO.Interop.DynamicLibrary" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Interop.GlobalKeyboardHook">
            <summary>
            Provides support for global keystrokes capturing.
            </summary>
        </member>
        <member name="E:BytecodeApi.IO.Interop.GlobalKeyboardHook.KeyboardPressed">
            <summary>
            Occurs when a key is pressed. Keystrokes are captured globally using SetWindowsHookEx.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Interop.GlobalKeyboardHook.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Interop.GlobalKeyboardHook" /> class and starts capturing.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Interop.GlobalKeyboardHook.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:BytecodeApi.IO.Interop.GlobalKeyboardHook" /> class.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.Interop.OutlookDataObject">
            <summary>
            Implements the data transfer mechanism for Microsoft Outlook. This class is typically used in drag&amp;drop operations from Outlook into a UI application.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.#ctor(System.Windows.IDataObject)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Interop.OutlookDataObject" /> class and adds the specified object to it.
            </summary>
            <param name="dataObject">The data to store.</param>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.GetData(System.Type)">
            <summary>
            Returns the data associated with the specified class type format.
            </summary>
            <param name="format">A <see cref="T:System.Type" /> representing the format of the data to retrieve.</param>
            <returns>
            The data associated with the specified format, or <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.GetData(System.String)">
            <summary>
            Returns the data associated with the specified data format.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies the format of the data to retrieve.</param>
            <returns>
            The data associated with the specified format, or <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.GetData(System.String,System.Boolean)">
            <summary>
            Returns the data associated with the specified data format, using an automated conversion parameter to determine whether to convert the data to the format.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies the format of the data to retrieve.</param>
            <param name="autoConvert"><see langword="true" /> to the convert data to the specified format; otherwise, <see langword="false" />.</param>
            <returns>
            The data associated with the specified format, or <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.GetData(System.String,System.Int32)">
            <summary>
            Returns the data associated with the specified data format at the specified index.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies the format of the data to retrieve.</param>
            <param name="index">A <see cref="T:System.Int32" /> value specifying the index at which to retrieve the data object from.</param>
            <returns>
            The data associated with the specified format from at the specified index, or <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.GetDataPresent(System.Type)">
            <summary>
            Checks to see whether the data is available in, or can be converted to, a specified format. The data format is specified by a <see cref="T:System.Type" /> object.
            </summary>
            <param name="format">A <see cref="T:System.Type" /> that specifies what format to check for.</param>
            <returns>
            <see langword="true" />, if the data is in, or can be converted to, the specified format;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.GetDataPresent(System.String)">
            <summary>
            Checks to see whether the data is available in, or can be converted to, a specified format; the data format is specified by a <see cref="T:System.String" />.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies what format to check for.</param>
            <returns>
            <see langword="true" />, if the data is in, or can be converted to, the specified format;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.GetDataPresent(System.String,System.Boolean)">
            <summary>
            Checks to see whether the data is available in, or can be converted to, a specified format. A <see cref="T:System.Boolean" /> flag indicates whether to check if the data can be converted to the specified format, if it is not available in that format.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies what format to check for.</param>
            <param name="autoConvert"><see langword="false" /> to only check for the specified format; <see langword="true" /> to also check whether or not data stored in this data object can be converted to the specified format.</param>
            <returns>
            <see langword="true" />, if the data is in, or can be converted to, the specified format;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.GetFormats">
            <summary>
            Returns a list of all formats that the data in this data object is stored in, or can be converted to.
            </summary>
            <returns>
            A <see cref="T:System.String" />[], with each <see cref="T:System.String" /> specifying the name of a format supported by this data object.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.GetFormats(System.Boolean)">
            <summary>
            Returns a list of all formats that the data in this data object is stored in. A <see cref="T:System.Boolean" /> flag indicates whether or not to also include formats that the data can be automatically converted to.
            </summary>
            <param name="autoConvert"><see langword="true" /> to retrieve all formats that data stored in this data object is stored in, or can be converted to; <see langword="false" /> to retrieve only formats that data stored in this data object is stored in (excluding formats that the data is not stored in, but can be automatically converted to).</param>
            <returns>
            A <see cref="T:System.String" />[], with each <see cref="T:System.String" /> specifying the name of a format supported by this data object.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.SetData(System.Object)">
            <summary>
            Stores the specified data in this data object, automatically converting the data format from the source object type.
            </summary>
            <param name="data">The data to store in this data object.</param>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.SetData(System.Type,System.Object)">
            <summary>
            Stores the specified data in this data object, along with one or more specified data formats. The data format is specified by a <see cref="T:System.Type" /> class.
            </summary>
            <param name="format">A <see cref="T:System.Type" /> that specifies what format to store the data in.</param>
            <param name="data">The data to store in this data object.</param>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.SetData(System.String,System.Object)">
            <summary>
            Stores the specified data in this data object, along with one or more specified data formats. The data format is specified by a <see cref="T:System.String" />.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies what format to store the data in.</param>
            <param name="data">The data to store in this data object.</param>
        </member>
        <member name="M:BytecodeApi.IO.Interop.OutlookDataObject.SetData(System.String,System.Object,System.Boolean)">
            <summary>
            Stores the specified data in this data object, along with one or more specified data formats. This overload includes a <see cref="T:System.Boolean" /> flag to indicate whether the data may be converted to another format on retrieval.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies what format to store the data in.</param>
            <param name="data">The data to store in this data object.</param>
            <param name="autoConvert"><see langword="true" /> to the convert data to the specified format; otherwise, <see langword="false" />.</param>
        </member>
        <member name="T:BytecodeApi.IO.ZipCompression">
            <summary>
            Class to create and decompress ZIP archive files from <see cref="T:BytecodeApi.Data.Blob" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.ZipCompression.Compress(BytecodeApi.Data.Blob)">
            <summary>
            Creates a ZIP archive from a single <see cref="T:BytecodeApi.Data.Blob" /> object and returns a <see cref="T:System.Byte" />[] representing the compressed archive.
            </summary>
            <param name="blob">The <see cref="T:BytecodeApi.Data.Blob" /> object to create the ZIP archive from.</param>
            <returns>
            A <see cref="T:System.Byte" />[] representing the compressed ZIP archive with the specified <see cref="T:BytecodeApi.Data.Blob" /> object.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ZipCompression.Compress(BytecodeApi.Data.Blob,System.IO.Stream)">
            <summary>
            Creates a ZIP archive from a single <see cref="T:BytecodeApi.Data.Blob" /> object and writes the compressed archive to <paramref name="stream" />.
            </summary>
            <param name="blob">The <see cref="T:BytecodeApi.Data.Blob" /> object to create the ZIP archive from.</param>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to write the compressed archive to.</param>
        </member>
        <member name="M:BytecodeApi.IO.ZipCompression.Compress(BytecodeApi.Data.Blob,System.IO.Stream,System.Boolean)">
            <summary>
            Creates a ZIP archive from a single <see cref="T:BytecodeApi.Data.Blob" /> object and writes the compressed archive to <paramref name="stream" />.
            </summary>
            <param name="blob">The <see cref="T:BytecodeApi.Data.Blob" /> object to create the ZIP archive from.</param>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to write the compressed archive to.</param>
            <param name="leaveOpen">A <see cref="T:System.Boolean" /> value indicating whether to leave <paramref name="stream" /> open.</param>
        </member>
        <member name="M:BytecodeApi.IO.ZipCompression.Compress(BytecodeApi.Data.BlobCollection)">
            <summary>
            Creates a ZIP archive from the specified collection of <see cref="T:BytecodeApi.Data.Blob" /> objects and returns a <see cref="T:System.Byte" />[] representing the compressed archive.
            </summary>
            <param name="blobs">A collection of <see cref="T:BytecodeApi.Data.Blob" /> objects to create the ZIP archive from.</param>
            <returns>
            A <see cref="T:System.Byte" />[] representing the compressed ZIP archive with all <see cref="T:BytecodeApi.Data.Blob" /> objects from the specified collection.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ZipCompression.Compress(BytecodeApi.Data.BlobCollection,System.IO.Stream)">
            <summary>
            Creates a ZIP archive from the specified collection of <see cref="T:BytecodeApi.Data.Blob" /> objects and writes the compressed archive to <paramref name="stream" />.
            </summary>
            <param name="blobs">A collection of <see cref="T:BytecodeApi.Data.Blob" /> objects to create the ZIP archive from.</param>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to write the compressed archive to.</param>
        </member>
        <member name="M:BytecodeApi.IO.ZipCompression.Compress(BytecodeApi.Data.BlobCollection,System.IO.Stream,System.Boolean)">
            <summary>
            Creates a ZIP archive from the specified collection of <see cref="T:BytecodeApi.Data.Blob" /> objects and writes the compressed archive to <paramref name="stream" />.
            </summary>
            <param name="blobs">A collection of <see cref="T:BytecodeApi.Data.Blob" /> objects to create the ZIP archive from.</param>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to write the compressed archive to.</param>
            <param name="leaveOpen">A <see cref="T:System.Boolean" /> value indicating whether to leave <paramref name="stream" /> open.</param>
        </member>
        <member name="M:BytecodeApi.IO.ZipCompression.Compress(BytecodeApi.Data.BlobTree)">
            <summary>
            Creates a ZIP archive from the specified <see cref="T:BytecodeApi.Data.BlobTree" /> and returns a <see cref="T:System.Byte" />[] representing the compressed archive.
            </summary>
            <param name="blobs">A tree of <see cref="T:BytecodeApi.Data.Blob" /> objects to create the ZIP archive from.</param>
            <returns>
            A <see cref="T:System.Byte" />[] representing the compressed ZIP archive with all <see cref="T:BytecodeApi.Data.Blob" /> objects from the specified tree.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ZipCompression.Compress(BytecodeApi.Data.BlobTree,System.IO.Stream)">
            <summary>
            Creates a ZIP archive from the specified <see cref="T:BytecodeApi.Data.BlobTree" /> and writes the compressed archive to <paramref name="stream" />.
            </summary>
            <param name="blobs">A tree of <see cref="T:BytecodeApi.Data.Blob" /> objects to create the ZIP archive from.</param>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to write the compressed archive to.</param>
        </member>
        <member name="M:BytecodeApi.IO.ZipCompression.Compress(BytecodeApi.Data.BlobTree,System.IO.Stream,System.Boolean)">
            <summary>
            Creates a ZIP archive from the specified <see cref="T:BytecodeApi.Data.BlobTree" /> and writes the compressed archive to <paramref name="stream" />.
            </summary>
            <param name="blobs">A tree of <see cref="T:BytecodeApi.Data.Blob" /> objects to create the ZIP archive from.</param>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to write the compressed archive to.</param>
            <param name="leaveOpen">A <see cref="T:System.Boolean" /> value indicating whether to leave <paramref name="stream" /> open.</param>
        </member>
        <member name="M:BytecodeApi.IO.ZipCompression.Decompress(System.String)">
            <summary>
            Creates a <see cref="T:BytecodeApi.Data.BlobTree" /> from the ZIP archive read from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a ZIP file.</param>
            <returns>
            The <see cref="T:BytecodeApi.Data.BlobTree" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ZipCompression.Decompress(System.Byte[])">
            <summary>
            Creates a <see cref="T:BytecodeApi.Data.BlobTree" /> from the ZIP archive in the specified <see cref="T:System.Byte" />[].
            </summary>
            <param name="file">A <see cref="T:System.Byte" />[] that represents a ZIP archive.</param>
            <returns>
            The <see cref="T:BytecodeApi.Data.BlobTree" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ZipCompression.Decompress(System.IO.Stream)">
            <summary>
            Creates a <see cref="T:BytecodeApi.Data.BlobTree" /> from the ZIP archive read from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the ZIP archive from.</param>
            <returns>
            The <see cref="T:BytecodeApi.Data.BlobTree" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ZipCompression.Decompress(System.IO.Stream,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.Data.BlobTree" /> from the ZIP archive read from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the ZIP archive from.</param>
            <param name="leaveOpen">A <see cref="T:System.Boolean" /> value indicating whether to leave <paramref name="stream" /> open.</param>
            <returns>
            The <see cref="T:BytecodeApi.Data.BlobTree" /> this method creates.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.BinaryStream">
            <summary>
            Reads and writes primitive data types as binary values in a specific encoding. Reading and writing methods are supported based on the capabilities of the underlying <see cref="T:System.IO.Stream" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.BinaryStream.BaseStream">
            <summary>
            Returns the underlying <see cref="T:System.IO.Stream" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.BinaryStream.BytesRead">
            <summary>
            Gets the total amount of bytes read from the underlying <see cref="T:System.IO.Stream" /> of this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.BinaryStream.BytesWritten">
            <summary>
            Gets the total amount of bytes written to the underlying <see cref="T:System.IO.Stream" /> of this instance.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.BinaryStream" /> class using the <see cref="P:System.Text.Encoding.UTF8" /> encoding.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to use for reading and writing. This stream can be readable, writable, or both.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.BinaryStream" /> class using the specified character encoding.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to use for reading and writing. This stream can be readable, writable, or both.</param>
            <param name="encoding">The encoding that is used for read and write operations on the base stream.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.BinaryStream" /> class using the specified character encoding.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to use for reading and writing. This stream can be readable, writable, or both.</param>
            <param name="encoding">The encoding that is used for read and write operations on the base stream.</param>
            <param name="leaveOpen">A <see cref="T:System.Boolean" /> value indicating whether to leave <paramref name="stream" /> open.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Dispose">
            <summary>
            Releases all resources used by the underlying instance of the <see cref="T:System.IO.Stream" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the specified number of bytes from the stream, starting from a specified point in the <see cref="T:System.Byte" />[].
            </summary>
            <param name="buffer">The buffer to read data into.</param>
            <param name="index">The starting point in the buffer at which to begin reading into the buffer.</param>
            <param name="count">The number of bytes to read.</param>
            <returns>
            The number of bytes read into <paramref name="buffer" />. This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads the specified number of characters from the stream, starting from a specified point in the <see cref="T:System.Char" />[].
            </summary>
            <param name="buffer">The buffer to read data into.</param>
            <param name="index">The starting point in the buffer at which to begin reading into the buffer.</param>
            <param name="count">The number of characters to read.</param>
            <returns>
            The number of characters read into <paramref name="buffer" />. This might be less than the number of characters requested if that many characters are not available, or it might be zero if the end of the stream is reached.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadBoolean">
            <summary>
            Reads a <see cref="T:System.Boolean" /> value from underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            <see langword="true" />, if the byte that has been read is nonzero;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadByte">
            <summary>
            Reads a <see cref="T:System.Byte" /> value from underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Byte" /> read from the underlying <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadSByte">
            <summary>
            Reads a <see cref="T:System.SByte" /> value from underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            The next <see cref="T:System.SByte" /> read from the underlying <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadChar">
            <summary>
            Reads a <see cref="T:System.Char" /> value from underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Char" /> read from the underlying <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadDecimal">
            <summary>
            Reads a <see cref="T:System.Decimal" /> value from underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Decimal" /> read from the underlying <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadDouble">
            <summary>
            Reads a <see cref="T:System.Double" /> value from underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Double" /> read from the underlying <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadSingle">
            <summary>
            Reads a <see cref="T:System.Single" /> value from underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Single" /> read from the underlying <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadInt32">
            <summary>
            Reads a <see cref="T:System.Int32" /> value from underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Int32" /> read from the underlying <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadUInt32">
            <summary>
            Reads a <see cref="T:System.UInt32" /> value from underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            The next <see cref="T:System.UInt32" /> read from the underlying <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadInt64">
            <summary>
            Reads a <see cref="T:System.Int64" /> value from underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Int64" /> read from the underlying <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadUInt64">
            <summary>
            Reads a <see cref="T:System.UInt64" /> value from underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            The next <see cref="T:System.UInt64" /> read from the underlying <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadInt16">
            <summary>
            Reads a <see cref="T:System.Int16" /> value from underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Int16" /> read from the underlying <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadUInt16">
            <summary>
            Reads a <see cref="T:System.UInt16" /> value from underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            The next <see cref="T:System.UInt16" /> read from the underlying <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadString">
            <summary>
            Reads a <see cref="T:System.String" /> value from underlying <see cref="T:System.IO.Stream" />. The <see cref="T:System.String" /> is prefixed with the length, encoded as an integer seven bits at a time.
            </summary>
            <returns>
            The next <see cref="T:System.String" /> read from the underlying <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadBytes(System.Int32)">
            <summary>
            Reads the specified number of bytes from the underlying <see cref="T:System.IO.Stream" /> into a <see cref="T:System.Byte" />[].
            </summary>
            <param name="count">A <see cref="T:System.Int32" /> value specifying the number of bytes to read.</param>
            <returns>
            The <see cref="T:System.Byte" />[] read from the underlying <see cref="T:System.IO.Stream" />. This might be less than the number of bytes requested if the end of the stream is reached.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadChars(System.Int32)">
            <summary>
            Reads the specified number of characters from the underlying <see cref="T:System.IO.Stream" /> into a <see cref="T:System.Char" />[].
            </summary>
            <param name="count">A <see cref="T:System.Int32" /> value specifying the number of characters to read.</param>
            <returns>
            The <see cref="T:System.Char" />[] read from the underlying <see cref="T:System.IO.Stream" />. This might be less than the number of characters requested if the end of the stream is reached.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.ReadStructure``1">
            <summary>
            Reads a structure of the specified type from the stream.
            </summary>
            <typeparam name="T">The type of the structure to read.</typeparam>
            <returns>
            A new structure of the specified type that was read from the stream.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a region of a <see cref="T:System.Byte" />[] to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="buffer">The <see cref="T:System.Byte" />[] containing the data to write.</param>
            <param name="index">The starting point in the buffer at which to begin writing.</param>
            <param name="count">The number of bytes to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a region of a <see cref="T:System.Char" />[] to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="buffer">The <see cref="T:System.Char" />[] containing the data to write.</param>
            <param name="index">The starting point in the buffer at which to begin writing.</param>
            <param name="count">The number of characters to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.Boolean)">
            <summary>
            Writes a one-byte <see cref="T:System.Boolean" /> value to the underlying <see cref="T:System.IO.Stream" />, with 0 representing <see langword="false" /> and 1 representing <see langword="true" />.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" /> value to write (0 or 1).</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte" /> value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte" /> value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char" /> value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="value">The non-surrogate <see cref="T:System.Char" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal" /> value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double" /> value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single" /> value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32" /> value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32" /> value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64" /> value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64" /> value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16" /> value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16" /> value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.String)">
            <summary>
            Writes a length-prefixed <see cref="T:System.String" /> value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="value">The <see cref="T:System.String" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.Byte[])">
            <summary>
            Writes a <see cref="T:System.Byte" />[] value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="buffer">The <see cref="T:System.Byte" />[] containing the data to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Write(System.Char[])">
            <summary>
            Writes a <see cref="T:System.Char" />[] value to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="chars">The <see cref="T:System.Char" />[] containing the data to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.WriteStructure``1(``0)">
            <summary>
            Writes a structure of the specified type to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <typeparam name="T">The type of the structure to write.</typeparam>
            <param name="structure">The structure to write.</param>
        </member>
        <member name="M:BytecodeApi.IO.BinaryStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying <see cref="T:System.IO.Stream" />.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.ProcessEx">
            <summary>
            Provides <see langword="static" /> methods that extend the <see cref="T:System.Diagnostics.Process" /> class.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.ProcessEx.HasConsole">
            <summary>
            Gets a value indicating whether the current <see cref="T:System.Diagnostics.Process" /> has a console window.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.GetSessionProcesses">
            <summary>
            Creates a new <see cref="T:System.Diagnostics.Process" /> component for each process resource with the SessionId of the current <see cref="T:System.Diagnostics.Process" /> on the local computer.
            </summary>
            <returns>
            An <see cref="T:System.Diagnostics.Process" />[] that represents all the process resources with the SessionId of the current <see cref="T:System.Diagnostics.Process" /> running on the local computer.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.GetSessionProcessesByName(System.String)">
            <summary>
            Creates an array of new <see cref="T:System.Diagnostics.Process" /> components and associates them with all the process resources on the local computer that share the specified process name and the SessionId of the current <see cref="T:System.Diagnostics.Process" />.
            </summary>
            <param name="processName">A <see cref="T:System.String" /> specifying the friendly name of the process.</param>
            <returns>
            A <see cref="T:System.Diagnostics.Process" />[] that represents the process resources running the specified application or file with the SessionId of the current <see cref="T:System.Diagnostics.Process" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.StartWithIntegrity(System.String,BytecodeApi.IO.ProcessIntegrityLevel)">
            <summary>
            Creates a <see cref="T:System.Diagnostics.Process" /> with the specified commandline and the specified <see cref="T:BytecodeApi.IO.ProcessIntegrityLevel" />. If process creation fails, a <see cref="T:System.ComponentModel.Win32Exception" /> is thrown. This is typically used to create processes with lower integrity.
            </summary>
            <param name="commandLine">A <see cref="T:System.String" /> specifying the commandline to create the <see cref="T:System.Diagnostics.Process" /> with.</param>
            <param name="integrityLevel">The <see cref="T:BytecodeApi.IO.ProcessIntegrityLevel" /> to create the <see cref="T:System.Diagnostics.Process" /> with. This is usually lower than the <see cref="T:BytecodeApi.IO.ProcessIntegrityLevel" /> of the current <see cref="T:System.Diagnostics.Process" />.</param>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.CreateConsole(System.Boolean,System.Boolean)">
            <summary>
            Creates a console window for the current <see cref="T:System.Diagnostics.Process" />.
            </summary>
            <param name="alwaysCreateNewConsole"><see langword="true" /> to always create a new console window; <see langword="false" /> to attach to an existing console window, if one already exists.</param>
            <param name="setInStream"><see langword="true" /> to set the input stream.</param>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.Execute(System.String)">
            <summary>
            Creates a <see cref="T:System.Diagnostics.Process" />, waits for the process to exit and returns its exit code.
            </summary>
            <param name="fileName">The name of an application file to run.</param>
            <returns>
            The exit code of the process, after it has exited.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.Execute(System.String,System.String)">
            <summary>
            Creates a <see cref="T:System.Diagnostics.Process" /> with commandline arguments, waits for the process to exit and returns its exit code.
            </summary>
            <param name="fileName">The name of an application file to run.</param>
            <param name="arguments">Command-line arguments to pass when starting the process.</param>
            <returns>
            The exit code of the process, after it has exited.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.Execute(System.String,System.String,System.Int32)">
            <summary>
            Creates a <see cref="T:System.Diagnostics.Process" /> with commandline arguments, waits for the process to exit and returns its exit code. If the process did not exit within the specified timeout period, <see langword="null" /> is returned.
            </summary>
            <param name="fileName">The name of an application file to run.</param>
            <param name="arguments">Command-line arguments to pass when starting the process.</param>
            <param name="timeout">The amount of time, in milliseconds, to wait for the process to exit.</param>
            <returns>
            The exit code of the process, if it has exited within the specified timeout period;
            and <see langword="null" />, if the process did not exit.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.ReadProcessOutput(System.String)">
            <summary>
            Creates a <see cref="T:System.Diagnostics.Process" />, reads the standard output stream and waits until the process has exited.
            </summary>
            <param name="fileName">The name of an application file to run.</param>
            <returns>
            The result <see cref="T:System.String" /> from the standard output stream of the process after it has exited.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.ReadProcessOutput(System.String,System.String)">
            <summary>
            Creates a <see cref="T:System.Diagnostics.Process" />, reads the standard output stream and waits until the process has exited.
            </summary>
            <param name="fileName">The name of an application file to run.</param>
            <param name="arguments">Command-line arguments to pass when starting the process.</param>
            <returns>
            The result <see cref="T:System.String" /> from the standard output stream of the process after it has exited.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.ReadProcessOutput(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="T:System.Diagnostics.Process" />, reads the standard output stream and waits until the process has exited.
            </summary>
            <param name="fileName">The name of an application file to run.</param>
            <param name="arguments">Command-line arguments to pass when starting the process.</param>
            <param name="inclueErrorStream"><see langword="true" /> to include the standard error stream; <see langword="false" /> to exclude it.</param>
            <returns>
            The result <see cref="T:System.String" /> from the standard output stream of the process after it has exited.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.ReadProcessOutput(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="T:System.Diagnostics.Process" />, reads the standard output stream and waits until the process has exited.
            </summary>
            <param name="fileName">The name of an application file to run.</param>
            <param name="arguments">Command-line arguments to pass when starting the process.</param>
            <param name="inclueErrorStream"><see langword="true" /> to include the standard error stream; <see langword="false" /> to exclude it.</param>
            <param name="hidden"><see langword="true" /> to hide the window of the process; <see langword="false" /> to show it.</param>
            <returns>
            The result <see cref="T:System.String" /> from the standard output stream of the process after it has exited.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.ExecuteDotNetAssembly(System.Byte[])">
            <summary>
            Executes a .NET executable from a <see cref="T:System.Byte" />[] by invoking the main entry point. The Main method must either have no parameters or one <see cref="T:System.String" />[] parameter. If it has a parameter, <see langword="new" /> <see cref="T:System.String" />[0] is passed.
            </summary>
            <param name="executable">A <see cref="T:System.Byte" />[] that represents a .NET executable file.</param>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.ExecuteDotNetAssembly(System.Byte[],System.String[])">
            <summary>
            Executes a .NET executable from a <see cref="T:System.Byte" />[] by invoking the main entry point. The Main method must either have no parameters or one <see cref="T:System.String" />[] parameter. If it has a parameter, <paramref name="args" /> is passed, otherwise <paramref name="args" /> is ignored.
            </summary>
            <param name="executable">A <see cref="T:System.Byte" />[] that represents a .NET executable file.</param>
            <param name="args">A <see cref="T:System.String" />[] representing the arguments that is passed to the main entry point, if the Main method has a <see cref="T:System.String" />[] parameter.</param>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.ExecuteDotNetAssembly(System.Byte[],System.String[],System.Boolean)">
            <summary>
            Executes a .NET executable from a <see cref="T:System.Byte" />[] by invoking the main entry point. The Main method must either have no parameters or one <see cref="T:System.String" />[] parameter. If it has a parameter, <paramref name="args" /> is passed, otherwise <paramref name="args" /> is ignored.
            </summary>
            <param name="executable">A <see cref="T:System.Byte" />[] that represents a .NET executable file.</param>
            <param name="args">A <see cref="T:System.String" />[] representing the arguments that is passed to the main entry point, if the Main method has a <see cref="T:System.String" />[] parameter.</param>
            <param name="thread"><see langword="true" /> to invoke the main entry point in a new thread.</param>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.DetectProcessAnalyser(BytecodeApi.IO.ProcessAnalyser)">
            <summary>
            Detects process analysers, such as sandboxes, virtual environments, or specific debuggers or profilers.
            </summary>
            <param name="processAnalyser">The <see cref="T:BytecodeApi.IO.ProcessAnalyser" /> to test.</param>
            <returns>
            <see langword="true" />, if the specified process analyser has been detected;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.ProcessEx.BlueScreen">
            <summary>
            If the current <see cref="T:System.Diagnostics.Process" /> is running with elevated privileges, a blue screen is triggered and the operating system is terminated; otherwise, an exception is thrown.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.SystemInfo.HostsFileEntry">
            <summary>
            Represents a hosts file entry from the Windows hosts file in %SYSTEMROOT%\drivers\etc\hosts.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.HostsFileEntry.IPAddress">
            <summary>
            Gets or sets the IP address of the hosts file entry.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.HostsFileEntry.HostName">
            <summary>
            Gets or sets the hostname of the hosts file entry.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.HostsFileEntry.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.SystemInfo.HostsFileEntry" /> struct with the specified IP address and hostame.
            </summary>
            <param name="ipAddress">A <see cref="T:System.String" /> specifying the IP address of the hosts file entry.</param>
            <param name="hostName">A <see cref="T:System.String" /> specifying the hostname of the hosts file entry.</param>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.HostsFileEntry.GetHostsFileEntries">
            <summary>
            Retrieves all entries from the Windows hosts file and returns a <see cref="T:BytecodeApi.IO.SystemInfo.HostsFileEntry" />[] containing the IP address and the hostnames. This includes invalid entries. The IP address and the DNS address are separated by the first whitespace character. Empty lines, lines with no whitespace characters and comments are ignored.
            </summary>
            <returns>
            A <see cref="T:BytecodeApi.IO.SystemInfo.HostsFileEntry" />[] with all entries form the Windows hosts file.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.SystemInfo.InstalledSoftwareInfo">
            <summary>
            Provides information about installed software on this computer.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.InstalledSoftwareInfo.Name">
            <summary>
            Gets the name of the software, or <see langword="null" />, if it cannot be retrieved.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.InstalledSoftwareInfo.Publisher">
            <summary>
            Gets the publisher of the software, or <see langword="null" />, if it cannot be retrieved.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.InstalledSoftwareInfo.Version">
            <summary>
            Gets the version of the software, or <see langword="null" />, if it cannot be retrieved.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.InstalledSoftwareInfo.InstallDate">
            <summary>
            Gets the install date of the software, or <see langword="null" />, if it cannot be retrieved.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.InstalledSoftwareInfo.InstallPath">
            <summary>
            Gets the install path of the software, or <see langword="null" />, if it cannot be retrieved.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.InstalledSoftwareInfo.GetInstalledSoftware">
            <summary>
            Gets a list of installed software on this computer.
            </summary>
            <returns>
            A new <see cref="T:BytecodeApi.IO.SystemInfo.InstalledSoftwareInfo" />[] with a list of installed software on this computer.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.InstalledSoftwareInfo.ToString">
            <summary>
            Returns the name of this <see cref="T:BytecodeApi.IO.SystemInfo.InstalledSoftwareInfo" />.
            </summary>
            <returns>
            The name of this <see cref="T:BytecodeApi.IO.SystemInfo.InstalledSoftwareInfo" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.SystemInfo.DeviceInfo">
            <summary>
            Represents device information, retrieved by <see cref="T:BytecodeApi.IO.SystemInfo.DeviceManager" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.DeviceInfo.Attributes">
            <summary>
            Gets the collection of attributes associated with this device.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.DeviceInfo.Name">
            <summary>
            Gets the name associated with this device.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.DeviceInfo.Description">
            <summary>
            Gets the description associated with this device.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.DeviceInfo.ToString">
            <summary>
            Returns the name of this <see cref="T:BytecodeApi.IO.SystemInfo.DeviceInfo" />.
            </summary>
            <returns>
            The name of this <see cref="T:BytecodeApi.IO.SystemInfo.DeviceInfo" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.SystemInfo.DeviceManager">
            <summary>
            Provides information for devices as shown in the Windows Device Manager.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.DeviceManager.DeviceTypes">
            <summary>
            Gets all retrieved <see cref="T:BytecodeApi.IO.SystemInfo.DeviceInfo" /> objects, categorized by device types.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.DeviceManager.GetDevices">
            <summary>
            Creates a new <see cref="T:BytecodeApi.IO.SystemInfo.DeviceManager" /> and retrieves all device info objects.
            </summary>
            <returns>
            The <see cref="T:BytecodeApi.IO.SystemInfo.DeviceManager" /> this method creates.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.SystemInfo.DeviceTypeInfo">
            <summary>
            Represents a device type, containing an array of <see cref="T:BytecodeApi.IO.SystemInfo.DeviceInfo" />, retrieved by <see cref="T:BytecodeApi.IO.SystemInfo.DeviceManager" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.DeviceTypeInfo.ClassGuid">
            <summary>
            Gets the class GUID of this device type.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.DeviceTypeInfo.ClassName">
            <summary>
            Gets the class name of this device type.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.DeviceTypeInfo.Name">
            <summary>
            Gets the display name of this device type.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.DeviceTypeInfo.Devices">
            <summary>
            Gets all <see cref="T:BytecodeApi.IO.SystemInfo.DeviceInfo" /> objects of this device type.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.DeviceTypeInfo.ToString">
            <summary>
            Returns the name of this <see cref="T:BytecodeApi.IO.SystemInfo.DeviceTypeInfo" />.
            </summary>
            <returns>
            The name of this <see cref="T:BytecodeApi.IO.SystemInfo.DeviceTypeInfo" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.SystemInfo.ProtocolMappingProtocol">
            <summary>
            Specifies the protocol of a <see cref="T:BytecodeApi.IO.SystemInfo.ProtocolMappingEntry" /> object.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.SystemInfo.ProtocolMappingProtocol.Tcp">
            <summary>
            The TCP protocol is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.SystemInfo.ProtocolMappingProtocol.Udp">
            <summary>
            The UDP protocol is used.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.SystemInfo.TcpViewEntryProtocol">
            <summary>
            Specifies the connection type of a <see cref="T:BytecodeApi.IO.SystemInfo.TcpViewEntry" /> object.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.SystemInfo.TcpViewEntryProtocol.Tcp4">
            <summary>
            The TCPv4 protocol is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.SystemInfo.TcpViewEntryProtocol.Tcp6">
            <summary>
            The TCPv6 protocol is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.SystemInfo.TcpViewEntryProtocol.Udp4">
            <summary>
            The UDPv4 protocol is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.SystemInfo.TcpViewEntryProtocol.Udp6">
            <summary>
            The UDPv6 protocol is used.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.SystemInfo.ProtocolMappingEntry">
            <summary>
            Provides a snapshot from the services file in %systemroot%\drivers\etc\services.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.ProtocolMappingEntry.Protocol">
            <summary>
            Gets the protocol that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.ProtocolMappingEntry.Port">
            <summary>
            Gets the port that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.ProtocolMappingEntry.Name">
            <summary>
            Gets the service or protocol name that is associated with this instance.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.ProtocolMappingEntry.GetProtocolMappingEntries">
            <summary>
            Reads the services file in %systemroot%\drivers\etc\services and returns a <see cref="T:BytecodeApi.IO.SystemInfo.ProtocolMappingEntry" />[] object with information about all protocols found in this file.
            </summary>
            <returns>
            A <see cref="T:BytecodeApi.IO.SystemInfo.ProtocolMappingEntry" />[] object with information about all protocols found in the services file.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.SystemInfo.TcpViewEntry">
            <summary>
            Provides information from the TCPView table for both TCP and UDP protocols in both IPv4 and IPv6.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.TcpViewEntry.Protocol">
            <summary>
            Gets the protocol that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.TcpViewEntry.LocalAddress">
            <summary>
            Gets the local IP address that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.TcpViewEntry.LocalPort">
            <summary>
            Gets the local port that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.TcpViewEntry.LocalProtocolName">
            <summary>
            Gets the name of the protocol of the local port that is associated with this instance, if the resolveProtocolNames parameter was set to <see langword="true" /> in <see cref="M:BytecodeApi.IO.SystemInfo.TcpViewEntry.GetEntries" />. Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.TcpViewEntry.RemoteAddress">
            <summary>
            Gets the remote IP address that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.TcpViewEntry.RemotePort">
            <summary>
            Gets the remote port that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.TcpViewEntry.RemoteProtocolName">
            <summary>
            Gets the name of the protocol of the remote port that is associated with this instance, if the resolveProtocolNames parameter was set to <see langword="true" /> in <see cref="M:BytecodeApi.IO.SystemInfo.TcpViewEntry.GetEntries" />. Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.TcpViewEntry.TcpState">
            <summary>
            Gets the TCP state that is associated with this instance and returns <see langword="null" />, if this <see cref="T:BytecodeApi.IO.SystemInfo.TcpViewEntry" /> is a UDP connection.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.TcpViewEntry.ProcessId">
            <summary>
            Gets the PID of the process that is associated with this instance.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.TcpViewEntry.GetEntries">
            <summary>
            Gets the entire table of <see cref="T:BytecodeApi.IO.SystemInfo.TcpViewEntry" /> objects that represent a snapshot of the current TCP and UDP connections in both IPv4 and IPv6. Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </summary>
            <returns>
            A new <see cref="T:BytecodeApi.IO.SystemInfo.TcpViewEntry" />[] object with the TCP and UDP table in both IPv4 and IPv6. Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.TcpViewEntry.GetEntries(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a specified portion of the table of <see cref="T:BytecodeApi.IO.SystemInfo.TcpViewEntry" /> objects that represent a snapshot of the current TCP and/or UDP connections in either IPv4, IPv6 or both. Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </summary>
            <param name="tcp4"><see langword="true" /> to include TCPv4 entries.</param>
            <param name="tcp6"><see langword="true" /> to include TCPv6 entries.</param>
            <param name="udp4"><see langword="true" /> to include UDPv4 entries.</param>
            <param name="udp6"><see langword="true" /> to include UDPv6 entries.</param>
            <returns>
            A new <see cref="T:BytecodeApi.IO.SystemInfo.TcpViewEntry" />[] object with the TCP and/or UDP table in either IPv4, IPv6 or both. Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.TcpViewEntry.GetEntries(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a specified portion of the table of <see cref="T:BytecodeApi.IO.SystemInfo.TcpViewEntry" /> objects that represent a snapshot of the current TCP and/or UDP connections in either IPv4, IPv6 or both. If <paramref name="resolveProtocolNames" /> is set to <see langword="true" />, Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </summary>
            <param name="tcp4"><see langword="true" /> to include TCPv4 entries.</param>
            <param name="tcp6"><see langword="true" /> to include TCPv6 entries.</param>
            <param name="udp4"><see langword="true" /> to include UDPv4 entries.</param>
            <param name="udp6"><see langword="true" /> to include UDPv6 entries.</param>
            <param name="resolveProtocolNames"><see langword="true" /> to resolve Protocol names according to the services file in %systemroot%\drivers\etc\services.</param>
            <returns>
            A new <see cref="T:BytecodeApi.IO.SystemInfo.TcpViewEntry" />[] object with the TCP and/or UDP table in either IPv4, IPv6 or both. If <paramref name="resolveProtocolNames" /> is set to <see langword="true" />, Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.TcpViewEntry.InvalidateProtocolMapping">
            <summary>
            Invalidates the internal protocol map that is retrieved using the <see cref="T:BytecodeApi.IO.SystemInfo.ProtocolMappingEntry" /> class and causes it to be reloaded when <see cref="M:BytecodeApi.IO.SystemInfo.TcpViewEntry.GetEntries" /> is called.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.SystemInfo.FileExtensionInfo">
            <summary>
            Class that retrieves information about a file extension using the AssocQueryString API.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.Extension">
            <summary>
            Gets the file extension as supplied in the constructor of <see cref="T:BytecodeApi.IO.SystemInfo.FileExtensionInfo" /> without the leading dot.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.Command">
            <summary>
            Gets the ASSOCSTR_COMMAND property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.Executable">
            <summary>
            Gets the ASSOCSTR_EXECUTABLE property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.FriendlyDocName">
            <summary>
            Gets the ASSOCSTR_FRIENDLYDOCNAME property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.FriendlyAppName">
            <summary>
            Gets the ASSOCSTR_FRIENDLYAPPNAME property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.NoOpen">
            <summary>
            Gets the ASSOCSTR_NOOPEN property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.ShellNewValue">
            <summary>
            Gets the ASSOCSTR_SHELLNEWVALUE property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.DDECommand">
            <summary>
            Gets the ASSOCSTR_DDECOMMAND property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.DDEIfExec">
            <summary>
            Gets the ASSOCSTR_DDEIFEXEC property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.DDEApplication">
            <summary>
            Gets the ASSOCSTR_DDEAPPLICATION property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.DDETopic">
            <summary>
            Gets the ASSOCSTR_DDETOPIC property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.InfoTip">
            <summary>
            Gets the ASSOCSTR_INFOTIP property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.QuickTip">
            <summary>
            Gets the ASSOCSTR_QUICKTIP property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.TileInfo">
            <summary>
            Gets the ASSOCSTR_TILEINFO property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.ContentType">
            <summary>
            Gets the ASSOCSTR_CONTENTTYPE property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.DefaultIcon">
            <summary>
            Gets the ASSOCSTR_DEFAULTICON property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.ShellExtension">
            <summary>
            Gets the ASSOCSTR_SHELLEXTENSION property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.DropTarget">
            <summary>
            Gets the ASSOCSTR_DROPTARGET property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.DelegateExecute">
            <summary>
            Gets the ASSOCSTR_DELEGATEEXECUTE property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.SupportedUriProtocols">
            <summary>
            Gets the ASSOCSTR_SUPPORTED_URI_PROTOCOLS property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.ProgId">
            <summary>
            Gets the ASSOCSTR_PROGID property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.AppId">
            <summary>
            Gets the ASSOCSTR_APPID property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.AppPublisher">
            <summary>
            Gets the ASSOCSTR_APPPUBLISHER property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.AppIconReference">
            <summary>
            Gets the ASSOCSTR_APPICONREFERENCE property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.Max">
            <summary>
            Gets the ASSOCSTR_MAX property of the specified extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.FileExtensionInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.SystemInfo.FileExtensionInfo" /> class and retrieves information about the specified file extension.
            </summary>
            <param name="extension">A file extension, with or without the leading dot.</param>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.FileExtensionInfo.StartProgram">
            <summary>
            Starts the default program associated with this file extension (<see cref="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.Executable" />) and returns the created <see cref="T:System.Diagnostics.Process" /> object and <see langword="null" />, if process creation failed.
            </summary>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> this method creates and <see langword="null" />, if process creation failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.FileExtensionInfo.StartProgram(System.String)">
            <summary>
            Starts the default program associated with this file extension (<see cref="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.Executable" />) with the specified commandline and returns the created <see cref="T:System.Diagnostics.Process" /> object and <see langword="null" />, if process creation failed. Typically, the commandline is used for the file to be opened by the application.
            </summary>
            <param name="commandLine">A <see cref="T:System.String" /> specifying the commandline to be passed to the executable.</param>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> this method creates and <see langword="null" />, if process creation failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.FileExtensionInfo.StartProgram(System.Boolean)">
            <summary>
            Starts the default program associated with this file extension (<see cref="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.Executable" />) and returns the created <see cref="T:System.Diagnostics.Process" /> object and <see langword="null" />, if process creation failed.
            </summary>
            <param name="runas"><see langword="true" /> to execute this file with the "runas" verb.</param>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> this method creates and <see langword="null" />, if process creation failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.SystemInfo.FileExtensionInfo.StartProgram(System.String,System.Boolean)">
            <summary>
            Starts the default program associated with this file extension (<see cref="P:BytecodeApi.IO.SystemInfo.FileExtensionInfo.Executable" />) with the specified commandline and returns the created <see cref="T:System.Diagnostics.Process" /> object and <see langword="null" />, if process creation failed. Typically, the commandline is used for the file to be opened by the application.
            </summary>
            <param name="commandLine">A <see cref="T:System.String" /> specifying the commandline to be passed to the executable.</param>
            <param name="runas"><see langword="true" /> to execute this file with the "runas" verb.</param>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> this method creates and <see langword="null" />, if process creation failed.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Compression">
            <summary>
            Class to compress and decompress data using GZip.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Compression.Compress(System.Byte[])">
            <summary>
            Compresses the specified <see cref="T:System.Byte" />[] using GZip and returns a new <see cref="T:System.Byte" />[] that can be used with the <see cref="M:BytecodeApi.IO.Compression.Decompress(System.Byte[])" /> method.
            </summary>
            <param name="data">A <see cref="T:System.Byte" />[] that represents data to be compressed.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] that can be used with the <see cref="M:BytecodeApi.IO.Compression.Decompress(System.Byte[])" /> method.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Compression.Decompress(System.Byte[])">
            <summary>
            Decompresses the specified <see cref="T:System.Byte" />[] using GZip and returns a new <see cref="T:System.Byte" />[] that represents the uncompressed data.
            </summary>
            <param name="data">A <see cref="T:System.Byte" />[] that represents data compressed by the <see cref="M:BytecodeApi.IO.Compression.Compress(System.Byte[])" /> method.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] that represents the uncompressed data.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.TransferCallback">
            <summary>
            Represents the method that is called periodically while binary data is transferred.
            </summary>
            <param name="bytes">The number of bytes that have been transferred since the last call to this method.</param>
            <param name="totalBytes">The total number of bytes that have been transferred.</param>
        </member>
        <member name="T:BytecodeApi.IO.ElevationType">
            <summary>
            Specifies the elevation type for a Windows user.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ElevationType.Default">
            <summary>
            The token does not have a linked token (standard user, elevation requires credentials from an administrative user account).
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ElevationType.Full">
            <summary>
            The token is an elevated token (integrity level is high or above).
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ElevationType.Limited">
            <summary>
            The token is a limited token (integrity level is medium, but the user is a local administrator and can elevate with consent).
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.ProcessAnalyser">
            <summary>
            Specifies process analysers, such as sandboxes, virtual environments, or a specific debugger or profiler.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessAnalyser.Sandboxie">
            <summary>
            Specifies Sandboxie
            <para>Detection: The module 'SbieDll.dll' is loaded.</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessAnalyser.Emulator">
            <summary>
            Specifies a generic emulator
            <para>Detection: A delay of 500 milliseconds is measured. If it is below 450 milliseconds, an emulator is detected.</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessAnalyser.Wireshark">
            <summary>
            Specifies that Wireshark is currently running.
            <para>Detection: Either 'Wireshark.exe' is running in any active user session, or a window with the title 'The Wireshark Network Analyzer' is opened.</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessAnalyser.ProcessMonitor">
            <summary>
            Specifies that Process Monitor is currently running.
            <para>Detection: A window with a title that starts with 'Process Monitor -' is opened.</para>
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.ProcessIntegrityLevel">
            <summary>
            Specifies the mandatory integrity level for a <see cref="T:System.Diagnostics.Process" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessIntegrityLevel.Untrusted">
            <summary>
            The <see cref="T:System.Diagnostics.Process" /> is running with untrusted integrity (SECURITY_MANDATORY_UNTRUSTED_RID).
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessIntegrityLevel.Low">
            <summary>
            The <see cref="T:System.Diagnostics.Process" /> is running with low integrity (SECURITY_MANDATORY_LOW_RID).
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessIntegrityLevel.Medium">
            <summary>
            The <see cref="T:System.Diagnostics.Process" /> is running with medium integrity (SECURITY_MANDATORY_MEDIUM_RID or SECURITY_MANDATORY_MEDIUM_PLUS_RID).
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessIntegrityLevel.High">
            <summary>
            The <see cref="T:System.Diagnostics.Process" /> is running with high integrity (SECURITY_MANDATORY_HIGH_RID).
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessIntegrityLevel.System">
            <summary>
            The <see cref="T:System.Diagnostics.Process" /> is running with system integrity (SECURITY_MANDATORY_SYSTEM_RID).
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.ProcessLoadLibraryResult">
            <summary>
            Specifies the result of a DLL injection attempt, performed by <see cref="M:BytecodeApi.Extensions.ProcessExtensions.LoadLibrary(System.Diagnostics.Process,System.String)" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessLoadLibraryResult.Success">
            <summary>
            The DLL was successfully loaded.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessLoadLibraryResult.AlreadyLoaded">
            <summary>
            The DLL was not loaded, because a module with the same name was already loaded by the <see cref="T:System.Diagnostics.Process" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessLoadLibraryResult.OpenProcessFailed">
            <summary>
            The native method OpenProcess failed.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessLoadLibraryResult.VirtualAllocFailed">
            <summary>
            The native method VirtualAllocEx failed.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessLoadLibraryResult.WriteProcessMemoryFailed">
            <summary>
            The native method WriteProcessMemory failed.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.ProcessLoadLibraryResult.CreateRemoteThreadFailed">
            <summary>
            The native method CreateRemoteThread failed.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.Desktop">
            <summary>
            Provides a set of <see langword="static" /> methods for Windows desktop interaction.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Desktop.Beep">
            <summary>
            Plays the <see cref="P:System.Media.SystemSounds.Beep" /> sound.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Desktop.Beep(System.Boolean)">
            <summary>
            Plays the <see cref="P:System.Media.SystemSounds.Beep" /> or the <see cref="P:System.Media.SystemSounds.Hand" /> sound, depending on the <paramref name="success" /> parameter.
            </summary>
            <param name="success"><see langword="true" /> to play <see cref="P:System.Media.SystemSounds.Beep" />; <see langword="false" /> to play <see cref="P:System.Media.SystemSounds.Hand" />.</param>
        </member>
        <member name="M:BytecodeApi.IO.Desktop.CaptureScreen(System.Boolean)">
            <summary>
            Captures the entire virutal screen and returns a <see cref="T:System.Drawing.Bitmap" /> with the image.
            </summary>
            <param name="allScreens"><see langword="true" /> to capture all screens, <see langword="false" /> to only capture the primary screen.</param>
            <returns>
            A <see cref="T:System.Drawing.Bitmap" /> with the image of the captured screen.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Desktop.TurnOnScreenSaver">
            <summary>
            Turns on the Windows screensaver using a HWND broadcast message, if a screensaver is configured.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Desktop.ChangeWallpaper(System.String)">
            <summary>
            Changes the Windows wallpaper to an image from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path to an image file.</param>
            <returns>
            <see langword="true" /> on success;
            otherwise, <see langword="false" />
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Desktop.RefreshSystemTray">
            <summary>
            Refreshes the system tray area and removes icons processes that no longer run.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.Network">
            <summary>
            Provides a set of <see langword="static" /> methods for network operations.
            </summary>
        </member>
        <member name="F:BytecodeApi.IO.Network.AlwaysValidCertificateValidationCallback">
            <summary>
            Represents a <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> callback that validates all certificates without checking. This field is read-only.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Network.DisableCertificateValidation">
            <summary>
            Sets up the <see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback" /> to validate all certificates without checking.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Network.WakeOnLan(System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
            Sends a Wake-on-LAN magic packet containing the specified <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> to UDP broadcast on port 9.
            <para>Packet bytes: FF FF FF FF FF FF | 16 repetitions of <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /></para>
            <para>Total number of bytes: 102.</para>
            </summary>
            <param name="physicalAddress">The <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> which is contained within the UDP broadcast packet.</param>
        </member>
        <member name="M:BytecodeApi.IO.Network.WakeOnLan(System.Net.NetworkInformation.PhysicalAddress,System.Byte[])">
            <summary>
            Sends a Wake-on-LAN magic packet containing the specified <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> to UDP broadcast on port 9 including a password.
            <para>Packet bytes: FF FF FF FF FF FF | 16 repetitions of <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> | contents of <paramref name="password" /></para>
            <para>Total number of bytes: 102.</para>
            </summary>
            <param name="physicalAddress">The <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> which is contained within the UDP broadcast packet.</param>
            <param name="password">The binary representation of the password. <paramref name="password" /> must either contain 4 or 6 bytes, or be <see langword="null" />.</param>
        </member>
        <member name="T:BytecodeApi.IO.Wmi.WmiPropertyCollection">
            <summary>
            Represents a collection of WMI properties.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiPropertyCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> at the specified index.
            </summary>
            <param name="index">The index at which to retrieve the <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" />.</param>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiPropertyCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> with the specified name and throws an exception, if it was not found.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the WMI property name.</param>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiPropertyCollection.Item(System.String,System.Object)">
            <summary>
            Gets the <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> with the specified name and returns a new <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> with a default value, if it was not found.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the WMI property name.</param>
            <param name="defaultValue">The value that is used if the property with the specified name was not found.</param>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiPropertyCollection.Count">
            <summary>
            Gets the number of properties in this <see cref="T:BytecodeApi.IO.Wmi.WmiPropertyCollection" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiPropertyCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Wmi.WmiPropertyCollection" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiPropertyCollection.#ctor(System.Collections.Generic.IEnumerable{BytecodeApi.IO.Wmi.WmiProperty})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Wmi.WmiPropertyCollection" /> class with the specified collection of properties.
            </summary>
            <param name="properties">A collection of <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> structures to add to this <see cref="T:BytecodeApi.IO.Wmi.WmiPropertyCollection" />.</param>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiPropertyCollection.#ctor(BytecodeApi.IO.Wmi.WmiProperty[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Wmi.WmiPropertyCollection" /> class with the specified collection of properties.
            </summary>
            <param name="properties">A collection of <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> structures to add to this <see cref="T:BytecodeApi.IO.Wmi.WmiPropertyCollection" />.</param>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiPropertyCollection.HasProperty(System.String)">
            <summary>
            Determines whether a property with the specified name exists in this collection.
            </summary>
            <param name="name">The name of the property to check.</param>
            <returns>
            <see langword="true" />, if the property with the specified name exists;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiPropertyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:BytecodeApi.IO.Wmi.WmiPropertyCollection" />.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the <see cref="T:BytecodeApi.IO.Wmi.WmiPropertyCollection" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Wmi.WmiProperty">
            <summary>
            Represents a WMI property, composed of a name and a value.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiProperty.Name">
            <summary>
            Gets the name of the <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiProperty.Value">
            <summary>
            Gets the value of the <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiProperty.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> structure with the specified name and value.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" />.</param>
            <param name="value">The value of the <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" />.</param>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiProperty.GetValue``1">
            <summary>
            Returns the strongly typed representation of <see cref="P:BytecodeApi.IO.Wmi.WmiProperty.Value" />. If <see cref="P:BytecodeApi.IO.Wmi.WmiProperty.Value" /> is of another type, an exception is thrown.
            </summary>
            <typeparam name="T">The value type to use for conversion.</typeparam>
            <returns>
            The strongly typed representation of <see cref="P:BytecodeApi.IO.Wmi.WmiProperty.Value" />. If <see cref="P:BytecodeApi.IO.Wmi.WmiProperty.Value" /> is of another type, an exception is thrown.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiProperty.ToString">
            <summary>
            Returns the name of this <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" />.
            </summary>
            <returns>
            The name of this <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiProperty.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <see langword="true" />, if the specified <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiProperty.Equals(BytecodeApi.IO.Wmi.WmiProperty)">
            <summary>
            Determines whether this instance is equal to another <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" />.
            </summary>
            <param name="other">The <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> to compare to this instance.</param>
            <returns>
            <see langword="true" />, if this instance is equal to the <paramref name="other" /> parameter;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiProperty.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" />.
            </summary>
            <returns>
            The hash code for this <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiProperty.op_Equality(BytecodeApi.IO.Wmi.WmiProperty,BytecodeApi.IO.Wmi.WmiProperty)">
            <summary>
            Compares two <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> instances for equality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> are equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiProperty.op_Inequality(BytecodeApi.IO.Wmi.WmiProperty,BytecodeApi.IO.Wmi.WmiProperty)">
            <summary>
            Compares two <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> instances for inequality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.IO.Wmi.WmiProperty" /> are not equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Wmi.WmiObject">
            <summary>
            Represents a WMI object instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiObject.Class">
            <summary>
            Gets the <see cref="T:BytecodeApi.IO.Wmi.WmiClass" /> that this <see cref="T:BytecodeApi.IO.Wmi.WmiObject" /> was created from.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiObject.Properties">
            <summary>
            Gets the collection of properties of this <see cref="T:BytecodeApi.IO.Wmi.WmiObject" /> instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiObject.PropertyNames">
            <summary>
            Gets a <see cref="T:System.String" /> collection of property names of this <see cref="T:BytecodeApi.IO.Wmi.WmiObject" /> instance.
            </summary>
        </member>
        <member name="T:BytecodeApi.IO.Wmi.WmiClass">
            <summary>
            Represents a WMI class.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiClass.Namespace">
            <summary>
            Gets the <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" /> that this <see cref="T:BytecodeApi.IO.Wmi.WmiClass" /> was created from.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiClass.Name">
            <summary>
            Gets the name of the <see cref="T:BytecodeApi.IO.Wmi.WmiClass" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiClass.#ctor(BytecodeApi.IO.Wmi.WmiNamespace,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Wmi.WmiClass" /> class with the specified <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" /> and the specified name.
            </summary>
            <param name="wmiNamespace">The WMI namespace of this class, in accordance to the <paramref name="name" /> parameter.</param>
            <param name="name">The name of the <see cref="T:BytecodeApi.IO.Wmi.WmiClass" />.</param>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiClass.GetObjects">
            <summary>
            Retrieves all objects of this <see cref="T:BytecodeApi.IO.Wmi.WmiClass" /> including all columns.
            </summary>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Wmi.WmiObject" />[] containing all objects of this <see cref="T:BytecodeApi.IO.Wmi.WmiClass" /> including all columns.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiClass.GetObjects(System.String[])">
            <summary>
            Retrieves all objects of this <see cref="T:BytecodeApi.IO.Wmi.WmiClass" /> including the specified columns. If <paramref name="columns" /> is <see langword="null" />, all columns are retrieved.
            </summary>
            <param name="columns">A <see cref="T:System.String" />[] specifying the columns to select. If <see langword="null" />, all columns are retrieved.</param>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Wmi.WmiObject" />[] containing all objects of this <see cref="T:BytecodeApi.IO.Wmi.WmiClass" /> including the specified columns.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiClass.GetObjects(System.String[],System.String)">
            <summary>
            Retrieves objects of this <see cref="T:BytecodeApi.IO.Wmi.WmiClass" /> including the specified columns using a WHERE condition. If <paramref name="columns" /> is <see langword="null" />, all columns are retrieved. If <paramref name="where" /> is <see langword="null" /> or empty, no filter is applied.
            </summary>
            <param name="columns">A <see cref="T:System.String" />[] specifying the columns to select. If <see langword="null" />, all columns are retrieved.</param>
            <param name="where">A <see cref="T:System.String" /> specifying a WMI query that is appended after a "WHERE". If <see langword="null" /> or empty, no filter is applied.</param>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Wmi.WmiObject" />[] containing objects of this <see cref="T:BytecodeApi.IO.Wmi.WmiClass" /> including the specified columns using the specified WHERE condition.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiClass.InvokeMethod(System.String,System.Object[])">
            <summary>
            Invokes a method on this <see cref="T:BytecodeApi.IO.Wmi.WmiClass" />.
            </summary>
            <param name="methodName">The name of the method to invoke.</param>
            <param name="args">An array containing parameter values.</param>
            <returns>
            The <see cref="T:System.Object" /> value returned by the method.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiClass.InvokeMethod``1(System.String,System.Object[])">
            <summary>
            Invokes a method on this <see cref="T:BytecodeApi.IO.Wmi.WmiClass" />.
            </summary>
            <param name="methodName">The name of the method to invoke.</param>
            <param name="args">An array containing parameter values.</param>
            <typeparam name="T">The type of the returned value.</typeparam>
            <returns>
            The value returned by the method, casted to <typeparamref name="T" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiClass.ToString">
            <summary>
            Returns the name of this <see cref="T:BytecodeApi.IO.Wmi.WmiClass" />.
            </summary>
            <returns>
            The name of this <see cref="T:BytecodeApi.IO.Wmi.WmiClass" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.IO.Wmi.WmiNamespace">
            <summary>
            Represents a WMI namespace.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiNamespace.Name">
            <summary>
            Gets the name of the <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" />. The "ROOT" namespace name is represented as <see cref="F:System.String.Empty" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiNamespace.Path">
            <summary>
            Gets the path of the <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" />, including all parent namespaces except "ROOT", separated by a backslash.
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiNamespace.FullName">
            <summary>
            Gets the full path of the <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" />, including all parent namespaces, the "ROOT" element and the workstation name.
            <para>Example: \\WORKSTATION-NAME\ROOT\CIMV2</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.IO.Wmi.WmiNamespace.Namespaces">
            <summary>
            Gets a collection containing all child namespaces. This property is <see langword="null" />, if the loadNamespaces parameter was set to <see langword="false" /> in the constructor.
            </summary>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiNamespace.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" /> class from the specified path. The <paramref name="path" /> parameter starts after "\\WORKSTATION-NAME\ROOT\" and excludes "ROOT". Child namespaces are not loaded.
            <para>Example: CIMV2</para>
            </summary>
            <param name="path">The relative path of the <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" />, excluding workstation name and "ROOT".</param>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiNamespace.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" /> class from the specified path. The <paramref name="path" /> parameter starts after "\\WORKSTATION-NAME\ROOT\" and excludes "ROOT".
            <para>Example: CIMV2</para>
            </summary>
            <param name="path">The relative path of the <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" />, excluding workstation name and "ROOT".</param>
            <param name="loadNamespaces"><see langword="true" /> to load child namespaces recursively.</param>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiNamespace.GetRoot">
            <summary>
            Retrieves all WMI namespaces, starting from ROOT\ recursively. This is equivalent to <see langword="new" /> <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" />(<see langword="null" />).
            </summary>
            <returns>
            A <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" /> that is equivalent to <see langword="new" /> <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" />(<see langword="null" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiNamespace.GetClasses">
            <summary>
            Retrieves all classes of this <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" />.
            </summary>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Wmi.WmiClass" />[] containing all classes of this <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiNamespace.GetClass(System.String)">
            <summary>
            Finds a class of this <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" /> by the specified name. An exception is thrown, if the class could not be created.
            </summary>
            <returns>
            A new <see cref="T:BytecodeApi.IO.Wmi.WmiClass" /> created from the specified name. An exception is thrown, if the class could not be created.
            </returns>
        </member>
        <member name="M:BytecodeApi.IO.Wmi.WmiNamespace.ToString">
            <summary>
            Returns the name of this <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" />.
            </summary>
            <returns>
            The name of this <see cref="T:BytecodeApi.IO.Wmi.WmiNamespace" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Mathematics.ByteSizeUnit">
            <summary>
            Gets the unit that represents a <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value.
            <para>Example: bytes, KB, MB, GB, TB, PB, EB</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSizeUnit.Byte">
            <summary>
            Specifies the bytes unit (bytes).
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSizeUnit.KiloByte">
            <summary>
            Specifies the kilobytes unit (KB).
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSizeUnit.MegaByte">
            <summary>
            Specifies the megabytes unit (MB).
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSizeUnit.GigaByte">
            <summary>
            Specifies the gigabytes unit (GB).
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSizeUnit.TeraByte">
            <summary>
            Specifies the terabytes unit (TB).
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSizeUnit.PetaByte">
            <summary>
            Specifies the petabytes unit (PB).
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSizeUnit.ExaByte">
            <summary>
            Specifies the exabytes unit (EB).
            </summary>
        </member>
        <member name="T:BytecodeApi.Mathematics.ByteSize">
            <summary>
            Represents a byte size value as a 64-bit unsigned integer value.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.BytesInKiloByte">
            <summary>
            Represents the number of bytes in one kilobyte. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.BytesInMegaByte">
            <summary>
            Represents the number of bytes in one megabyte. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.BytesInGigaByte">
            <summary>
            Represents the number of bytes in one gigabyte. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.BytesInTeraByte">
            <summary>
            Represents the number of bytes in one terabyte. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.BytesInPetaByte">
            <summary>
            Represents the number of bytes in one petabyte. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.BytesInExaByte">
            <summary>
            Represents the number of bytes in one exabyte. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.Zero">
            <summary>
            Represents the zero <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value. This field is read-only.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.MaxValue">
            <summary>
            Represents the maximum <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value. This field is read-only.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.KiloByte">
            <summary>
            Represents the 1 kilobyte <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value. This field is read-only.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.MegaByte">
            <summary>
            Represents the 1 megabyte <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value. This field is read-only.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.GigaByte">
            <summary>
            Represents the 1 gigabyte <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value. This field is read-only.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.TeraByte">
            <summary>
            Represents the 1 terabyte <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value. This field is read-only.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.PetaByte">
            <summary>
            Represents the 1 petabyte <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value. This field is read-only.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.ByteSize.ExaByte">
            <summary>
            Represents the 1 exabyte <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value. This field is read-only.
            </summary>
        </member>
        <member name="P:BytecodeApi.Mathematics.ByteSize.Bytes">
            <summary>
            Gets the number of bytes that represent the value of this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.Mathematics.ByteSize.KiloBytes">
            <summary>
            Gets the number of kilobytes, calculated from the <see cref="P:BytecodeApi.Mathematics.ByteSize.Bytes" /> property.
            </summary>
        </member>
        <member name="P:BytecodeApi.Mathematics.ByteSize.MegaBytes">
            <summary>
            Gets the number of megabytes, calculated from the <see cref="P:BytecodeApi.Mathematics.ByteSize.Bytes" /> property.
            </summary>
        </member>
        <member name="P:BytecodeApi.Mathematics.ByteSize.GigaBytes">
            <summary>
            Gets the number of gigabytes, calculated from the <see cref="P:BytecodeApi.Mathematics.ByteSize.Bytes" /> property.
            </summary>
        </member>
        <member name="P:BytecodeApi.Mathematics.ByteSize.TeraBytes">
            <summary>
            Gets the number of terabytes, calculated from the <see cref="P:BytecodeApi.Mathematics.ByteSize.Bytes" /> property.
            </summary>
        </member>
        <member name="P:BytecodeApi.Mathematics.ByteSize.PetaBytes">
            <summary>
            Gets the number of petabytes, calculated from the <see cref="P:BytecodeApi.Mathematics.ByteSize.Bytes" /> property.
            </summary>
        </member>
        <member name="P:BytecodeApi.Mathematics.ByteSize.ExaBytes">
            <summary>
            Gets the number of exabytes, calculated from the <see cref="P:BytecodeApi.Mathematics.ByteSize.Bytes" /> property.
            </summary>
        </member>
        <member name="P:BytecodeApi.Mathematics.ByteSize.ClosestUnit">
            <summary>
            Gets the closest <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> in which the value of this instance can be represented as a number greater than or equal to 1.
            <para>Example: 1023 bytes is <see cref="F:BytecodeApi.Mathematics.ByteSizeUnit.Byte" />; 1024 bytes is <see cref="F:BytecodeApi.Mathematics.ByteSizeUnit.KiloByte" /></para>
            </summary>
        </member>
        <member name="P:BytecodeApi.Mathematics.ByteSize.NumberToClosestUnit">
            <summary>
            Gets the <see cref="T:System.Double" /> value that represents the value of this instance in accordance to the <see cref="P:BytecodeApi.Mathematics.ByteSize.ClosestUnit" /> property.
            </summary>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Mathematics.ByteSize" /> structure with the number of bytes.
            </summary>
            <param name="bytes">A <see cref="T:System.UInt64" /> value specifying the number of bytes.</param>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.FromKiloBytes(System.UInt64)">
            <summary>
            Returns a <see cref="T:BytecodeApi.Mathematics.ByteSize" /> that represents a specified number kilobytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of kilobytes.</param>
            <returns>
            A <see cref="T:BytecodeApi.Mathematics.ByteSize" /> that represents <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.FromMegaBytes(System.UInt64)">
            <summary>
            Returns a <see cref="T:BytecodeApi.Mathematics.ByteSize" /> that represents a specified number megabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of megabytes.</param>
            <returns>
            A <see cref="T:BytecodeApi.Mathematics.ByteSize" /> that represents <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.FromGigaBytes(System.UInt64)">
            <summary>
            Returns a <see cref="T:BytecodeApi.Mathematics.ByteSize" /> that represents a specified number gigabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of gigabytes.</param>
            <returns>
            A <see cref="T:BytecodeApi.Mathematics.ByteSize" /> that represents <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.FromTeraBytes(System.UInt64)">
            <summary>
            Returns a <see cref="T:BytecodeApi.Mathematics.ByteSize" /> that represents a specified number terabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of terabytes.</param>
            <returns>
            A <see cref="T:BytecodeApi.Mathematics.ByteSize" /> that represents <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.FromPetaBytes(System.UInt64)">
            <summary>
            Returns a <see cref="T:BytecodeApi.Mathematics.ByteSize" /> that represents a specified number petabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of petabytes.</param>
            <returns>
            A <see cref="T:BytecodeApi.Mathematics.ByteSize" /> that represents <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.FromExaBytes(System.UInt64)">
            <summary>
            Returns a <see cref="T:BytecodeApi.Mathematics.ByteSize" /> that represents a specified number exabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of exabytes.</param>
            <returns>
            A <see cref="T:BytecodeApi.Mathematics.ByteSize" /> that represents <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.Add(BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the sum of this instance and the specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value.
            </summary>
            <param name="value">The <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value to add.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the sum of this instance and the specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.AddKiloBytes(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the sum of this instance and the specified number of kilobytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of kilobytes to add.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the sum of this instance and the specified number of kilobytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.AddMegaBytes(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the sum of this instance and the specified number of megabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of megabytes to add.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the sum of this instance and the specified number of megabytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.AddGigaBytes(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the sum of this instance and the specified number of gigabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of gigabytes to add.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the sum of this instance and the specified number of gigabytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.AddTeraBytes(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the sum of this instance and the specified number of terabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of terabytes to add.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the sum of this instance and the specified number of terabytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.AddPetaBytes(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the sum of this instance and the specified number of petabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of petabytes to add.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the sum of this instance and the specified number of petabytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.AddExaBytes(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the sum of this instance and the specified number of exabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of exabytes to add.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the sum of this instance and the specified number of exabytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.Subtract(BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the difference of this instance and the specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value.
            </summary>
            <param name="value">The <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value to subtract.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the difference of this instance and the specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.SubtractKiloBytes(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the difference of this instance and the specified number of kilobytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of kilobytes to subtract.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the difference of this instance and the specified number of kilobytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.SubtractMegaBytes(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the difference of this instance and the specified number of megabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of megabytes to subtract.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the difference of this instance and the specified number of megabytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.SubtractGigaBytes(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the difference of this instance and the specified number of gigabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of gigabytes to subtract.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the difference of this instance and the specified number of gigabytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.SubtractTeraBytes(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the difference of this instance and the specified number of terabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of terabytes to subtract.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the difference of this instance and the specified number of terabytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.SubtractPetaBytes(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the difference of this instance and the specified number of petabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of petabytes to subtract.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the difference of this instance and the specified number of petabytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.SubtractExaBytes(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the difference of this instance and the specified number of exabytes.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value specifying the number of exabytes to subtract.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the difference of this instance and the specified number of exabytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.Multiply(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the result of this instance, multiplied by the specified <see cref="T:System.UInt64" /> value.
            </summary>
            <param name="value">The multiplier.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the result of this instance, multiplied by the specified <see cref="T:System.UInt64" /> value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.Divide(System.UInt64)">
            <summary>
            Returns a new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that is the result of this instance, divided by the specified <see cref="T:System.UInt64" /> value.
            </summary>
            <param name="value">The divisor.</param>
            <returns>
            A new <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value that represents the result of this instance, divided by the specified <see cref="T:System.UInt64" /> value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.GetNumberForUnit(BytecodeApi.Mathematics.ByteSizeUnit)">
            <summary>
            Gets the <see cref="T:System.Double" /> value that represents the value of this instance in accordance to the <paramref name="unit" /> parameter.
            </summary>
            <param name="unit">The <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> to convert the value of this instance to.</param>
            <returns>
            A <see cref="T:System.Double" /> value representing the value of this instance in accordance to the <paramref name="unit" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.Format">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            An equivalent <see cref="T:System.String" /> representing this instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.Format(System.Int32)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance using the specified formatting parameters.
            </summary>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representing this instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.Format(System.Int32,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance using the specified formatting parameters.
            </summary>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <param name="padDecimals"><see langword="true" /> to pad zero decimal places with a '0' character.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representing this instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.Format(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance using the specified formatting parameters.
            </summary>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <param name="padDecimals"><see langword="true" /> to pad zero decimal places with a '0' character.</param>
            <param name="thousandsSeparator"><see langword="true" /> to use a thousands separator.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representing this instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.Format(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance using the specified formatting parameters.
            </summary>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <param name="padDecimals"><see langword="true" /> to pad zero decimal places with a '0' character.</param>
            <param name="thousandsSeparator"><see langword="true" /> to use a thousands separator.</param>
            <param name="roundUp"><see langword="true" /> to always round up. The <paramref name="decimals" /> parameter should typically be 0, if this option is used.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representing this instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.FormatWithUnit(BytecodeApi.Mathematics.ByteSizeUnit)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance using a specified <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" />.
            </summary>
            <param name="unit">The <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> that is used to format the result <see cref="T:System.String" />.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representing this instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.FormatWithUnit(BytecodeApi.Mathematics.ByteSizeUnit,System.Int32)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance using a specified <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> and the specified formatting parameters.
            </summary>
            <param name="unit">The <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> that is used to format the result <see cref="T:System.String" />.</param>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representing this instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.FormatWithUnit(BytecodeApi.Mathematics.ByteSizeUnit,System.Int32,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance using a specified <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> and the specified formatting parameters.
            </summary>
            <param name="unit">The <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> that is used to format the result <see cref="T:System.String" />.</param>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <param name="padDecimals"><see langword="true" /> to pad zero decimal places with a '0' character.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representing this instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.FormatWithUnit(BytecodeApi.Mathematics.ByteSizeUnit,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance using a specified <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> and the specified formatting parameters.
            </summary>
            <param name="unit">The <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> that is used to format the result <see cref="T:System.String" />.</param>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <param name="padDecimals"><see langword="true" /> to pad zero decimal places with a '0' character.</param>
            <param name="thousandsSeparator"><see langword="true" /> to use a thousands separator.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representing this instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.FormatWithUnit(BytecodeApi.Mathematics.ByteSizeUnit,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance using a specified <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> and the specified formatting parameters.
            </summary>
            <param name="unit">The <see cref="T:BytecodeApi.Mathematics.ByteSizeUnit" /> that is used to format the result <see cref="T:System.String" />.</param>
            <param name="decimals">The number of decimals to round the result to. The default value is 2.</param>
            <param name="padDecimals"><see langword="true" /> to pad zero decimal places with a '0' character.</param>
            <param name="thousandsSeparator"><see langword="true" /> to use a thousands separator.</param>
            <param name="roundUp"><see langword="true" /> to always round up. The <paramref name="decimals" /> parameter should typically be 0, if this option is used.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representing this instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> and returns a comparison of their relative values.
            </summary>
            <param name="obj">An <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.CompareTo(BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Compares this instance to a specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> and returns a comparison of their relative values.
            </summary>
            <param name="other">A <see cref="T:BytecodeApi.Mathematics.ByteSize" /> to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <see langword="true" />, if the specified <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.Equals(BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Determines whether this instance is equal to another <see cref="T:BytecodeApi.Mathematics.ByteSize" />.
            </summary>
            <param name="other">The <see cref="T:BytecodeApi.Mathematics.ByteSize" /> to compare to this instance.</param>
            <returns>
            <see langword="true" />, if this instance is equal to the <paramref name="other" /> parameter;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:BytecodeApi.Mathematics.ByteSize" />.
            </summary>
            <returns>
            The hash code for this <see cref="T:BytecodeApi.Mathematics.ByteSize" /> instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_Equality(BytecodeApi.Mathematics.ByteSize,BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Compares two <see cref="T:BytecodeApi.Mathematics.ByteSize" /> values for equality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.Mathematics.ByteSize" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.Mathematics.ByteSize" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.Mathematics.ByteSize" /> values are equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_Inequality(BytecodeApi.Mathematics.ByteSize,BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Compares two <see cref="T:BytecodeApi.Mathematics.ByteSize" /> values for inequality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.Mathematics.ByteSize" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.Mathematics.ByteSize" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.Mathematics.ByteSize" /> values are not equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_LessThan(BytecodeApi.Mathematics.ByteSize,BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Returns a value indicating whether a specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value is less than another specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value.
            </summary>
            <param name="a">The first value to compare.</param>
            <param name="b">The second value to compare.</param>
            <returns>
            <see langword="true" />, if <paramref name="a" /> is less than <paramref name="b" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_LessThanOrEqual(BytecodeApi.Mathematics.ByteSize,BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Returns a value indicating whether a specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value is less than or equal to another specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value.
            </summary>
            <param name="a">The first value to compare.</param>
            <param name="b">The second value to compare.</param>
            <returns>
            <see langword="true" />, if <paramref name="a" /> is less than or equal to <paramref name="b" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_GreaterThan(BytecodeApi.Mathematics.ByteSize,BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Returns a value indicating whether a specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value is greater than another specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value.
            </summary>
            <param name="a">The first value to compare.</param>
            <param name="b">The second value to compare.</param>
            <returns>
            <see langword="true" />, if <paramref name="a" /> is greater than <paramref name="b" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_GreaterThanOrEqual(BytecodeApi.Mathematics.ByteSize,BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Returns a value indicating whether a specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value is greater than or equal to another specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value.
            </summary>
            <param name="a">The first value to compare.</param>
            <param name="b">The second value to compare.</param>
            <returns>
            <see langword="true" />, if <paramref name="a" /> is greater than or equal to <paramref name="b" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_Addition(BytecodeApi.Mathematics.ByteSize,BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Adds two specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> values.
            </summary>
            <param name="a">The first value to add.</param>
            <param name="b">The second value to add.</param>
            <returns>
            The result of adding <paramref name="a" /> and <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_Increment(BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Increments the <see cref="T:BytecodeApi.Mathematics.ByteSize" /> operand by 1.
            </summary>
            <param name="value">The value to increment.</param>
            <returns>
            <paramref name="value" /> incremented by 1.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_Subtraction(BytecodeApi.Mathematics.ByteSize,BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Subtracts two specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> values.
            </summary>
            <param name="a">The minuend.</param>
            <param name="b">The subtrahend.</param>
            <returns>
            The result of adding <paramref name="b" /> from <paramref name="a" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_Decrement(BytecodeApi.Mathematics.ByteSize)">
            <summary>
            Decrements the <see cref="T:BytecodeApi.Mathematics.ByteSize" /> operand by 1.
            </summary>
            <param name="value">The value to decrement.</param>
            <returns>
            <paramref name="value" /> decremented by 1.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_Multiply(BytecodeApi.Mathematics.ByteSize,System.UInt64)">
            <summary>
            Multiplies a specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value and a specified <see cref="T:System.UInt64" /> value.
            </summary>
            <param name="a">The first value to multiply.</param>
            <param name="b">The second value to multiply.</param>
            <returns>
            The result of multiplying <paramref name="a" /> by <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_Division(BytecodeApi.Mathematics.ByteSize,System.UInt64)">
            <summary>
            Divides a specified <see cref="T:BytecodeApi.Mathematics.ByteSize" /> value and a specified <see cref="T:System.UInt64" /> value.
            </summary>
            <param name="a">The dividend.</param>
            <param name="b">The divisor.</param>
            <returns>
            The result of dividing <paramref name="a" /> by <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_Implicit(System.UInt64)~BytecodeApi.Mathematics.ByteSize">
            <summary>
            Defines an implicit conversion of a <see cref="T:System.UInt64" /> to a <see cref="T:BytecodeApi.Mathematics.ByteSize" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> to convert.</param>
        </member>
        <member name="M:BytecodeApi.Mathematics.ByteSize.op_Explicit(BytecodeApi.Mathematics.ByteSize)~System.UInt64">
            <summary>
            Defines an explicit conversion of a <see cref="T:BytecodeApi.Mathematics.ByteSize" /> to a <see cref="T:System.UInt64" />.
            </summary>
            <param name="value">The <see cref="T:BytecodeApi.Mathematics.ByteSize" /> to convert.</param>
        </member>
        <member name="T:BytecodeApi.Mathematics.BitCalculator">
            <summary>
            Provides <see langword="static" /> methods that process single bits in integer datatypes and <see cref="T:System.Byte" />[] objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBit(System.Byte,System.Int32)">
            <summary>
            Gets the bit at the specified index from the specified <see cref="T:System.Byte" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to retrieve the bit from.</param>
            <param name="index">The index, at which to retrieve the bit from, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..7, <see langword="false" /> is returned.</param>
            <returns>
            The bit retrieved from <paramref name="value" />. If <paramref name="index" /> is not in the range of 0..7, <see langword="false" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBit(System.SByte,System.Int32)">
            <summary>
            Gets the bit at the specified index from the specified <see cref="T:System.SByte" /> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to retrieve the bit from.</param>
            <param name="index">The index, at which to retrieve the bit from, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..7, <see langword="false" /> is returned.</param>
            <returns>
            The bit retrieved from <paramref name="value" />. If <paramref name="index" /> is not in the range of 0..7, <see langword="false" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBit(System.Int32,System.Int32)">
            <summary>
            Gets the bit at the specified index from the specified <see cref="T:System.Int32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to retrieve the bit from.</param>
            <param name="index">The index, at which to retrieve the bit from, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..31, <see langword="false" /> is returned.</param>
            <returns>
            The bit retrieved from <paramref name="value" />. If <paramref name="index" /> is not in the range of 0..31, <see langword="false" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBit(System.UInt32,System.Int32)">
            <summary>
            Gets the bit at the specified index from the specified <see cref="T:System.UInt32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to retrieve the bit from.</param>
            <param name="index">The index, at which to retrieve the bit from, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..31, <see langword="false" /> is returned.</param>
            <returns>
            The bit retrieved from <paramref name="value" />. If <paramref name="index" /> is not in the range of 0..31, <see langword="false" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBit(System.Int64,System.Int32)">
            <summary>
            Gets the bit at the specified index from the specified <see cref="T:System.Int64" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to retrieve the bit from.</param>
            <param name="index">The index, at which to retrieve the bit from, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..63, <see langword="false" /> is returned.</param>
            <returns>
            The bit retrieved from <paramref name="value" />. If <paramref name="index" /> is not in the range of 0..63, <see langword="false" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBit(System.UInt64,System.Int32)">
            <summary>
            Gets the bit at the specified index from the specified <see cref="T:System.UInt64" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to retrieve the bit from.</param>
            <param name="index">The index, at which to retrieve the bit from, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..63, <see langword="false" /> is returned.</param>
            <returns>
            The bit retrieved from <paramref name="value" />. If <paramref name="index" /> is not in the range of 0..63, <see langword="false" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBit(System.Int16,System.Int32)">
            <summary>
            Gets the bit at the specified index from the specified <see cref="T:System.Int16" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to retrieve the bit from.</param>
            <param name="index">The index, at which to retrieve the bit from, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..15, <see langword="false" /> is returned.</param>
            <returns>
            The bit retrieved from <paramref name="value" />. If <paramref name="index" /> is not in the range of 0..15, <see langword="false" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBit(System.UInt16,System.Int32)">
            <summary>
            Gets the bit at the specified index from the specified <see cref="T:System.UInt16" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to retrieve the bit from.</param>
            <param name="index">The index, at which to retrieve the bit from, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..15, <see langword="false" /> is returned.</param>
            <returns>
            The bit retrieved from <paramref name="value" />. If <paramref name="index" /> is not in the range of 0..15, <see langword="false" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBit(System.Byte[],System.Int32)">
            <summary>
            Gets the bit at the specified index from the specified <see cref="T:System.Byte" />[] binary.
            </summary>
            <param name="value">The <see cref="T:System.Byte" />[] binary to retrieve the bit from.</param>
            <param name="index">The index, at which to retrieve the bit from, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of the <see cref="T:System.Byte" />[], <see langword="false" /> is returned.</param>
            <returns>
            The bit retrieved from <paramref name="value" />. If <paramref name="index" /> is not in the range of the <see cref="T:System.Byte" />[], <see langword="false" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.SetBit(System.Byte,System.Int32,System.Boolean)">
            <summary>
            Sets the bit of <paramref name="value" /> at the specified index to either 0 or 1 according to <paramref name="bit" />.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to be processed.</param>
            <param name="index">The index of the changed bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..7, <paramref name="value" /> is returned.</param>
            <param name="bit"><see langword="false" /> to set the bit to 0; <see langword="true" /> to set the bit to 1.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..7, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.SetBit(System.SByte,System.Int32,System.Boolean)">
            <summary>
            Sets the bit of <paramref name="value" /> at the specified index to either 0 or 1 according to <paramref name="bit" />.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to be processed.</param>
            <param name="index">The index of the changed bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..7, <paramref name="value" /> is returned.</param>
            <param name="bit"><see langword="false" /> to set the bit to 0; <see langword="true" /> to set the bit to 1.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..7, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.SetBit(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the bit of <paramref name="value" /> at the specified index to either 0 or 1 according to <paramref name="bit" />.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to be processed.</param>
            <param name="index">The index of the changed bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..31, <paramref name="value" /> is returned.</param>
            <param name="bit"><see langword="false" /> to set the bit to 0; <see langword="true" /> to set the bit to 1.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..31, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.SetBit(System.UInt32,System.Int32,System.Boolean)">
            <summary>
            Sets the bit of <paramref name="value" /> at the specified index to either 0 or 1 according to <paramref name="bit" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to be processed.</param>
            <param name="index">The index of the changed bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..31, <paramref name="value" /> is returned.</param>
            <param name="bit"><see langword="false" /> to set the bit to 0; <see langword="true" /> to set the bit to 1.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..31, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.SetBit(System.Int64,System.Int32,System.Boolean)">
            <summary>
            Sets the bit of <paramref name="value" /> at the specified index to either 0 or 1 according to <paramref name="bit" />.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to be processed.</param>
            <param name="index">The index of the changed bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..63, <paramref name="value" /> is returned.</param>
            <param name="bit"><see langword="false" /> to set the bit to 0; <see langword="true" /> to set the bit to 1.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..63, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.SetBit(System.UInt64,System.Int32,System.Boolean)">
            <summary>
            Sets the bit of <paramref name="value" /> at the specified index to either 0 or 1 according to <paramref name="bit" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to be processed.</param>
            <param name="index">The index of the changed bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..63, <paramref name="value" /> is returned.</param>
            <param name="bit"><see langword="false" /> to set the bit to 0; <see langword="true" /> to set the bit to 1.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..63, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.SetBit(System.Int16,System.Int32,System.Boolean)">
            <summary>
            Sets the bit of <paramref name="value" /> at the specified index to either 0 or 1 according to <paramref name="bit" />.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to be processed.</param>
            <param name="index">The index of the changed bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..15, <paramref name="value" /> is returned.</param>
            <param name="bit"><see langword="false" /> to set the bit to 0; <see langword="true" /> to set the bit to 1.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..15, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.SetBit(System.UInt16,System.Int32,System.Boolean)">
            <summary>
            Sets the bit of <paramref name="value" /> at the specified index to either 0 or 1 according to <paramref name="bit" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to be processed.</param>
            <param name="index">The index of the changed bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..15, <paramref name="value" /> is returned.</param>
            <param name="bit"><see langword="false" /> to set the bit to 0; <see langword="true" /> to set the bit to 1.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..15, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.SetBit(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Sets the bit of <paramref name="value" /> at the specified index to either 0 or 1 according to <paramref name="bit" />.
            </summary>
            <param name="value">The <see cref="T:System.Byte" />[] binary to be processed.</param>
            <param name="index">The index of the changed bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of the <see cref="T:System.Byte" />[], this method returns.</param>
            <param name="bit"><see langword="false" /> to set the bit to 0; <see langword="true" /> to set the bit to 1.</param>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.ToggleBit(System.Byte,System.Int32)">
            <summary>
            Toggles the bit of <paramref name="value" /> at the specified index either from 0 to 1 or from 1 to 0.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to be processed.</param>
            <param name="index">The index of the toggled bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..7, <paramref name="value" /> is returned.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..7, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.ToggleBit(System.SByte,System.Int32)">
            <summary>
            Toggles the bit of <paramref name="value" /> at the specified index either from 0 to 1 or from 1 to 0.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to be processed.</param>
            <param name="index">The index of the toggled bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..7, <paramref name="value" /> is returned.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..7, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.ToggleBit(System.Int32,System.Int32)">
            <summary>
            Toggles the bit of <paramref name="value" /> at the specified index either from 0 to 1 or from 1 to 0.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to be processed.</param>
            <param name="index">The index of the toggled bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..31, <paramref name="value" /> is returned.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..31, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.ToggleBit(System.UInt32,System.Int32)">
            <summary>
            Toggles the bit of <paramref name="value" /> at the specified index either from 0 to 1 or from 1 to 0.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to be processed.</param>
            <param name="index">The index of the toggled bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..31, <paramref name="value" /> is returned.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..31, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.ToggleBit(System.Int64,System.Int32)">
            <summary>
            Toggles the bit of <paramref name="value" /> at the specified index either from 0 to 1 or from 1 to 0.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to be processed.</param>
            <param name="index">The index of the toggled bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..63, <paramref name="value" /> is returned.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..63, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.ToggleBit(System.UInt64,System.Int32)">
            <summary>
            Toggles the bit of <paramref name="value" /> at the specified index either from 0 to 1 or from 1 to 0.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to be processed.</param>
            <param name="index">The index of the toggled bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..63, <paramref name="value" /> is returned.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..63, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.ToggleBit(System.Int16,System.Int32)">
            <summary>
            Toggles the bit of <paramref name="value" /> at the specified index either from 0 to 1 or from 1 to 0.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to be processed.</param>
            <param name="index">The index of the toggled bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..15, <paramref name="value" /> is returned.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..15, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.ToggleBit(System.UInt16,System.Int32)">
            <summary>
            Toggles the bit of <paramref name="value" /> at the specified index either from 0 to 1 or from 1 to 0.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to be processed.</param>
            <param name="index">The index of the toggled bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of 0..15, <paramref name="value" /> is returned.</param>
            <returns>
            The modified value. If <paramref name="index" /> is not in the range of 0..15, <paramref name="value" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.ToggleBit(System.Byte[],System.Int32)">
            <summary>
            Toggles the bit of <paramref name="value" /> at the specified index either from 0 to 1 or from 1 to 0.
            </summary>
            <param name="value">The <see cref="T:System.Byte" />[] binary to be processed.</param>
            <param name="index">The index of the toggled bit, where 0 is the least significant bit. If <paramref name="index" /> is not in the range of the <see cref="T:System.Byte" />[], this method returns.</param>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBitArray(System.Byte)">
            <summary>
            Converts the specified <see cref="T:System.Byte" /> value to a <see cref="T:System.Collections.BitArray" />.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to retrieve the bits from.</param>
            <returns>
            An equivalent <see cref="T:System.Collections.BitArray" /> value containing all bits from <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBitArray(System.SByte)">
            <summary>
            Converts the specified <see cref="T:System.SByte" /> value to a <see cref="T:System.Collections.BitArray" />.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to retrieve the bits from.</param>
            <returns>
            An equivalent <see cref="T:System.Collections.BitArray" /> value containing all bits from <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBitArray(System.Int32)">
            <summary>
            Converts the specified <see cref="T:System.Int32" /> value to a <see cref="T:System.Collections.BitArray" />.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to retrieve the bits from.</param>
            <returns>
            An equivalent <see cref="T:System.Collections.BitArray" /> value containing all bits from <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBitArray(System.UInt32)">
            <summary>
            Converts the specified <see cref="T:System.UInt32" /> value to a <see cref="T:System.Collections.BitArray" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to retrieve the bits from.</param>
            <returns>
            An equivalent <see cref="T:System.Collections.BitArray" /> value containing all bits from <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBitArray(System.Int64)">
            <summary>
            Converts the specified <see cref="T:System.Int64" /> value to a <see cref="T:System.Collections.BitArray" />.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to retrieve the bits from.</param>
            <returns>
            An equivalent <see cref="T:System.Collections.BitArray" /> value containing all bits from <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBitArray(System.UInt64)">
            <summary>
            Converts the specified <see cref="T:System.UInt64" /> value to a <see cref="T:System.Collections.BitArray" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to retrieve the bits from.</param>
            <returns>
            An equivalent <see cref="T:System.Collections.BitArray" /> value containing all bits from <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBitArray(System.Int16)">
            <summary>
            Converts the specified <see cref="T:System.Int16" /> value to a <see cref="T:System.Collections.BitArray" />.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to retrieve the bits from.</param>
            <returns>
            An equivalent <see cref="T:System.Collections.BitArray" /> value containing all bits from <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.BitCalculator.GetBitArray(System.UInt16)">
            <summary>
            Converts the specified <see cref="T:System.UInt16" /> value to a <see cref="T:System.Collections.BitArray" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to retrieve the bits from.</param>
            <returns>
            An equivalent <see cref="T:System.Collections.BitArray" /> value containing all bits from <paramref name="value" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Mathematics.DateTimeEx">
            <summary>
            Provides constants and <see langword="static" /> methods that extend the <see cref="T:System.DateTime" /> class.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.DateTimeEx.AverageDaysInYear">
            <summary>
            Represents the average days per year as a <see cref="T:System.Double" /> value. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.DateTimeEx.AverageDaysInMonth">
            <summary>
            Represents the average days per month as a <see cref="T:System.Double" /> value. This field is constant.
            </summary>
        </member>
        <member name="M:BytecodeApi.Mathematics.DateTimeEx.ConvertUnixTimeStamp(System.UInt32)">
            <summary>
            Converts a <see cref="T:System.UInt32" /> value representing a unix time stamp to a <see cref="T:System.DateTime" /> object, using the <see cref="F:System.DateTimeKind.Unspecified" /> kind.
            </summary>
            <param name="seconds">The seconds starting from 01.01.1970 00:00:00.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the sum of 01.01.1970 00:00:00 and <paramref name="seconds" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.DateTimeEx.ConvertUnixTimeStamp(System.UInt32,System.DateTimeKind)">
            <summary>
            Converts a <see cref="T:System.UInt32" /> value representing a unix time stamp to a <see cref="T:System.DateTime" /> object, using the specified <see cref="T:System.DateTimeKind" />.
            </summary>
            <param name="seconds">The seconds starting from 01.01.1970 00:00:00.</param>
            <param name="kind">The <see cref="T:System.DateTimeKind" /> to be used for creation of the <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the sum of 01.01.1970 00:00:00 and <paramref name="seconds" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.DateTimeEx.ConvertUnixTimeStamp(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime" /> value to its equivalent unix time stamp represented as a <see cref="T:System.UInt32" /> value, using the specified <see cref="T:System.DateTimeKind" />. If <paramref name="dateTime" /> is out of bounds of the unix epoch, <see langword="null" /> is returned.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime" /> object which is converted to its equivalent unix time stamp representation.</param>
            <returns>
            If <paramref name="dateTime" /> is in bounds of the unix epoch, the amount of seconds between 01.01.1970 00:00:00 and <paramref name="dateTime" />;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.DateTimeEx.ConvertUnixTimeStamp(System.DateTime,System.DateTimeKind)">
            <summary>
            Converts a <see cref="T:System.DateTime" /> value to its equivalent unix time stamp represented as a <see cref="T:System.UInt32" /> value, using the <see cref="F:System.DateTimeKind.Unspecified" /> kind. If <paramref name="dateTime" /> is out of bounds of the unix epoch, <see langword="null" /> is returned.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime" /> object which is converted to its equivalent unix time stamp representation.</param>
            <param name="kind">The <see cref="T:System.DateTimeKind" /> to be used for conversion of the <see cref="T:System.DateTime" /> object.</param>
            <returns>
            If <paramref name="dateTime" /> is in bounds of the unix epoch, the amount of seconds between 01.01.1970 00:00:00 and <paramref name="dateTime" />;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.DateTimeEx.CalculateAgeFromBirthday(System.DateTime)">
            <summary>
            Calculates the age from a birthday.
            </summary>
            <param name="birthday">A <see cref="T:System.DateTime" /> value representing the birhtday to calculate the age from.</param>
            <returns>
            An equivalent <see cref="T:System.Int32" /> value representing an age, calculated from <paramref name="birthday" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.DateTimeEx.CalculateAgeFromBirthday(System.DateTime,System.DateTime)">
            <summary>
            Calculates the age from a birthday at a specified point in time.
            </summary>
            <param name="birthday">A <see cref="T:System.DateTime" /> value representing the birhtday to calculate the age from.</param>
            <param name="now">A <see cref="T:System.DateTime" /> value representing the current time stamp. This is usually <see cref="P:System.DateTime.Now" />.</param>
            <returns>
            An equivalent <see cref="T:System.Int32" /> value representing an age, calculated from <paramref name="birthday" /> and <paramref name="now" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Mathematics.Deferrer">
            <summary>
            Provoides a wrapper for <see cref="T:System.Action" /> objects to be deferred.
            <para>Example: A search TextBox, where the search is performed 0.5 seconds after typing activity stopped</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.Mathematics.Deferrer.Delay">
            <summary>
            Gets or sets the amount of time that needs to pass between consecutive calls to <see cref="M:BytecodeApi.Mathematics.Deferrer.Invoke(System.Action)" />, before the speficied <see cref="T:System.Action" /> is invoked.
            </summary>
        </member>
        <member name="P:BytecodeApi.Mathematics.Deferrer.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:BytecodeApi.Mathematics.Deferrer" /> is enabled. If set to <see langword="false" />, invocations are not handled.
            </summary>
        </member>
        <member name="P:BytecodeApi.Mathematics.Deferrer.DefaultAction">
            <summary>
            Gets or sets an <see cref="T:System.Action" /> that is used when <see cref="M:BytecodeApi.Mathematics.Deferrer.InvokeDefault" /> is called. This property does not change the behavior or <see cref="M:BytecodeApi.Mathematics.Deferrer.Invoke(System.Action)" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Mathematics.Deferrer.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Mathematics.Deferrer" /> class with the specified delay.
            </summary>
            <param name="delay">The amount of time that needs to pass between a consecutive call to <see cref="M:BytecodeApi.Mathematics.Deferrer.Invoke(System.Action)" />, before the speficied <see cref="T:System.Action" /> is invoked.</param>
        </member>
        <member name="M:BytecodeApi.Mathematics.Deferrer.#ctor(System.TimeSpan,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Mathematics.Deferrer" /> class with the specified delay and default action.
            </summary>
            <param name="delay">The amount of time that needs to pass between a consecutive call to <see cref="M:BytecodeApi.Mathematics.Deferrer.Invoke(System.Action)" />, before the speficied <see cref="T:System.Action" /> is invoked.</param>
            <param name="defaultAction">An <see cref="T:System.Action" /> that is used when <see cref="M:BytecodeApi.Mathematics.Deferrer.InvokeDefault" /> is called. This parameter does not change the behavior or <see cref="M:BytecodeApi.Mathematics.Deferrer.Invoke(System.Action)" />.</param>
        </member>
        <member name="M:BytecodeApi.Mathematics.Deferrer.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Mathematics.Deferrer" /> class with the specified delay.
            </summary>
            <param name="delay">The amount of time in milliseconds that needs to pass between a consecutive call to <see cref="M:BytecodeApi.Mathematics.Deferrer.Invoke(System.Action)" />, before the speficied <see cref="T:System.Action" /> is invoked.</param>
        </member>
        <member name="M:BytecodeApi.Mathematics.Deferrer.#ctor(System.Int32,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Mathematics.Deferrer" /> class with the specified delay.
            </summary>
            <param name="delay">The amount of time in milliseconds that needs to pass between a consecutive call to <see cref="M:BytecodeApi.Mathematics.Deferrer.Invoke(System.Action)" />, before the speficied <see cref="T:System.Action" /> is invoked.</param>
            <param name="defaultAction">An <see cref="T:System.Action" /> that is used when <see cref="M:BytecodeApi.Mathematics.Deferrer.InvokeDefault" /> is called. This parameter does not change the behavior or <see cref="M:BytecodeApi.Mathematics.Deferrer.Invoke(System.Action)" />.</param>
        </member>
        <member name="M:BytecodeApi.Mathematics.Deferrer.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:BytecodeApi.Mathematics.Deferrer" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.Mathematics.Deferrer.Invoke(System.Action)">
            <summary>
            Invokes <paramref name="action" />, if the last call to <see cref="M:BytecodeApi.Mathematics.Deferrer.Invoke(System.Action)" /> was longer ago than <see cref="P:BytecodeApi.Mathematics.Deferrer.Delay" />.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
        </member>
        <member name="M:BytecodeApi.Mathematics.Deferrer.Invoke(System.Action,System.Boolean)">
            <summary>
            Invokes <paramref name="action" />, if the last call to <see cref="M:BytecodeApi.Mathematics.Deferrer.Invoke(System.Action)" /> was longer ago than <see cref="P:BytecodeApi.Mathematics.Deferrer.Delay" />.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
            <param name="now"><see langword="true" /> to always invoke <paramref name="action" />, regardless of <see cref="P:BytecodeApi.Mathematics.Deferrer.Delay" />.</param>
        </member>
        <member name="M:BytecodeApi.Mathematics.Deferrer.InvokeDefault">
            <summary>
            Invokes <see cref="P:BytecodeApi.Mathematics.Deferrer.DefaultAction" />, if the last call to <see cref="M:BytecodeApi.Mathematics.Deferrer.InvokeDefault" /> was longer ago than <see cref="P:BytecodeApi.Mathematics.Deferrer.Delay" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Mathematics.Deferrer.InvokeDefault(System.Boolean)">
            <summary>
            Invokes <see cref="P:BytecodeApi.Mathematics.Deferrer.DefaultAction" />, if the last call to <see cref="M:BytecodeApi.Mathematics.Deferrer.InvokeDefault" /> was longer ago than <see cref="P:BytecodeApi.Mathematics.Deferrer.Delay" />.
            </summary>
            <param name="now"><see langword="true" /> to always invoke <see cref="P:BytecodeApi.Mathematics.Deferrer.DefaultAction" />, regardless of <see cref="P:BytecodeApi.Mathematics.Deferrer.Delay" />.</param>
        </member>
        <member name="T:BytecodeApi.Mathematics.AngleType">
            <summary>
            Specifies the unit in which an angle is measured.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.AngleType.Radians">
            <summary>
            The angle is measured in radians.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.AngleType.Degrees">
            <summary>
            The angle is measured in degrees.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.AngleType.Gradians">
            <summary>
            The angle is measured in gradians.
            </summary>
        </member>
        <member name="T:BytecodeApi.Mathematics.MathEx">
            <summary>
            Provides <see langword="static" /> methods that extend the <see cref="T:System.Math" /> class.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.MathEx.Random">
            <summary>
            Represents a singleton <see cref="T:System.Random" /> object. This field is read-only.
            </summary>
        </member>
        <member name="F:BytecodeApi.Mathematics.MathEx.RandomNumberGenerator">
            <summary>
            Represents a singleton <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object. This field is read-only.
            </summary>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Sin(System.Double,BytecodeApi.Mathematics.AngleType)">
            <summary>
            Returns the sine of the specified angle, considering the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value representing an angle, measured in the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.Mathematics.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            The sine of <paramref name="value" />.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Sinh(System.Double,BytecodeApi.Mathematics.AngleType)">
            <summary>
            Returns the hyperbolic sine of the specified angle, considering the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value representing an angle, measured in the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.Mathematics.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            The hyperbolic sine of <paramref name="value" />.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Cos(System.Double,BytecodeApi.Mathematics.AngleType)">
            <summary>
            Returns the cosine of the specified angle, considering the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value representing an angle, measured in the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.Mathematics.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            The cosine of <paramref name="value" />.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Cosh(System.Double,BytecodeApi.Mathematics.AngleType)">
            <summary>
            Returns the hyperbolic cosine of the specified angle, considering the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value representing an angle, measured in the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.Mathematics.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            The hyperbolic cosine of <paramref name="value" />.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Tan(System.Double,BytecodeApi.Mathematics.AngleType)">
            <summary>
            Returns the tangent of the specified angle, considering the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value representing an angle, measured in the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.Mathematics.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            The tangent of <paramref name="value" />.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Tanh(System.Double,BytecodeApi.Mathematics.AngleType)">
            <summary>
            Returns the hyperbolic tangent of the specified angle, considering the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value representing an angle, measured in the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.Mathematics.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            The hyperbolic tangent of <paramref name="value" />.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.0.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.0.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Asin(System.Double,BytecodeApi.Mathematics.AngleType)">
            <summary>
            Returns the angle whose sine is the specified number, considering the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.
            </summary>
            <param name="value">A number representing a sine, where <paramref name="value" /> must be greater than or equal to -1.0 and less than or equal to 1.0.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.Mathematics.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            An angle,
            or <see cref="F:System.Double.NaN" />, if <paramref name="value" /> &lt; -1.0, <paramref name="value" /> &gt; 1.0 or if <paramref name="value" /> equals <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Acos(System.Double,BytecodeApi.Mathematics.AngleType)">
            <summary>
            Returns the angle whose cosine is the specified number, considering the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.
            </summary>
            <param name="value">A number representing a cosine, where <paramref name="value" /> must be greater than or equal to -1.0 and less than or equal to 1.0.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.Mathematics.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            An angle,
            or <see cref="F:System.Double.NaN" />, if <paramref name="value" /> &lt; -1.0, <paramref name="value" /> &gt; 1.0 or if <paramref name="value" /> equals <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Atan(System.Double,BytecodeApi.Mathematics.AngleType)">
            <summary>
            Returns the angle whose tangent is the specified number, considering the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.
            </summary>
            <param name="value">A number representing a tangent.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.Mathematics.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            An angle, such that -π/2 ≤ θ ≤ π/2,
            or <see cref="F:System.Double.NaN" />, if <paramref name="value" /> equals <see cref="F:System.Double.NaN" />,
            -π/2, if <paramref name="value" /> equals <see cref="F:System.Double.NegativeInfinity" />,
            or π/2, if <paramref name="value" /> equals <see cref="F:System.Double.PositiveInfinity" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Atan2(System.Double,System.Double,BytecodeApi.Mathematics.AngleType)">
            <summary>
            Returns the angle whose tangent is the quotient of two specified numbers, considering the specified <see cref="T:BytecodeApi.Mathematics.AngleType" />.
            </summary>
            <param name="y">The y coordinate of a point.</param>
            <param name="x">The x coordinate of a point.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.Mathematics.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            An angle, such that -π ≤ θ ≤ π, and tan(θ) = <paramref name="y" /> / x, where (x, <paramref name="y" />) is a point in the Cartesian plane.
            If <paramref name="x" /> or <paramref name="y" /> is
            <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or
            <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Hypotenuse(System.Double,System.Double)">
            <summary>
            Returns the hypotenuse of a triangle.
            </summary>
            <param name="x">The first side of the triangle.</param>
            <param name="y">The second side of the triangle.</param>
            <returns>
            The hypotenuse of the triangle.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Hypotenuse(System.Double,System.Double,System.Double)">
            <summary>
            Returns the hypotenuse of a triangle.
            </summary>
            <param name="x">The first side of the triangle.</param>
            <param name="y">The second side of the triangle.</param>
            <param name="z">The third side of the triangle.</param>
            <returns>
            The hypotenuse of the triangle.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.ConvertAngle(System.Double,BytecodeApi.Mathematics.AngleType,BytecodeApi.Mathematics.AngleType)">
            <summary>
            Converts an angle from one <see cref="T:BytecodeApi.Mathematics.AngleType" /> to another.
            </summary>
            <param name="angle">A <see cref="T:System.Double" /> value representing an angle, measured in the <see cref="T:BytecodeApi.Mathematics.AngleType" /> specifyed by <paramref name="sourceType" />.</param>
            <param name="sourceType">The <see cref="T:BytecodeApi.Mathematics.AngleType" /> in which <paramref name="angle" /> is represented.</param>
            <param name="destType">The <see cref="T:BytecodeApi.Mathematics.AngleType" /> to which <paramref name="angle" /> is converted.</param>
            <returns>
            A <see cref="T:System.Double" /> value representing the angle that has been converted from <paramref name="sourceType" /> to <paramref name="destType" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Sign(System.TimeSpan)">
            <summary>
            Returns an integer that indicates the sign of a <see cref="T:System.TimeSpan" /> value.
            </summary>
            <param name="value"><see cref="T:System.TimeSpan" /> value.</param>
            <returns>
            A number that indicates the sign of <paramref name="value" />.
            If <paramref name="value" /> is less than zero, -1 is returned; If <paramref name="value" /> is greater zero, 1 is returned; otherwise, 0 is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Min(System.DateTime,System.DateTime)">
            <summary>
            Returns the smaller of two <see cref="T:System.DateTime" /> objects.
            </summary>
            <param name="a">The first of two <see cref="T:System.DateTime" /> objects to compare.</param>
            <param name="b">The second of two <see cref="T:System.DateTime" /> objects to compare.</param>
            <returns>
            Parameter <paramref name="a" /> or <paramref name="b" />, whichever is smaller.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Min(System.TimeSpan,System.TimeSpan)">
            <summary>
            Returns the smaller of two <see cref="T:System.TimeSpan" /> objects.
            </summary>
            <param name="a">The first of two <see cref="T:System.TimeSpan" /> objects to compare.</param>
            <param name="b">The second of two <see cref="T:System.TimeSpan" /> objects to compare.</param>
            <returns>
            Parameter <paramref name="a" /> or <paramref name="b" />, whichever is smaller.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Min``1(``0,``0)">
            <summary>
            Returns the smaller of two <see cref="T:System.IComparable" /> objects.
            </summary>
            <typeparam name="T">The type of the parameters to compare.</typeparam>
            <param name="a">The first of two <see cref="T:System.IComparable" /> objects to compare.</param>
            <param name="b">The second of two <see cref="T:System.IComparable" /> objects to compare.</param>
            <returns>
            Parameter <paramref name="a" /> or <paramref name="b" />, whichever is smaller.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Max(System.DateTime,System.DateTime)">
            <summary>
            Returns the larger of two <see cref="T:System.DateTime" /> objects.
            </summary>
            <param name="a">The first of two <see cref="T:System.DateTime" /> objects to compare.</param>
            <param name="b">The second of two <see cref="T:System.DateTime" /> objects to compare.</param>
            <returns>
            Parameter <paramref name="a" /> or <paramref name="b" />, whichever is larger.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Max(System.TimeSpan,System.TimeSpan)">
            <summary>
            Returns the larger of two <see cref="T:System.TimeSpan" /> objects.
            </summary>
            <param name="a">The first of two <see cref="T:System.TimeSpan" /> objects to compare.</param>
            <param name="b">The second of two <see cref="T:System.TimeSpan" /> objects to compare.</param>
            <returns>
            Parameter <paramref name="a" /> or <paramref name="b" />, whichever is larger.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Max``1(``0,``0)">
            <summary>
            Returns the larger of two <see cref="T:System.IComparable" /> objects.
            </summary>
            <typeparam name="T">The type of the parameters to compare.</typeparam>
            <param name="a">The first of two <see cref="T:System.IComparable" /> objects to compare.</param>
            <param name="b">The second of two <see cref="T:System.IComparable" /> objects to compare.</param>
            <returns>
            Parameter <paramref name="a" /> or <paramref name="b" />, whichever is larger.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Map(System.Byte,System.Byte,System.Byte)">
            <summary>
            Returns a <see cref="T:System.Byte" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Byte" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Byte" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Map(System.SByte,System.SByte,System.SByte)">
            <summary>
            Returns a <see cref="T:System.SByte" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.SByte" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.SByte" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Map(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Returns a <see cref="T:System.Decimal" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Decimal" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Decimal" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Map(System.Double,System.Double,System.Double)">
            <summary>
            Returns a <see cref="T:System.Double" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Double" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Double" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Map(System.Single,System.Single,System.Single)">
            <summary>
            Returns a <see cref="T:System.Single" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Single" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Single" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Map(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a <see cref="T:System.Int32" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Int32" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Int32" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Map(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Returns a <see cref="T:System.UInt32" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.UInt32" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.UInt32" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Map(System.Int64,System.Int64,System.Int64)">
            <summary>
            Returns a <see cref="T:System.Int64" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Int64" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Int64" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Map(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Returns a <see cref="T:System.UInt64" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.UInt64" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.UInt64" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Map(System.Int16,System.Int16,System.Int16)">
            <summary>
            Returns a <see cref="T:System.Int16" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Int16" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Int16" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Map(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Returns a <see cref="T:System.UInt16" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.UInt16" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.UInt16" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Map(System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Returns a <see cref="T:System.DateTime" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.DateTime" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.DateTime" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.DateTime" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Map(System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Returns a <see cref="T:System.TimeSpan" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.TimeSpan" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.TimeSpan" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Interpolate(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Interpolates the specified <see cref="T:System.Decimal" /> value by scaling its expected range to another. The result is not clipped.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Decimal" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Decimal" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Decimal" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Decimal" /> value indicating the resulting maximum of the new value range.</param>
            <returns>
            A <see cref="T:System.Decimal" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />. The result is not clipped.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Interpolate(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Boolean)">
            <summary>
            Interpolates the specified <see cref="T:System.Decimal" /> value by scaling its expected range to another. If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Decimal" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Decimal" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Decimal" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Decimal" /> value indicating the resulting maximum of the new value range.</param>
            <param name="mapToValueRange"><see langword="true" /> to clip the result to the new value range.</param>
            <returns>
            A <see cref="T:System.Decimal" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />.
            If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Interpolate(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Interpolates the specified <see cref="T:System.Double" /> value by scaling its expected range to another. The result is not clipped.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Double" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Double" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Double" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Double" /> value indicating the resulting maximum of the new value range.</param>
            <returns>
            A <see cref="T:System.Double" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />. The result is not clipped.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Interpolate(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Interpolates the specified <see cref="T:System.Double" /> value by scaling its expected range to another. If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Double" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Double" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Double" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Double" /> value indicating the resulting maximum of the new value range.</param>
            <param name="mapToValueRange"><see langword="true" /> to clip the result to the new value range.</param>
            <returns>
            A <see cref="T:System.Double" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />.
            If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Interpolate(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Interpolates the specified <see cref="T:System.Single" /> value by scaling its expected range to another. The result is not clipped.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Single" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Single" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Single" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Single" /> value indicating the resulting maximum of the new value range.</param>
            <returns>
            A <see cref="T:System.Single" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />. The result is not clipped.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Interpolate(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Interpolates the specified <see cref="T:System.Single" /> value by scaling its expected range to another. If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Single" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Single" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Single" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Single" /> value indicating the resulting maximum of the new value range.</param>
            <param name="mapToValueRange"><see langword="true" /> to clip the result to the new value range.</param>
            <returns>
            A <see cref="T:System.Single" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />.
            If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Interpolate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Interpolates the specified <see cref="T:System.Int32" /> value by scaling its expected range to another. The result is not clipped.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Int32" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Int32" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Int32" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Int32" /> value indicating the resulting maximum of the new value range.</param>
            <returns>
            A <see cref="T:System.Int32" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />. The result is not clipped.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Interpolate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Interpolates the specified <see cref="T:System.Int32" /> value by scaling its expected range to another. If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Int32" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Int32" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Int32" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Int32" /> value indicating the resulting maximum of the new value range.</param>
            <param name="mapToValueRange"><see langword="true" /> to clip the result to the new value range.</param>
            <returns>
            A <see cref="T:System.Int32" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />.
            If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.GreatestCommonDivisor(System.Int32,System.Int32)">
            <summary>
            Computes the greatest common divisor of two <see cref="T:System.Int32" /> values.
            </summary>
            <param name="a">The first <see cref="T:System.Int32" /> value.</param>
            <param name="b">The second <see cref="T:System.Int32" /> value.</param>
            <returns>
            The greatest common divisor of <paramref name="a" /> and <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.GreatestCommonDivisor(System.Int32[])">
            <summary>
            Computes the greatest common divisor of a collection of <see cref="T:System.Int32" /> values.
            </summary>
            <param name="values">The collection of <see cref="T:System.Int32" /> values.</param>
            <returns>
            The greatest common divisor of the values in the <paramref name="values" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.GreatestCommonDivisor(System.Int64,System.Int64)">
            <summary>
            Computes the greatest common divisor of two <see cref="T:System.Int64" /> values.
            </summary>
            <param name="a">The first <see cref="T:System.Int64" /> value.</param>
            <param name="b">The second <see cref="T:System.Int64" /> value.</param>
            <returns>
            The greatest common divisor of <paramref name="a" /> and <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.GreatestCommonDivisor(System.Int64[])">
            <summary>
            Computes the greatest common divisor of a collection of <see cref="T:System.Int64" /> values.
            </summary>
            <param name="values">The collection of <see cref="T:System.Int64" /> values.</param>
            <returns>
            The greatest common divisor of the values in the <paramref name="values" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.LeastCommonMultiple(System.Int32,System.Int32)">
            <summary>
            Computes the least common multiple of two <see cref="T:System.Int32" /> values.
            </summary>
            <param name="a">The first <see cref="T:System.Int32" /> value.</param>
            <param name="b">The second <see cref="T:System.Int32" /> value.</param>
            <returns>
            The least common multiple of <paramref name="a" /> and <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.LeastCommonMultiple(System.Int32[])">
            <summary>
            Computes the least common multiple of an array of <see cref="T:System.Int32" /> values.
            </summary>
            <param name="values">The array of <see cref="T:System.Int32" /> values to compute the least common multiple from.</param>
            <returns>
            The least common multiple of all <see cref="T:System.Int32" /> values.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.LeastCommonMultiple(System.Int64,System.Int64)">
            <summary>
            Computes the least common multiple of two <see cref="T:System.Int64" /> values.
            </summary>
            <param name="a">The first <see cref="T:System.Int64" /> value.</param>
            <param name="b">The second <see cref="T:System.Int64" /> value.</param>
            <returns>
            The least common multiple of <paramref name="a" /> and <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.LeastCommonMultiple(System.Int64[])">
            <summary>
            Computes the least common multiple of an array of <see cref="T:System.Int64" /> values.
            </summary>
            <param name="values">The array of <see cref="T:System.Int64" /> values to compute the least common multiple from.</param>
            <returns>
            The least common multiple of all <see cref="T:System.Int64" /> values.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.IsPrimeNumber(System.Int32)">
            <summary>
            Determines whether <paramref name="n" /> is a prime number.
            </summary>
            <param name="n">A <see cref="T:System.Int32" /> value specifying the number to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="n" /> is a prime number;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.IsPrimeNumber(System.Int64)">
            <summary>
            Determines whether <paramref name="n" /> is a prime number.
            </summary>
            <param name="n">A <see cref="T:System.Int64" /> value specifying the number to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="n" /> is a prime number;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.ComputePrimeNumbers(System.Int32)">
            <summary>
            Computes the prime numbers between 0 and <paramref name="n" />. A <see cref="T:System.Collections.BitArray" /> with <paramref name="n" /> elements is returned, where a <see cref="T:System.Boolean" /> value at any given index indicates whether the number is a prime number.
            </summary>
            <param name="n">A <see cref="T:System.Int32" /> value specifying the range of numbers to check, where computation of numbers applies to values between 0 and <paramref name="n" />-1.</param>
            <returns>
            A <see cref="T:System.Collections.BitArray" /> with <paramref name="n" /> elements, where a <see cref="T:System.Boolean" /> value at any given index indicates whether the number is a prime number.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.ComputePrimeFactors(System.Int32)">
            <summary>
            Computes all prime factors of the specified <see cref="T:System.Int32" /> value.
            </summary>
            <param name="n">The <see cref="T:System.Int32" /> to compute its prime factors from.</param>
            <returns>
            A <see cref="T:System.Int32" />[] containing all prime factors of <paramref name="n" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.ComputePrimeFactors(System.Int64)">
            <summary>
            Computes all prime factors of the specified <see cref="T:System.Int64" /> value.
            </summary>
            <param name="n">The <see cref="T:System.Int64" /> to compute its prime factors from.</param>
            <returns>
            A <see cref="T:System.Int64" />[] containing all prime factors of <paramref name="n" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.ComputeFactorial(System.Int32)">
            <summary>
            Computes the factorial of a number.
            <para>Example: Factorial(6) = 1*2*3*4*5*6</para>
            </summary>
            <param name="n">The value to compute the factorial from. If <paramref name="n" /> is greater than 20, an <see cref="T:System.OverflowException" /> will be raised. For larger numbers, use <see cref="M:BytecodeApi.Mathematics.MathEx.ComputeFactorialBig(System.Int32)" />.</param>
            <returns>
            The factorial of <paramref name="n" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.ComputeFactorialBig(System.Int32)">
            <summary>
            Computes the factorial of a number and returns a <see cref="T:System.Numerics.BigInteger" /> value.
            <para>Example: Factorial(6) = 1*2*3*4*5*6</para>
            </summary>
            <param name="n">The value to compute the factorial from.</param>
            <returns>
            The factorial of <paramref name="n" />, represented as a <see cref="T:System.Numerics.BigInteger" /> value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.Fibonacci(System.Int32)">
            <summary>
            Computes the Fibonacci value at position <paramref name="n" />.
            </summary>
            <param name="n">A <see cref="T:System.Int32" /> value specifying the position of the Fibonacci value. If <paramref name="n" /> is greater than 91, an <see cref="T:System.OverflowException" /> will be raised.</param>
            <returns>
            The Fibonacci value at position <paramref name="n" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.FibonacciBig(System.Int32)">
            <summary>
            Computes the Fibonacci value at position <paramref name="n" /> and returns a <see cref="T:System.Numerics.BigInteger" /> value.
            </summary>
            <param name="n">A <see cref="T:System.Int32" /> value specifying the position of the Fibonacci value.</param>
            <returns>
            The Fibonacci value at position <paramref name="n" />, represented as a <see cref="T:System.Numerics.BigInteger" /> value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.EnumerateFibonacci(System.Int32)">
            <summary>
            Returns an enumerable of Fibonacci values that yields <paramref name="n" /> elements.
            </summary>
            <param name="n">A <see cref="T:System.Int32" /> value specifying the number of Fibonacci values to compute. If <paramref name="n" /> is greater than 91, an <see cref="T:System.OverflowException" /> will be raised.</param>
            <returns>
            An enumerable of Fibonacci values that yields <paramref name="n" /> elements.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.MathEx.EnumerateFibonacciBig(System.Int32)">
            <summary>
            Returns an enumerable of Fibonacci values that yields <paramref name="n" /> <see cref="T:System.Numerics.BigInteger" /> elements.
            </summary>
            <param name="n">A <see cref="T:System.Int32" /> value specifying the number of Fibonacci values to compute.</param>
            <returns>
            An enumerable of Fibonacci values that yields <paramref name="n" /> <see cref="T:System.Numerics.BigInteger" /> elements.
            </returns>
        </member>
        <member name="T:BytecodeApi.Mathematics.Range`1">
            <summary>
            Represents a generic range of two numeric values that implement <see cref="T:System.IComparable" />.
            </summary>
            <typeparam name="T">The type of the two numeric values.</typeparam>
        </member>
        <member name="P:BytecodeApi.Mathematics.Range`1.Min">
            <summary>
            Gets or sets the minimum value of this <see cref="T:BytecodeApi.Mathematics.Range`1" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.Mathematics.Range`1.Max">
            <summary>
            Gets or sets the maximum value of this <see cref="T:BytecodeApi.Mathematics.Range`1" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Mathematics.Range`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Mathematics.Range`1" /> structure to the values indicated by <paramref name="min" /> and <paramref name="max" />.
            </summary>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
        </member>
        <member name="M:BytecodeApi.Mathematics.Range`1.IntersectsWith(BytecodeApi.Mathematics.Range{`0})">
            <summary>
            Determines if this <see cref="T:BytecodeApi.Mathematics.Range`1" /> intersects with <paramref name="range" />.
            </summary>
            <param name="range">A <see cref="T:BytecodeApi.Mathematics.Range`1" /> to intersect.</param>
            <returns>
            <see langword="true" />, if there is any intersection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.Range`1.IsInside(BytecodeApi.Mathematics.Range{`0})">
            <summary>
            Determines if <paramref name="range" /> lies within this <see cref="T:BytecodeApi.Mathematics.Range`1" />.
            </summary>
            <param name="range">A <see cref="T:BytecodeApi.Mathematics.Range`1" /> to compare.</param>
            <returns>
            <see langword="true" />, if <paramref name="range" /> lies within this <see cref="T:BytecodeApi.Mathematics.Range`1" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.Range`1.IsInside(`0)">
            <summary>
            Determines if <paramref name="value" /> lies within this <see cref="T:BytecodeApi.Mathematics.Range`1" />.
            </summary>
            <param name="value">The value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> lies within this <see cref="T:BytecodeApi.Mathematics.Range`1" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.Range`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <see langword="true" />, if the specified <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.Range`1.Equals(BytecodeApi.Mathematics.Range{`0})">
            <summary>
            Determines whether this instance is equal to another <see cref="T:BytecodeApi.Mathematics.Range`1" />.
            </summary>
            <param name="other">The <see cref="T:BytecodeApi.Mathematics.Range`1" /> to compare to this instance.</param>
            <returns>
            <see langword="true" />, if this instance is equal to the <paramref name="other" /> parameter;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.Range`1.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:BytecodeApi.Mathematics.Range`1" />.
            </summary>
            <returns>
            The hash code for this <see cref="T:BytecodeApi.Mathematics.Range`1" /> instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.Range`1.op_Equality(BytecodeApi.Mathematics.Range{`0},BytecodeApi.Mathematics.Range{`0})">
            <summary>
            Compares two <see cref="T:BytecodeApi.Mathematics.Range`1" /> instances for equality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.Mathematics.Range`1" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.Mathematics.Range`1" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.Mathematics.Range`1" /> are equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Mathematics.Range`1.op_Inequality(BytecodeApi.Mathematics.Range{`0},BytecodeApi.Mathematics.Range{`0})">
            <summary>
            Compares two <see cref="T:BytecodeApi.Mathematics.Range`1" /> instances for inequality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.Mathematics.Range`1" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.Mathematics.Range`1" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.Mathematics.Range`1" /> are not equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.SingletonBucketBase`1">
            <summary>
            Represents the base class for singleton buckets. Derived classes can specify <see langword="static" /> properties that use the <see cref="M:BytecodeApi.SingletonBucketBase`1.Get``1" /> and <see cref="M:BytecodeApi.SingletonBucketBase`1.Set``1(``0)" /> methods. Each class that inherits <see cref="T:BytecodeApi.SingletonBucketBase`1" /> has its own scope for singleton objects, defined by <typeparamref name="TBucket" />. Each property must be of a different type. This is an abstract class.
            <para>Example class: <see langword="public" /> <see langword="class" /> AppSingletons : SingletonBucketBase&lt;AppSingletons&gt;</para>
            <para>Example property: <see langword="public" /> <see langword="static" /> <see cref="T:System.Windows.Window" /> MainWindow { <see langword="get" /> => Get&lt;Window&gt;(); <see langword="set" /> => Set(value); }</para>
            </summary>
            <typeparam name="TBucket">The class type that defines the scope for the derived class. This type parameter should be the derived class itself.</typeparam>
        </member>
        <member name="M:BytecodeApi.SingletonBucketBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.SingletonBucketBase`1" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.SingletonBucketBase`1.Exists``1">
            <summary>
            Gets a value indicating whether the singleton <see cref="T:System.Object" /> of the specified type exists.
            </summary>
            <typeparam name="T">The type that identifies the class of the singleton <see cref="T:System.Object" />.</typeparam>
            <returns>
            <see langword="true" />, if the singleton <see cref="T:System.Object" /> of the specified type exists;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.SingletonBucketBase`1.Get``1">
            <summary>
            Gets the singleton <see cref="T:System.Object" /> of the specified type. If not found, an exception is thrown.
            </summary>
            <typeparam name="T">The type that identifies the class of the singleton <see cref="T:System.Object" />.</typeparam>
            <returns>
            The singleton <see cref="T:System.Object" /> of the specified type. If not found, an exception is thrown.
            </returns>
        </member>
        <member name="M:BytecodeApi.SingletonBucketBase`1.Get``1(System.Boolean)">
            <summary>
            Gets the singleton <see cref="T:System.Object" /> of the specified type. If not found, an exception is thrown. <paramref name="create" /> can be set to <see langword="true" /> to create an instance, if it does not yet exist.
            </summary>
            <typeparam name="T">The type that identifies the class of the singleton <see cref="T:System.Object" />.</typeparam>
            <returns>
            The singleton <see cref="T:System.Object" /> of the specified type. If not found and <paramref name="create" /> is <see langword="false" />, an exception is thrown.
            </returns>
        </member>
        <member name="M:BytecodeApi.SingletonBucketBase`1.Set``1(``0)">
            <summary>
            Sets the singleton <see cref="T:System.Object" /> of the specified type. If it was already set, an exception is thrown.
            </summary>
            <typeparam name="T">The type that identifies the class of the singleton <see cref="T:System.Object" />.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> that represents the singleton of <typeparamref name="T" />.</param>
        </member>
        <member name="M:BytecodeApi.SingletonBucketBase`1.Set``1(``0,System.Boolean)">
            <summary>
            Sets the singleton <see cref="T:System.Object" /> of the specified type. If it was already set, an exception is thrown. <paramref name="overwrite" /> can be set to <see langword="true" /> to allow the singleton <see cref="T:System.Object" /> to be mutable.
            </summary>
            <typeparam name="T">The type that identifies the class of the singleton <see cref="T:System.Object" />.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> that represents the singleton of <typeparamref name="T" />.</param>
            <param name="overwrite"><see langword="true" /> to allow the singleton <see cref="T:System.Object" /> to be mutable; <see langword="false" /> to throw an exception, if the singleton <see cref="T:System.Object" /> was already set.</param>
        </member>
        <member name="T:BytecodeApi.EnumEx">
            <summary>
            Provides <see langword="static" /> methods that extend the <see cref="T:System.Enum" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.EnumEx.GetValues(System.Type)">
            <summary>
            Returns an array of the values of the constants in the specified <see cref="T:System.Enum" /> type.
            </summary>
            <param name="enumType">The type of the <see cref="T:System.Enum" /> to be processed.</param>
            <returns>
            A new array of the values of the constants in the specified <see cref="T:System.Enum" /> type.
            </returns>
        </member>
        <member name="M:BytecodeApi.EnumEx.GetValues``1">
            <summary>
            Returns an array of the values of the constants in the specified <see cref="T:System.Enum" /> type, casted to <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The element type of the returned <see cref="T:System.Array" />.</typeparam>
            <returns>
            A new array of the values of the constants in the specified <see cref="T:System.Enum" /> type, casted to <typeparamref name="T" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.EnumEx.GetDescriptionLookup(System.Type)">
            <summary>
            Gets a lookup <see cref="T:System.Collections.Generic.Dictionary`2" /> with all distinct <see langword="enum" /> values and descriptions for the specified <see cref="T:System.Enum" /> type. The description is taken from the <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> attribute, or <see langword="null" />, if the attribute was not found.
            </summary>
            <param name="enumType">The type of the <see cref="T:System.Enum" /> to be processed.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> with all <see langword="enum" /> values and descriptions for the specified <see cref="T:System.Enum" /> type.
            </returns>
        </member>
        <member name="M:BytecodeApi.EnumEx.GetDescriptionLookup``1">
            <summary>
            Gets a lookup <see cref="T:System.Collections.Generic.Dictionary`2" /> with all distinct <see langword="enum" /> values and descriptions for the specified <see cref="T:System.Enum" /> type. The description is taken from the <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> attribute, or <see langword="null" />, if the attribute was not found.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Enum" /> to be processed.</typeparam>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> with all <see langword="enum" /> values and descriptions for the specified <see cref="T:System.Enum" /> type.
            </returns>
        </member>
        <member name="M:BytecodeApi.EnumEx.FindValueByDescription``1(System.String)">
            <summary>
            Tries to find an <see langword="enum" /> value by the description found in the <see cref="T:System.ComponentModel.DescriptionAttribute" /> attribute of the <see langword="enum" /> value. If the <see langword="enum" /> value was not found, <see langword="null" /> is returned.
            </summary>
            <typeparam name="T">The element type of the returned <see cref="T:System.Enum" />.</typeparam>
            <param name="description">The description that is searched in the <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> property.</param>
            <returns>
            The <see langword="enum" /> value, if found;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.KnownBrowser">
            <summary>
            Specifies the known web browsers.
            </summary>
        </member>
        <member name="F:BytecodeApi.KnownBrowser.InternetExplorer">
            <summary>
            The browser is Internet Explorer.
            </summary>
        </member>
        <member name="F:BytecodeApi.KnownBrowser.Edge">
            <summary>
            The browser is Microsoft Edge.
            </summary>
        </member>
        <member name="F:BytecodeApi.KnownBrowser.Chrome">
            <summary>
            The browser is Google Chrome.
            </summary>
        </member>
        <member name="F:BytecodeApi.KnownBrowser.Firefox">
            <summary>
            The browser is Mozilla Firefox.
            </summary>
        </member>
        <member name="F:BytecodeApi.KnownBrowser.Opera">
            <summary>
            The browser is Opera.
            </summary>
        </member>
        <member name="F:BytecodeApi.KnownBrowser.Safari">
            <summary>
            The browser is Safari.
            </summary>
        </member>
        <member name="T:BytecodeApi.Text.QuotedString">
            <summary>
            Represents a <see cref="T:System.String" /> value that can be converted to a quoted string (a C# string literal or verbatim string literal).
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.QuotedString.OriginalString">
            <summary>
            The original <see cref="T:System.String" /> value.
            </summary>
        </member>
        <member name="M:BytecodeApi.Text.QuotedString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Text.QuotedString" /> structure with a <see cref="T:System.String" /> value.
            </summary>
            <param name="originalString">The original <see cref="T:System.String" /> value.</param>
        </member>
        <member name="M:BytecodeApi.Text.QuotedString.ToString">
            <summary>
            Converts the value of this <see cref="T:BytecodeApi.Text.QuotedString" /> to its equivalent <see cref="T:System.String" /> literal representation, including escape characters, like \r or \n.
            <para>Example: "Hello" (with the quotes) is converted to "\"Hello\"" (with the quotes)</para>
            </summary>
            <returns>
            An equivalent <see cref="T:System.String" /> literal representation of the value of this <see cref="T:BytecodeApi.Text.QuotedString" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.QuotedString.ToVerbatimString">
            <summary>
            Converts the value of this <see cref="T:BytecodeApi.Text.QuotedString" /> to its equivalent verbatim <see cref="T:System.String" /> literal representation, including escape characters, like \r or \n.
            <para>Example: "Hello" (with the quotes) is converted to @"""Hello""" (with the quotes and the @ character)</para>
            </summary>
            <returns>
            An equivalent verbatim <see cref="T:System.String" /> literal representation of the value of this <see cref="T:BytecodeApi.Text.QuotedString" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.QuotedString.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <see langword="true" />, if the specified <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.QuotedString.Equals(BytecodeApi.Text.QuotedString)">
            <summary>
            Determines whether this instance is equal to another <see cref="T:BytecodeApi.Text.QuotedString" />.
            </summary>
            <param name="other">The <see cref="T:BytecodeApi.Text.QuotedString" /> to compare to this instance.</param>
            <returns>
            <see langword="true" />, if this instance is equal to the <paramref name="other" /> parameter;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.QuotedString.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:BytecodeApi.Text.QuotedString" />.
            </summary>
            <returns>
            The hash code for this <see cref="T:BytecodeApi.Text.QuotedString" /> instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.QuotedString.op_Equality(BytecodeApi.Text.QuotedString,BytecodeApi.Text.QuotedString)">
            <summary>
            Compares two <see cref="T:BytecodeApi.Text.QuotedString" /> values for equality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.Text.QuotedString" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.Text.QuotedString" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.Text.QuotedString" /> values are equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.QuotedString.op_Inequality(BytecodeApi.Text.QuotedString,BytecodeApi.Text.QuotedString)">
            <summary>
            Compares two <see cref="T:BytecodeApi.Text.QuotedString" /> values for inequality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.Text.QuotedString" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.Text.QuotedString" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.Text.QuotedString" /> values are not equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.QuotedString.op_Implicit(System.String)~BytecodeApi.Text.QuotedString">
            <summary>
            Defines an implicit conversion of a <see cref="T:System.String" /> to a <see cref="T:BytecodeApi.Text.QuotedString" />.
            </summary>
            <param name="value">The <see cref="T:System.String" /> to convert.</param>
        </member>
        <member name="M:BytecodeApi.Text.QuotedString.op_Implicit(BytecodeApi.Text.QuotedString)~System.String">
            <summary>
            Defines an implicit conversion of a <see cref="T:BytecodeApi.Text.QuotedString" /> to a <see cref="T:System.String" />. Returns the equivalent <see cref="T:System.String" /> literal representation of <see cref="P:BytecodeApi.Text.QuotedString.OriginalString" />.
            </summary>
            <param name="value">The <see cref="T:BytecodeApi.Text.QuotedString" /> to convert.</param>
        </member>
        <member name="T:BytecodeApi.Text.StringDistance">
            <summary>
            Class that provides algorithms to measure the distance between strings.
            </summary>
        </member>
        <member name="M:BytecodeApi.Text.StringDistance.Levenshtein(System.String,System.String)">
            <summary>
            Measures the minimum number of single-character edits (i.e. insertions, deletions or substitutions) required to change one word into the other.
            </summary>
            <param name="strA">The first <see cref="T:System.String" /> to compare.</param>
            <param name="strB">The second <see cref="T:System.String" /> to compare.</param>
            <returns>
            The minimum number of single-character edits (i.e. insertions, deletions or substitutions) required to change one word into the other. If both strings are equal, 0 is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.StringDistance.DamerauLevenshtein(System.String,System.String)">
            <summary>
            Measures the minimum number of single-character edits (i.e. insertions, deletions, substitutions or transpositions) required to change one word into the other.
            </summary>
            <param name="strA">The first <see cref="T:System.String" /> to compare.</param>
            <param name="strB">The second <see cref="T:System.String" /> to compare.</param>
            <returns>
            The minimum number of single-character edits (i.e. insertions, deletions, substitutions or transpositions) required to change one word into the other. If both strings are equal, 0 is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.StringDistance.Hamming(System.String,System.String)">
            <summary>
            Measures the minimum number of substitutions required to change one <see cref="T:System.String" /> into another. The Hamming distance between two strings of equal length is the number of positions at which the corresponding characters are different.
            </summary>
            <param name="strA">The first <see cref="T:System.String" /> to compare.</param>
            <param name="strB">The second <see cref="T:System.String" /> to compare.</param>
            <returns>
            The minimum number of substitutions required to change one <see cref="T:System.String" /> into another. If both strings are equal, 0 is returned.
            </returns>
        </member>
        <member name="T:BytecodeApi.Text.TextResources">
            <summary>
            Represents a set of reusable <see cref="T:System.String" /> and <see cref="T:System.Char" /> constants.
            </summary>
        </member>
        <member name="F:BytecodeApi.Text.TextResources.Digits">
            <summary>
            Represents all numeric digits (0-9). This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.Text.TextResources.Alphabet">
            <summary>
            Represents the alphabet in lowercase. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.Text.TextResources.Consonants">
            <summary>
            Represents only the consonants of alphabet in lowercase. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.Text.TextResources.Vovels">
            <summary>
            Represents only the vovels of alphabet in lowercase. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.Text.TextResources.LoremIpsum">
            <summary>
            Represents the "Lorem Ipsum" text. The length of the <see cref="T:System.String" /> is 445 characters. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.Text.TextResources.TheQuickBrownFox">
            <summary>
            Represents the "The quick brown fox" text. This text is human readable and contains all characters from the alphabet at least once. This field is constant.
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.TextResources.EicarTestFile">
            <summary>
            Represents the eicar test file, a sequence of 68 characters that is detected by security software. This binary sequence is decoded on runtime when this property is retrieved.
            <para>Read more: http://www.eicar.org</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.Text.TextResources.RightToLeftMark">
            <summary>
            Represents the right-to-left mark (U+200F). This character reverses printing direction of characters in user interfaces. This field is constant.
            </summary>
        </member>
        <member name="T:BytecodeApi.Text.ILanguageStringGenerator">
            <summary>
            Defines base methods for generation of a linguistic <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Text.ILanguageStringGenerator.Generate">
            <summary>
            Generates a linguistic <see cref="T:System.String" />.
            </summary>
            <returns>
            The <see cref="T:System.String" /> generated by this instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.Text.TextGenerator">
            <summary>
            Class that generates a random text sequence that match the pattern of real language.
            A <see cref="T:BytecodeApi.Text.SentenceGenerator" /> is used to generate the sentences that generated text are composed of.
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.TextGenerator.SentenceGenerator">
            <summary>
            Gets or sets the <see cref="P:BytecodeApi.Text.TextGenerator.SentenceGenerator" /> that is used to generate sentences.
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.TextGenerator.MinSentenceCount">
            <summary>
            Gets or sets the minimum number sentences used to build text.
            <para>The default value is 10</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.TextGenerator.MaxSentenceCount">
            <summary>
            Gets or sets the maximum number sentences used to build text.
            <para>The default value is 20</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.TextGenerator.LineBreakChance">
            <summary>
            Gets or sets a <see cref="T:System.Single" /> value that specifies the chance of a linebreak being inserted after a sentence, where 0.0f means no linebreaks and 1.0f means a linebreak between every sentence.
            <para>The default value is 0.0f</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.TextGenerator.ParagraphChance">
            <summary>
            Gets or sets a <see cref="T:System.Single" /> value that specifies the chance of a paragraph being inserted after a sentence, where 0.0f means no paragraphs and 1.0f means a paragraph between every sentence. Randomly picked paragraphs have precedence over linebreaks and do not occur consecutively.
            <para>The default value is 0.1f</para>
            </summary>
        </member>
        <member name="M:BytecodeApi.Text.TextGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Text.TextGenerator" /> class with default values.
            </summary>
        </member>
        <member name="M:BytecodeApi.Text.TextGenerator.#ctor(BytecodeApi.Text.SentenceGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Text.TextGenerator" /> class with the specified <see cref="P:BytecodeApi.Text.TextGenerator.SentenceGenerator" /> and with default values (<see cref="P:BytecodeApi.Text.TextGenerator.MinSentenceCount" /> = 10, <see cref="P:BytecodeApi.Text.TextGenerator.MaxSentenceCount" /> = 20, <see cref="P:BytecodeApi.Text.TextGenerator.LineBreakChance" /> = 0.0f, <see cref="P:BytecodeApi.Text.TextGenerator.ParagraphChance" /> = 0.1f).
            </summary>
            <param name="sentenceGenerator">The <see cref="P:BytecodeApi.Text.TextGenerator.SentenceGenerator" /> to use for sentence generation.</param>
        </member>
        <member name="M:BytecodeApi.Text.TextGenerator.Generate">
            <summary>
            Generates a random sequence of sentences using the specified parameters of this <see cref="T:BytecodeApi.Text.TextGenerator" /> instance.
            </summary>
            <returns>
            A new <see cref="T:System.String" /> with dynamically generated text.
            </returns>
        </member>
        <member name="T:BytecodeApi.Text.SentenceGenerator">
            <summary>
            Class that generates random sentences that match the pattern of real language.
            A <see cref="T:BytecodeApi.Text.WordGenerator" /> is used to generate the words that generated sentences are composed of.
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.SentenceGenerator.WordGenerator">
            <summary>
            Gets or sets the <see cref="P:BytecodeApi.Text.SentenceGenerator.WordGenerator" /> that is used to generate words.
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.SentenceGenerator.MinWords">
            <summary>
            Gets or sets the minimum number words used to build sentences.
            <para>The default value is 3</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.SentenceGenerator.MaxWords">
            <summary>
            Gets or sets the maximum number words used to build sentences.
            <para>The default value is 10</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.SentenceGenerator.CommaChance">
            <summary>
            Gets or sets a <see cref="T:System.Single" /> value that specifies the chance of a comma being inserted after a word, where 0.0f means no commas and 1.0f means a comma between every word.
            <para>The default value is 0.2f</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.SentenceGenerator.FinishPunctuation">
            <summary>
            Gets or sets the characters that are used for punctuation after a sentence. Including a character multiple times increases the chance for this character. For example, this can be used to increase the likelihood of a period over a question mark or exclamation mark. Character order is not relevant.
            <para>The default value is "...?!"</para>
            </summary>
        </member>
        <member name="M:BytecodeApi.Text.SentenceGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Text.SentenceGenerator" /> class with default values.
            </summary>
        </member>
        <member name="M:BytecodeApi.Text.SentenceGenerator.#ctor(BytecodeApi.Text.WordGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Text.SentenceGenerator" /> class with the specified <see cref="P:BytecodeApi.Text.SentenceGenerator.WordGenerator" /> and with default values (<see cref="P:BytecodeApi.Text.SentenceGenerator.MinWords" /> = 3, <see cref="P:BytecodeApi.Text.SentenceGenerator.MaxWords" /> = 10, <see cref="P:BytecodeApi.Text.SentenceGenerator.CommaChance" /> = 0.2f, <see cref="P:BytecodeApi.Text.SentenceGenerator.FinishPunctuation" /> = "...?!").
            </summary>
            <param name="wordGenerator">The <see cref="P:BytecodeApi.Text.SentenceGenerator.WordGenerator" /> to use for word generation.</param>
        </member>
        <member name="M:BytecodeApi.Text.SentenceGenerator.Generate">
            <summary>
            Generates a random sentence using the specified parameters of this <see cref="T:BytecodeApi.Text.SentenceGenerator" /> instance.
            </summary>
            <returns>
            A new <see cref="T:System.String" /> with a dynamically generated sentence.
            </returns>
        </member>
        <member name="T:BytecodeApi.Text.WordGenerator">
            <summary>
            Class that generates random words that match the pattern of real language.
            Word generation is typically used to create arbitrary text that looks like language.
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.WordGenerator.MinLength">
            <summary>
            Gets or sets the minimum length of a generated word.
            <para>The default value is 3</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.WordGenerator.MaxLength">
            <summary>
            Gets or sets the maximum length of a generated word.
            <para>The default value is 10</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.WordGenerator.DoubleConsonantChance">
            <summary>
            Gets or sets a <see cref="T:System.Single" /> value that specifies the chance of a consonant being inserted twice, where 0.0f means no double consonants and 1.0f means consonants are always inserted twice.
            <para>The default value is 0.1f</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.Text.WordGenerator.DoubleVovelChance">
            <summary>
            Gets or sets a <see cref="T:System.Single" /> value that specifies the chance of a vovel being inserted twice, where 0.0f means no double vovels and 1.0f means vovels are always inserted twice.
            <para>The default value is 0.1f</para>
            </summary>
        </member>
        <member name="M:BytecodeApi.Text.WordGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Text.WordGenerator" /> class with default values.
            </summary>
        </member>
        <member name="M:BytecodeApi.Text.WordGenerator.Generate">
            <summary>
            Generates a random word in camel case character casing using the specified parameters of this <see cref="T:BytecodeApi.Text.WordGenerator" /> instance.
            </summary>
            <returns>
            A new <see cref="T:System.String" /> with a dynamically generated word in camel case character casing.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.WordGenerator.Generate(BytecodeApi.StringCasing)">
            <summary>
            Generates a random word in the specified <see cref="T:BytecodeApi.StringCasing" /> using the specified parameters of this <see cref="T:BytecodeApi.Text.WordGenerator" /> instance.
            </summary>
            <param name="casing">The <see cref="T:BytecodeApi.StringCasing" /> to be used for characters in the generated word.</param>
            <returns>
            A new <see cref="T:System.String" /> with a dynamically generated word in the specified <see cref="T:BytecodeApi.StringCasing" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Text.Wording">
            <summary>
            Class that performs linguistic <see cref="T:System.String" /> manipulation on objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Text.Wording.TrimText(System.String,System.Int32)">
            <summary>
            Trims the specified <see cref="T:System.String" /> by the specified length. If the <see cref="T:System.String" /> is longer than the value of <paramref name="length" />, it will be truncated by a leading "..." to match the <paramref name="length" /> parameter, including the length of the "..." appendix (3 characters).
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be trimmed.</param>
            <param name="length">A <see cref="T:System.Int32" /> value specifying the maximum length of the returned <see cref="T:System.String" />.</param>
            <returns>
            The original value of <paramref name="str" />, if the length of the <see cref="T:System.String" /> is less than or equal to the <paramref name="length" /> parameter;
            otherwise, the truncated <see cref="T:System.String" /> and a leading "..." that matches the <paramref name="length" /> parameter, including the length of the "..." appendix (3 characters).
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.Wording.TrimText(System.String,System.Int32,System.String)">
            <summary>
            Trims the specified <see cref="T:System.String" /> by the specified length. If the <see cref="T:System.String" /> is longer than the value of <paramref name="length" />, it will be truncated and the value of <paramref name="trailingText" /> will be appended to match the <paramref name="length" /> parameter, including the length of the <paramref name="trailingText" /> paramter.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be trimmed.</param>
            <param name="length">A <see cref="T:System.Int32" /> value specifying the maximum length of the returned <see cref="T:System.String" />.</param>
            <param name="trailingText">The trailing text.</param>
            <returns>
            The original value of <paramref name="str" />, if the length of the <see cref="T:System.String" /> is less than or equal to the <paramref name="length" /> parameter and the length of the <paramref name="trailingText" /> parameter;
            otherwise, the truncated <see cref="T:System.String" /> and the value of <paramref name="trailingText" /> that matches the <paramref name="length" /> parameter, including the length of the <paramref name="trailingText" /> paramter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.Wording.JoinStrings(System.String,System.String,System.String[])">
            <summary>
            Concatenates all values in the specified <see cref="T:System.String" /> collection, where <paramref name="lastSeparator" /> is used for the last separator.
            <para>Example with 1 value: A</para>
            <para>Example with 2 values: A and B</para>
            <para>Example with 3 values: A, B and C</para>
            <para>Example with 4 values: A, B, C and D</para>
            </summary>
            <param name="separator">A <see cref="T:System.String" /> value specifying the separator between each <see cref="T:System.String" /> value.</param>
            <param name="lastSeparator">A <see cref="T:System.String" /> value specifying the separator between the last two <see cref="T:System.String" /> values.</param>
            <param name="strings">The <see cref="T:System.String" />[] that is concatenated.</param>
            <returns>
            A <see cref="T:System.String" />, where the values of <paramref name="strings" /> is concatenated by the specified separators, or <see cref="F:System.String.Empty" />, if the collection is empty.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.Wording.FormatTimeSpan(System.TimeSpan)">
            <summary>
            Converts the value of the specified <see cref="T:System.TimeSpan" /> to a human readable <see cref="T:System.String" /> representation by displaying the two most significant elements of either days, hours, minutes or seconds that are greater than zero, separated by a comma.
            <para>Example: "12:00:03" is converted to "12h, 3s"</para>
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan" /> value to convert.</param>
            <returns>
            The value of the specified <see cref="T:System.TimeSpan" /> as a human readable <see cref="T:System.String" /> representation.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.Wording.FormatTimeSpan(System.TimeSpan,System.Int32)">
            <summary>
            Converts the value of the specified <see cref="T:System.TimeSpan" /> to a human readable <see cref="T:System.String" /> representation by displaying a specified number of most significant elements of either days, hours, minutes or seconds that are greater than zero, separated by a comma.
            <para>Example: "5.03:30:15" is converted to "5d, 3h", if <paramref name="maxElements" /> is 2 and "5d, 3h, 30m", if <paramref name="maxElements" /> is 3</para>
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan" /> value to convert.</param>
            <param name="maxElements">A <see cref="T:System.Int32" /> value specifying the number of elements of either days, hours, minutes or seconds to display.</param>
            <returns>
            The value of the specified <see cref="T:System.TimeSpan" /> as a human readable <see cref="T:System.String" /> representation.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.Wording.FormatTimeSpan(System.TimeSpan,System.Int32,System.String)">
            <summary>
            Converts the value of the specified <see cref="T:System.TimeSpan" /> to a human readable <see cref="T:System.String" /> representation by displaying a specified number of most significant elements of either days, hours, minutes or seconds that are greater than zero, separated by the specified separator.
            <para>Example: "5.03:30:15" is converted to "5d, 3h", if <paramref name="maxElements" /> is 2 and "5d, 3h, 30m", if <paramref name="maxElements" /> is 3</para>
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan" /> value to convert.</param>
            <param name="maxElements">A <see cref="T:System.Int32" /> value specifying the number of elements of either days, hours, minutes or seconds to display.</param>
            <param name="separator">A <see cref="T:System.String" /> specifying the separator to use between each element, including whitespaces, if needed.</param>
            <returns>
            The value of the specified <see cref="T:System.TimeSpan" /> as a human readable <see cref="T:System.String" /> representation.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.Wording.WrapText(System.String,System.Int32,System.Boolean)">
            <summary>
            Wraps the specified text by splitting it up by whitespace characters and wrapping it by a specified maximum column width. This is typically used for console windows or in conjunction with monospace fonts.
            </summary>
            <param name="text">A <see cref="T:System.String" /> specifying the text to wrap.</param>
            <param name="width">A <see cref="T:System.Int32" /> value specifying the maximum number of characters per line.</param>
            <param name="overflow"><see langword="true" /> to allow words that are longer than <paramref name="width" /> to overflow; <see langword="false" /> to split up long words.</param>
            <returns>
            A multiline <see cref="T:System.String" /> with the wrapped text. Each line does not exceed an amount of characters equal to <paramref name="width" />, unless <paramref name="overflow" /> is set t <see langword="true" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.Wording.FormatBinary(System.Byte[])">
            <summary>
            Creates a binary view for the specified <see cref="T:System.Byte" />[].
            <para>Example: 00000000h: 41 42 43 00 00 00 00 00 00 00 00 00 00 00 00 00 ; ABC.............</para>
            </summary>
            <param name="bytes">The <see cref="T:System.Byte" />[] to create the binary view from.</param>
            <returns>
            A new <see cref="T:System.String" /> representing the specified <see cref="T:System.Byte" />[] as a binary view.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.Wording.FormatBinary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates a binary view for the specified <see cref="T:System.Byte" />[], starting from the specified offset, including the specified number of bytes.
            <para>Example: 00000000h: 41 42 43 00 00 00 00 00 00 00 00 00 00 00 00 00 ; ABC.............</para>
            </summary>
            <param name="bytes">The <see cref="T:System.Byte" />[] to create the binary view from.</param>
            <param name="offset">The starting point in the buffer at which to begin.</param>
            <param name="count">The number of bytes to take.</param>
            <returns>
            A new <see cref="T:System.String" /> representing the specified <see cref="T:System.Byte" />[] as a binary view.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.Wording.FormatBinary(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a binary view for the specified <see cref="T:System.Byte" />[], starting from the specified offset, including the specified number of bytes.
            <para>Example: 00000000h: 41 42 43 00 00 00 00 00 00 00 00 00 00 00 00 00 ; ABC.............</para>
            </summary>
            <param name="bytes">The <see cref="T:System.Byte" />[] to create the binary view from.</param>
            <param name="offset">The starting point in the buffer at which to begin.</param>
            <param name="count">The number of bytes to take.</param>
            <param name="startPosition">Indicates the starting position that is displayed in the first column of the result <see cref="T:System.String" />. This can be any number. The default value is 0.</param>
            <returns>
            A new <see cref="T:System.String" /> representing the specified <see cref="T:System.Byte" />[] as a binary view.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.Wording.Rot13(System.String)">
            <summary>
            Encodes a <see cref="T:System.String" /> to its equivalent ROT13 representation. This function either encodes a <see cref="T:System.String" /> or decodes an already encoded <see cref="T:System.String" />.
            <para>Example:"http://example.com/" is encoded to "uggc://rknzcyr.pbz/"</para>
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be encoded or decoded.</param>
            <returns>
            The encoded or decoded representation of <paramref name="str" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Text.Wording.EscapeSendKeys(System.String)">
            <summary>
            Escapes a SendKeys sequence. The characters +^%~(){}[] are encapsulated by braces. The returned <see cref="T:System.String" /> can be then passed to SendKeys.
            </summary>
            <param name="str">The <see cref="T:System.String" /> value to be escaped.</param>
            <returns>
            A <see cref="T:System.String" /> with the escaped representation of <paramref name="str" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Threading.Atomic`1">
            <summary>
            Represents a wrapper for a value that can be accessed by multiple threads.
            </summary>
            <typeparam name="T">The type of the wrapped value. This can be either a reference or a value type.</typeparam>
        </member>
        <member name="P:BytecodeApi.Threading.Atomic`1.Value">
            <summary>
            Gets or sets the underlying value and performs a <see langword="lock" /> operation on this instance. To prevent race conditions in consecutive get and set operations, use the <see cref="M:BytecodeApi.Threading.Atomic`1.Exchange(System.Func{`0,`0})" /> method. Consider using <see cref="M:BytecodeApi.Threading.Atomic`1.Lock``1(System.Func{`0,``0})" /> for method calls on instances of <see cref="P:BytecodeApi.Threading.Atomic`1.Value" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Threading.Atomic`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Threading.Atomic`1" /> class with the default value of <typeparamref name="T" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Threading.Atomic`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Threading.Atomic`1" /> class with the specified value.
            </summary>
            <param name="value">The initial value to be assigned to this instance of <see cref="T:BytecodeApi.Threading.Atomic`1" />.</param>
        </member>
        <member name="M:BytecodeApi.Threading.Atomic`1.Lock(System.Action{`0})">
            <summary>
            Invokes an <see cref="T:System.Action" /> while the underlying value is locked. The parameter of <paramref name="action" /> is the underlying value.
            </summary>
            <param name="action">An <see cref="T:System.Action" /> to be invoked while the underlying value is locked.</param>
        </member>
        <member name="M:BytecodeApi.Threading.Atomic`1.Lock``1(System.Func{`0,``0})">
            <summary>
            Invokes a <see cref="T:System.Func`1" /> while the underlying value is locked. The parameter of <paramref name="func" /> is the underlying value and the return value will be returned by this method.
            </summary>
            <typeparam name="TResult">The return type of <paramref name="func" />.</typeparam>
            <param name="func">A <see cref="T:System.Func`1" /> to be invoked while the underlying value is locked.</param>
            <returns>
            The result of <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Threading.Atomic`1.Exchange(System.Func{`0,`0})">
            <summary>
            Performs a retrieve and set operation of the underlying value, allowing the value to be exchanged. This operation is atomic and the value cannot change inbetween read and write operations.
            </summary>
            <param name="func">The <see cref="T:System.Func`2" /> that retrieves and then sets the contents of <see cref="P:BytecodeApi.Threading.Atomic`1.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.Threading.Atomic`1.op_Implicit(BytecodeApi.Threading.Atomic{`0})~`0">
            <summary>
            Performs a <see langword="lock" /> operation on this instance and retrieves the underlying value.
            </summary>
            <param name="value">The <see cref="T:BytecodeApi.Threading.Atomic`1" /> instance to retrieve the value from.</param>
            <returns>
            The underlying value of this <see cref="T:BytecodeApi.Threading.Atomic`1" /> instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.Threading.ThreadFactory">
            <summary>
            Provides support for creating <see cref="T:System.Threading.Thread" /> and other multithreading related objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Threading.ThreadFactory.StartThread(System.Action)">
            <summary>
            Creates a new background <see cref="T:System.Threading.Thread" /> with the STA apartment state and starts it. <see cref="T:System.Threading.ThreadAbortException" /> exceptions are swallowed.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked from the new <see cref="T:System.Threading.Thread" />.</param>
            <returns>
            The <see cref="T:System.Threading.Thread" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.Threading.ThreadFactory.StartThread(System.Action,System.Action{System.Exception})">
            <summary>
            Creates a new background <see cref="T:System.Threading.Thread" /> with the STA apartment state and starts it. <see cref="T:System.Threading.ThreadAbortException" /> exceptions are swallowed.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked from the new <see cref="T:System.Threading.Thread" />.</param>
            <param name="exceptionHandler">An <see cref="T:System.Action`1" /> that is called by the exception handler. If <see langword="null" />, the exception is rethrown. Use <see langword="delegate" /> { } to swallow exceptions. The stack trace prior to thread creation will be appended.</param>
            <returns>
            The <see cref="T:System.Threading.Thread" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.Threading.ThreadFactory.StartThread(System.Action,System.Action{System.Exception},System.Threading.ThreadPriority)">
            <summary>
            Creates a new background <see cref="T:System.Threading.Thread" /> with the STA apartment state and starts it. <see cref="T:System.Threading.ThreadAbortException" /> exceptions are swallowed.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked from the new <see cref="T:System.Threading.Thread" />.</param>
            <param name="exceptionHandler">An <see cref="T:System.Action`1" /> that is called by the exception handler. If <see langword="null" />, the exception is rethrown. Use <see langword="delegate" /> { } to swallow exceptions. The stack trace prior to thread creation will be appended.</param>
            <param name="priority">The <see cref="T:System.Threading.ThreadPriority" /> for the new <see cref="T:System.Threading.Thread" />.</param>
            <returns>
            The <see cref="T:System.Threading.Thread" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.Threading.ThreadFactory.StartDispatcherTimer(System.Action,System.TimeSpan)">
            <summary>
            Creates and starts a new <see cref="T:System.Windows.Threading.DispatcherTimer" /> with the specified <see cref="T:System.Action" /> and interval.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked by the new <see cref="T:System.Windows.Threading.DispatcherTimer" />.</param>
            <param name="interval">The interval in which <paramref name="action" /> is invoked.</param>
            <returns>
            The <see cref="T:System.Windows.Threading.DispatcherTimer" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.Threading.ThreadFactory.StartDispatcherTimer(System.Action,System.TimeSpan,System.Boolean)">
            <summary>
            Creates and starts a new <see cref="T:System.Windows.Threading.DispatcherTimer" /> with the specified <see cref="T:System.Action" /> and interval.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked by the new <see cref="T:System.Windows.Threading.DispatcherTimer" />.</param>
            <param name="interval">The interval in which <paramref name="action" /> is invoked.</param>
            <param name="executeNow"><see langword="true" /> to execute <paramref name="action" /> immediately; <see langword="false" /> to execute it on the first interval.</param>
            <returns>
            The <see cref="T:System.Windows.Threading.DispatcherTimer" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.Threading.ThreadFactory.StartDispatcherTimer(System.Action,System.TimeSpan,System.Boolean,System.Boolean)">
            <summary>
            Creates and starts a new <see cref="T:System.Windows.Threading.DispatcherTimer" /> with the specified <see cref="T:System.Action" /> and interval.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked by the new <see cref="T:System.Windows.Threading.DispatcherTimer" />.</param>
            <param name="interval">The interval in which <paramref name="action" /> is invoked.</param>
            <param name="executeNow"><see langword="true" /> to execute <paramref name="action" /> immediately; <see langword="false" /> to execute it on the first interval.</param>
            <param name="ignoreExceptions"><see langword="true" /> to ignore all exceptions.</param>
            <returns>
            The <see cref="T:System.Windows.Threading.DispatcherTimer" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.Threading.ThreadFactory.StartStopwatch">
            <summary>
            Creates a new <see cref="T:System.Diagnostics.Stopwatch" /> and starts counting.
            </summary>
            <returns>
            The <see cref="T:System.Diagnostics.Stopwatch" /> this method creates.
            </returns>
        </member>
        <member name="T:BytecodeApi.ApplicationBase">
            <summary>
            Provides <see langword="static" /> methods that extend the <see cref="T:System.Windows.Application" /> and the <see cref="T:System.Windows.Forms.Application" /> class.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Path">
            <summary>
            Gets the path for the executable file that started the application, not including the executable name.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.FileName">
            <summary>
            Gets the path for the executable file that started the application, including the executable name.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Version">
            <summary>
            Gets the <see cref="T:System.Version" /> of the entry assembly.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.DebugMode">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether <see cref="P:System.Diagnostics.Debugger.IsAttached" /> was <see langword="true" /> the first time this property is retrieved, or if this executable is located in a directory named like "\bin\Debug", "\bin\x86\Debug", or "\bin\x64\Debug".
            </summary>
        </member>
        <member name="M:BytecodeApi.ApplicationBase.DoEventsWhile(System.Func{System.Boolean})">
            <summary>
            Invokes an empty <see cref="T:System.Action" /> on the <see cref="T:System.Windows.Threading.Dispatcher" /> of <see cref="P:System.Windows.Application.Current" /> while <paramref name="condition" /> evaluates to <see langword="true" />, thereby refreshing the UI. This is the WPF equivalent to <see cref="M:System.Windows.Forms.Application.DoEvents" />.
            </summary>
            <param name="condition">The <see cref="T:System.Func`1" /> to be evaluated.</param>
        </member>
        <member name="M:BytecodeApi.ApplicationBase.DoEventsWhile(System.Func{System.Boolean},System.TimeSpan)">
            <summary>
            Invokes an empty <see cref="T:System.Action" /> on the <see cref="T:System.Windows.Threading.Dispatcher" /> of <see cref="P:System.Windows.Application.Current" /> while <paramref name="condition" /> evaluates to <see langword="true" />, thereby refreshing the UI. This is the WPF equivalent to <see cref="M:System.Windows.Forms.Application.DoEvents" />. The specified delay is waited between each call to <paramref name="condition" />.
            </summary>
            <param name="condition">The <see cref="T:System.Func`1" /> to be evaluated.</param>
            <param name="delay">A <see cref="T:System.TimeSpan" /> that specifies the delay between each call to <paramref name="condition" />. The default value is 1 milliseconds.</param>
        </member>
        <member name="M:BytecodeApi.ApplicationBase.RestartElevated(System.String,System.Action)">
            <summary>
            Restarts the current <see cref="T:System.Diagnostics.Process" /> with elevated privileges. Returns <see langword="null" />, if the process is already elevated; <see langword="false" />, if elevation failed; <see langword="true" /> if the restart was successful.
            </summary>
            <param name="commandLine">A <see cref="T:System.String" /> specifying the commandline for the new <see cref="T:System.Diagnostics.Process" />.</param>
            <param name="shutdownCallback">A callback that is invoked after the new <see cref="T:System.Diagnostics.Process" /> was successfully started with elevated privileges. Depending on application type, this is typically <see cref="M:System.Environment.Exit(System.Int32)" /> or <see cref="M:System.Windows.Application.Shutdown" />.</param>
            <returns>
            <see langword="null" />, if the process is already elevated;
            <see langword="false" />, if elevation failed;
            <see langword="true" />, if the restart was successful.
            </returns>
        </member>
        <member name="T:BytecodeApi.ApplicationBase.Process">
            <summary>
            Provides information about the current process.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.Id">
            <summary>
            Gets the ProcessID of the current <see cref="T:System.Diagnostics.Process" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.SessionId">
            <summary>
            Gets the SessionID of the current <see cref="T:System.Diagnostics.Process" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.IntegrityLevel">
            <summary>
            Gets the mandatory integrity level for the current <see cref="T:System.Diagnostics.Process" />, or <see langword="null" />, if it could not be determined.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.IsElevated">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether the current <see cref="T:System.Diagnostics.Process" /> is elevated or not.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.ElevationType">
            <summary>
            Gets the <see cref="P:BytecodeApi.ApplicationBase.Process.ElevationType" /> for the current <see cref="T:System.Diagnostics.Process" />, or <see langword="null" />, if it could not be determined.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.Memory">
            <summary>
            Gets the amount of private memory, in bytes, allocated for the current <see cref="T:System.Diagnostics.Process" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.ApplicationBase.Process.FrameworkVersion">
            <summary>
            Gets the <see cref="T:System.Version" /> of the .NET Framework that the current <see cref="T:System.Diagnostics.Process" /> is running with.
            </summary>
        </member>
        <member name="T:BytecodeApi.ApplicationBase.Session">
            <summary>
            Provides information about the current logon session and related information.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Session.CurrentUser">
            <summary>
            Gets the name of the current <see cref="T:System.Security.Principal.WindowsIdentity" />, including the domain or workstation name.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Session.CurrentUserShort">
            <summary>
            Gets the name of the current <see cref="T:System.Security.Principal.WindowsIdentity" />, not including the domain or workstation name.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Session.DomainName">
            <summary>
            Gets the domain in which the local computer is registered, or <see langword="null" />, if the user is not member of a domain.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Session.Workgroup">
            <summary>
            Gets the workgroup in which the local computer is registered, or <see langword="null" />, if the user is not member of a workgroup.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Session.IsWorkstationLocked">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether the workstation is locked. If the workstation was locked the first time this property was called, <see langword="false" /> is returned.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Session.DesktopDpi">
            <summary>
            Gets the screen DPI. A value of 96.0 corresponds to 100% font scaling.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Session.IsRdp">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether the current session is an RDP session.
            </summary>
        </member>
        <member name="T:BytecodeApi.ApplicationBase.OperatingSystem">
            <summary>
            Provides information about the installed operating system.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.OperatingSystem.Name">
            <summary>
            Gets the name of the operating system.
            <para>Examples: "Windows 7 Professional", "Windows 10 Pro"</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.OperatingSystem.InstallDate">
            <summary>
            Gets the installation date of the operating system, or <see langword="null" />, if it could not be determined.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.OperatingSystem.InstalledAntiVirusSoftware">
            <summary>
            Gets an array containing a list of installed antivirus software.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.OperatingSystem.DefaultBrowser">
            <summary>
            Gets the default browser of the current user, or <see langword="null" />, if it could not be determined.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.OperatingSystem.FrameworkVersionNumber">
            <summary>
            Gets the currently installed version of the .NET Framework and returns the version number. Works for .NET 4.5+.
            <para>Examples: 528049, 528040, 461814</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.OperatingSystem.FrameworkVersionName">
            <summary>
            Gets the currently installed version of the .NET Framework, deduced from the <see cref="P:BytecodeApi.ApplicationBase.OperatingSystem.FrameworkVersionNumber" /> property and <see langword="null" />, if the version name could not be determined. Works for .NET 4.5+.
            <para>Examples: 4.5, 4.6, 4.7, 4.7.1, 4.7.2, 4.8</para>
            </summary>
        </member>
        <member name="T:BytecodeApi.ApplicationBase.Hardware">
            <summary>
            Provides information about installed hardware.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Hardware.Processor">
            <summary>
            Gets the name of the processor. If multiple processors are installed, the name of the first processor is returned.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Hardware.Memory">
            <summary>
            Gets the total amount of installed physical memory, or <see langword="null" />, if it could not be determined.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Hardware.VideoController">
            <summary>
            Gets the name of the video controller. If multiple video controllers are installed, the name of the first video controller is returned.
            </summary>
        </member>
        <member name="T:BytecodeApi.ConvertEx">
            <summary>
            Provides <see langword="static" /> methods that extend the <see cref="T:System.Convert" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToHexadecimalString(System.Byte[])">
            <summary>
            Converts the specified <see cref="T:System.Byte" />[] into into its hexadecimal <see cref="T:System.String" /> representation.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] containing the sequence of bytes to convert.</param>
            <returns>
            An equivalent hexadecimal <see cref="T:System.String" /> representation of <paramref name="array" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToHexadecimalString(System.Byte[],System.Boolean)">
            <summary>
            Converts the specified <see cref="T:System.Byte" />[] into its hexadecimal <see cref="T:System.String" /> representation.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] containing the sequence of bytes to convert.</param>
            <param name="upperCase"><see langword="true" /> to use uppercase letters (a-f); <see langword="false" /> to use lowercase letters (A-F).</param>
            <returns>
            An equivalent hexadecimal <see cref="T:System.String" /> representation of <paramref name="array" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.FromHexadecimalString(System.String)">
            <summary>
            Converts a hexadecimal <see cref="T:System.String" /> to its equivalent <see cref="T:System.Byte" />[] representation. Only hexadecimal digits (upper and lowercase) are allowed. <paramref name="str" /> must have an even number of digits.
            </summary>
            <param name="str">A hexadecimal <see cref="T:System.String" /> to convert to a <see cref="T:System.Byte" />[].</param>
            <returns>
            The equivalent <see cref="T:System.Byte" />[] representation of <paramref name="str" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToBase32String(System.Byte[])">
            <summary>
            Converts a <see cref="T:System.Byte" />[] to its equivalent Base32 representation using the RFC4648 charset (ABCDEFGHIJKLMNOPQRSTUVWXYZ234567).
            </summary>
            <param name="data">The <see cref="T:System.Byte" />[] to convert.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representation, in Base32, of <paramref name="data" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToBase32String(System.Byte[],System.Boolean)">
            <summary>
            Converts a <see cref="T:System.Byte" />[] to its equivalent Base32 representation.
            </summary>
            <param name="data">The <see cref="T:System.Byte" />[] to convert.</param>
            <param name="crockford"><see langword="true" /> to use the crockford charset (0123456789ABCDEFGHJKMNPQRSTVWXYZ); <see langword="false" /> to use the RFC4648 charset (ABCDEFGHIJKLMNOPQRSTUVWXYZ234567).</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representation, in Base32, of <paramref name="data" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.FromBase32String(System.String)">
            <summary>
            Converts an encoded Base32 <see cref="T:System.String" /> back to its original <see cref="T:System.Byte" />[] using the RFC4648 charset (ABCDEFGHIJKLMNOPQRSTUVWXYZ234567).
            </summary>
            <param name="str">A <see cref="T:System.String" /> representing the Base32 encoded data.</param>
            <returns>
            The original <see cref="T:System.Byte" />[], representing the Base32 <see cref="T:System.String" /> in <paramref name="str" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.FromBase32String(System.String,System.Boolean)">
            <summary>
            Converts an encoded Base32 <see cref="T:System.String" /> back to its original <see cref="T:System.Byte" />[].
            </summary>
            <param name="str">A <see cref="T:System.String" /> representing the Base32 encoded data.</param>
            <param name="crockford"><see langword="true" /> to use the crockford charset (0123456789ABCDEFGHJKMNPQRSTVWXYZ); <see langword="false" /> to use the RFC4648 charset (ABCDEFGHIJKLMNOPQRSTUVWXYZ234567).</param>
            <returns>
            The original <see cref="T:System.Byte" />[], representing the Base32 <see cref="T:System.String" /> in <paramref name="str" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToExcelColumnString(System.Int32)">
            <summary>
            Converts a zero-based Excel column index to a string (like A, B, ... AA, AB, ...).
            </summary>
            <param name="index">A <see cref="T:System.Int32" /> representing an Excel column index.</param>
            <returns>
            A <see cref="T:System.String" /> value with the Excel column string, converted from the zero-based column index.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToExcelColumnString(System.Int32,System.Boolean)">
            <summary>
            Converts a zero-based or one-based Excel column index to a string (like A, B, ... AA, AB, ...).
            </summary>
            <param name="index">A <see cref="T:System.Int32" /> representing an Excel column index.</param>
            <param name="oneBased"><see langword="true" /> to treat <paramref name="index" /> as a one-based index; otherwise, <see langword="false" />.</param>
            <returns>
            A <see cref="T:System.String" /> value with the Excel column string, converted from the zero-based or one-based column index.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.FromExcelColumnString(System.String)">
            <summary>
            Converts an Excel column name (like A, B, ... AA, AB, ...) to a zero-based index.
            </summary>
            <param name="str">A <see cref="T:System.String" /> representing an Excel column name.</param>
            <returns>
            A <see cref="T:System.Int32" /> value with the zero-based index, converted from the Excel column name.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.FromExcelColumnString(System.String,System.Boolean)">
            <summary>
            Converts an Excel column name (like A, B, ... AA, AB, ...) to a zero-based or one-based index.
            </summary>
            <param name="str">A <see cref="T:System.String" /> representing an Excel column name.</param>
            <param name="oneBased"><see langword="true" /> to return a one-based index; otherwise, <see langword="false" />.</param>
            <returns>
            A <see cref="T:System.Int32" /> value with the zero-based or one-based index, converted from the Excel column name.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.To7BitEncodedInt(System.Int32)">
            <summary>
            Converts a 32-bit integer into a compressed format.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to convert.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] that represents the specified 32-bit integer in compressed format.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.From7BitEncodedInt(System.Byte[])">
            <summary>
            Converts a compressed 32-bit integer into a <see cref="T:System.Int32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte" />[] value to convert with up to 4 bytes capacity.</param>
            <returns>
            A <see cref="T:System.Int32" /> value that was converted from the specified 32-bit integer in binary format.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToRomanNumber(System.Int32)">
            <summary>
            Converts an integer to a roman numeral. If <paramref name="value" /> is not between 1 and 3999, an exception is thrown.
            <para>Examples: I, II, III, IV, V, VI, VII, VIII, IX, X</para>
            </summary>
            <param name="value">A <see cref="T:System.Int32" /> value to convert to a roman numeral.</param>
            <returns>
            A roman number <see cref="T:System.String" /> that was converted from the specified integer.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.FromRomanNumber(System.String)">
            <summary>
            Converts a roman number <see cref="T:System.String" /> to an integer.
            <para>Examples: I, II, III, IV, V, VI, VII, VIII, IX, X</para>
            </summary>
            <param name="value">A roman number <see cref="T:System.String" />.</param>
            <returns>
            A <see cref="T:System.Int32" /> value that was converted from the roman number <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToStructure``1(System.Byte[])">
            <summary>
            Converts the specified <see cref="T:System.Byte" />[] to a structure of type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The type of the structure to return.</typeparam>
            <param name="array">A <see cref="T:System.Byte" />[] with the binary representation of the structure. This array must have an equivalent size of <see cref="T:System.Runtime.InteropServices.Marshal" />.SizeOf(<see langword="typeof" />(<typeparamref name="T" />)).</param>
            <returns>
            The structure of type <typeparamref name="T" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.FromStructure``1(``0)">
            <summary>
            Converts the specified structure of type <typeparamref name="T" /> to a <see cref="T:System.Byte" />[] with the size of <see cref="T:System.Runtime.InteropServices.Marshal" />.SizeOf(<see langword="typeof" />(<typeparamref name="T" />)).
            </summary>
            <typeparam name="T">The type of the structure to convert.</typeparam>
            <param name="structure">The structure to convert to a <see cref="T:System.Byte" />[].</param>
            <returns>
            An equivalent <see cref="T:System.Byte" />[] representation of <paramref name="structure" /> with the size of <see cref="T:System.Runtime.InteropServices.Marshal" />.SizeOf(<see langword="typeof" />(<typeparamref name="T" />)).
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToIcon(System.Byte[])">
            <summary>
            Converts a <see cref="T:System.Byte" />[] to an <see cref="T:System.Drawing.Icon" />. The <paramref name="array" /> object should represent the binary of a valid icon file.
            </summary>
            <param name="array">A <see cref="T:System.Byte" />[] that represents a valid icon file.</param>
            <returns>
            A new <see cref="T:System.Drawing.Icon" /> object, created from the contents of <paramref name="array" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToBitmap(System.Byte[])">
            <summary>
            Converts a <see cref="T:System.Byte" />[] to an <see cref="T:System.Drawing.Bitmap" />. The <paramref name="array" /> object should represent the binary of a valid image file.
            </summary>
            <param name="array">A <see cref="T:System.Byte" />[] that represents a valid image file.</param>
            <returns>
            A new <see cref="T:System.Drawing.Bitmap" /> object, created from the contents of <paramref name="array" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.CSharp">
            <summary>
            Provides <see langword="static" /> methods and properties serving as a general object manipulation helper class.
            </summary>
        </member>
        <member name="M:BytecodeApi.CSharp.CastOrDefault``1(System.Object)">
            <summary>
            Returns the converted version of <paramref name="obj" />, if it is of the specified type; otherwise, returns <see langword="default" />(<typeparamref name="T" />).
            </summary>
            <typeparam name="T">The type to which to convert <paramref name="obj" /> to.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to be converted.</param>
            <returns>
            The converted version of <paramref name="obj" />, if it is of the specified type; otherwise, returns <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Swap``1(``0@,``0@)">
            <summary>
            Exchanges the references of two <see cref="T:System.Object" /> instances.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> instances to be exchanged.</typeparam>
            <param name="objA">The <see cref="T:System.Object" /> to be exchanged.</param>
            <param name="objB">The <see cref="T:System.Object" /> to be exchanged.</param>
        </member>
        <member name="M:BytecodeApi.CSharp.Using(System.Object,System.Action)">
            <summary>
            Performs an <see cref="T:System.Action" /> and disposes <paramref name="obj" />, if <paramref name="obj" /> is an <see cref="T:System.IDisposable" />. This is useful if the given <see cref="T:System.Object" /> only indirectly inherits <see cref="T:System.IDisposable" /> and therefore the <see langword="using" /> keyword cannot be used.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to be disposed. If <paramref name="obj" /> is not an <see cref="T:System.IDisposable" />, it will not be disposed.</param>
            <param name="action">The <see cref="T:System.Action" /> to be performed before the <see cref="M:System.IDisposable.Dispose" /> method is called. This is equivalent to the body of the <see langword="using" /> statement.</param>
        </member>
        <member name="M:BytecodeApi.CSharp.ConvertObject``1(System.Object)">
            <summary>
            Copies the contents of properties and fields of an <see cref="T:System.Object" /> to another <see cref="T:System.Object" /> of a different <see cref="T:System.Type" /> by comparing property and field names. A new instance of <typeparamref name="TDest" /> is created.
            <para>Values are only copied, if the property or field is of equivalent type. This includes conversion between mixed <see cref="T:System.Nullable" /> values (e.g. <see cref="T:System.Int32" /> and <see cref="T:System.Int32" />?), and between <see cref="T:System.Enum" /> and numeric values. Differing types are attempted to convert (e.g. <see cref="T:System.Int32" /> and <see cref="T:System.Int64" />). If conversion fails, the default value of the destination type is used.</para>
            </summary>
            <typeparam name="TDest">The type of the <see cref="T:System.Object" /> to copy the contents to.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to copy the contents from.</param>
            <returns>
            The new instance of <typeparamref name="TDest" /> this method creates, with properties and fields copied from <paramref name="obj" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.ConvertObject``1(System.Object,BytecodeApi.ConvertObjectOptions)">
            <summary>
            Copies the contents of properties and fields of an <see cref="T:System.Object" /> to another <see cref="T:System.Object" /> of a different <see cref="T:System.Type" /> by comparing property and field names. A new instance of <typeparamref name="TDest" /> is created.
            <para>Values are only copied, if the property or field is of equivalent type. This includes conversion between mixed <see cref="T:System.Nullable" /> values (e.g. <see cref="T:System.Int32" /> and <see cref="T:System.Int32" />?), and between <see cref="T:System.Enum" /> and numeric values. Differing types are attempted to convert (e.g. <see cref="T:System.Int32" /> and <see cref="T:System.Int64" />). If conversion fails, the default value of the destination type is used.</para>
            </summary>
            <typeparam name="TDest">The type of the <see cref="T:System.Object" /> to copy the contents to.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to copy the contents from.</param>
            <param name="flags">The <see cref="T:BytecodeApi.ConvertObjectOptions" /> flags that specify comparison and copy behavior.</param>
            <returns>
            The new instance of <typeparamref name="TDest" /> this method creates, with properties and fields copied from <paramref name="obj" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.ConvertObject``1(System.Object,``0)">
            <summary>
            Copies the contents of properties and fields of an <see cref="T:System.Object" /> to another <see cref="T:System.Object" /> of a different <see cref="T:System.Type" /> by comparing property and field names.
            <para>Values are only copied, if the property or field is of equivalent type. This includes conversion between mixed <see cref="T:System.Nullable" /> values (e.g. <see cref="T:System.Int32" /> and <see cref="T:System.Int32" />?), and between <see cref="T:System.Enum" /> and numeric values. Differing types are attempted to convert (e.g. <see cref="T:System.Int32" /> and <see cref="T:System.Int64" />). If conversion fails, the default value of the destination type is used.</para>
            </summary>
            <typeparam name="TDest">The type of the <see cref="T:System.Object" /> to copy the contents to.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to copy the contents from.</param>
            <param name="dest">The <see cref="T:System.Object" /> to copy the contents to.</param>
        </member>
        <member name="M:BytecodeApi.CSharp.ConvertObject``1(System.Object,``0,BytecodeApi.ConvertObjectOptions)">
            <summary>
            Copies the contents of properties and fields of an <see cref="T:System.Object" /> to another <see cref="T:System.Object" /> of a different <see cref="T:System.Type" /> by comparing property and field names.
            <para>Values are only copied, if the property or field is of equivalent type. This includes conversion between mixed <see cref="T:System.Nullable" /> values (e.g. <see cref="T:System.Int32" /> and <see cref="T:System.Int32" />?), and between <see cref="T:System.Enum" /> and numeric values. Differing types are attempted to convert (e.g. <see cref="T:System.Int32" /> and <see cref="T:System.Int64" />). If conversion fails, the default value of the destination type is used.</para>
            </summary>
            <typeparam name="TDest">The type of the <see cref="T:System.Object" /> to copy the contents to.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to copy the contents from.</param>
            <param name="dest">The <see cref="T:System.Object" /> to copy the contents to.</param>
            <param name="flags">The <see cref="T:BytecodeApi.ConvertObjectOptions" /> flags that specify comparison and copy behavior.</param>
        </member>
        <member name="M:BytecodeApi.CSharp.GetHashCode(System.Object[])">
            <summary>
            Calculates the hashcode for a set of objects by using XOR (i.e. a ^ b ^ c ...). This is a helper method for GetHashCode method implementations that do not require value specific handling.
            </summary>
            <param name="objects">A set of objects, where <see cref="M:System.Object.GetHashCode" /> is called on each <see cref="T:System.Object" /> that is not <see langword="null" />.</param>
            <returns>
            The combined hashcode of all objects in the given set.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.DebuggerDisplay(System.Type,System.String,System.Object[])">
            <summary>
            Builds a <see cref="T:System.String" /> for the <see cref="T:System.Diagnostics.DebuggerDisplayAttribute" /> from a set of objects.
            </summary>
            <param name="type">The type of the class or structure where the <see cref="T:System.Diagnostics.DebuggerDisplayAttribute" /> is used.</param>
            <param name="str">A composite format <see cref="T:System.String" />.</param>
            <param name="objects">An <see cref="T:System.Object" /> array that contains zero or more objects to format.</param>
            <returns>
            A formatted <see cref="T:System.String" /> that displays debug information. Each <see cref="T:System.Object" /> is treated individually, depending on its type.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.DebuggerDisplay``1(System.String,System.Object[])">
            <summary>
            Builds a <see cref="T:System.String" /> for the <see cref="T:System.Diagnostics.DebuggerDisplayAttribute" /> from a set of objects.
            </summary>
            <typeparam name="T">The type of the class or structure where the <see cref="T:System.Diagnostics.DebuggerDisplayAttribute" /> is used.</typeparam>
            <param name="str">A composite format <see cref="T:System.String" />.</param>
            <param name="objects">An <see cref="T:System.Object" /> array that contains zero or more objects to format.</param>
            <returns>
            A formatted <see cref="T:System.String" /> that displays debug information. Each <see cref="T:System.Object" /> is treated individually, depending on its type.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Try(System.Action)">
            <summary>
            Invokes an <see cref="T:System.Action" /> and handles any exception. Returns <see langword="true" /> on successful execution and <see langword="false" />, if an exception was thrown.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
            <returns>
            <see langword="true" />, on successful execution and
            <see langword="false" />, if an exception was thrown.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Try(System.Action,System.Boolean)">
            <summary>
            Invokes an <see cref="T:System.Action" /> and handles any exception. Returns <see langword="true" /> on successful execution and <see langword="false" />, if an exception was thrown.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
            <param name="throws"><see langword="true" /> to throw the exception anyway, effectively bypassing the function logic and just executing <paramref name="action" /> without exception handling.</param>
            <returns>
            <see langword="true" />, on successful execution and
            <see langword="false" />, if an exception was thrown and <paramref name="throws" /> equals to <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Try``1(System.Func{``0})">
            <summary>
            Invokes a <see cref="T:System.Func`1" /> and handles any exception. Returns the result of <paramref name="func" /> on successful execution and <see langword="default" />(<typeparamref name="T" />) if an exception was thrown.
            </summary>
            <typeparam name="T">The return type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`1" /> to be invoked.</param>
            <returns>
            The result of <paramref name="func" />, on successful execution and
            <see langword="default" />(<typeparamref name="T" />), if an exception was thrown.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Try``1(System.Func{``0},``0)">
            <summary>
            Invokes a <see cref="T:System.Func`1" /> and handles any exception. Returns the result of <paramref name="func" /> on successful execution and <paramref name="defaultValue" />, if an exception was thrown.
            </summary>
            <typeparam name="T">The return type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`1" /> to be invoked.</param>
            <param name="defaultValue">The default value that is returned if an exception was thrown.</param>
            <returns>
            The result of <paramref name="func" />, on successful execution and
            <paramref name="defaultValue" />, if an exception was thrown.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Try``1(System.Func{``0},``0,System.Boolean)">
            <summary>
            Invokes a <see cref="T:System.Func`1" /> and handles any exception. Returns the result of <paramref name="func" /> on successful execution and <paramref name="defaultValue" />, if an exception was thrown.
            </summary>
            <typeparam name="T">The return type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`1" /> to be invoked.</param>
            <param name="defaultValue">The default value that is returned if an exception was thrown.</param>
            <param name="throws"><see langword="true" /> to throw the exception anyway, effectively bypassing the function logic and just executing <paramref name="func" /> without exception handling.</param>
            <returns>
            The result of <paramref name="func" />, on successful execution and
            <paramref name="defaultValue" />, if an exception was thrown and <paramref name="throws" /> equals to <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Retry(System.Action,System.Int32)">
            <summary>
            Attempts to invoke an <see cref="T:System.Action" /> up to a defined number of times until <paramref name="action" /> successfully returned without throwing an exception. If <paramref name="action" /> throws an exception on the last time, the exception is rethrown.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
            <param name="attempts">A <see cref="T:System.Int32" /> value indicating how many times <paramref name="action" /> is attempted before the final exception is rethrown.</param>
        </member>
        <member name="M:BytecodeApi.CSharp.Retry(System.Action,System.Int32,System.TimeSpan)">
            <summary>
            Attempts to invoke an <see cref="T:System.Action" /> up to a defined number of times until <paramref name="action" /> successfully returned without throwing an exception. If <paramref name="action" /> throws an exception on the last time, the exception is rethrown. Between each call of <paramref name="action" /> that throws an exception, a delay is waited.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
            <param name="attempts">A <see cref="T:System.Int32" /> value indicating how many times <paramref name="action" /> is attempted before the final exception is rethrown.</param>
            <param name="delay">A <see cref="T:System.TimeSpan" /> value representing the wait period between each call of <paramref name="action" /> that throws an exception.</param>
        </member>
        <member name="M:BytecodeApi.CSharp.Retry``1(System.Func{``0},System.Int32)">
            <summary>
            Attempts to invoke a <see cref="T:System.Func`1" /> up to a defined number of times until <paramref name="func" /> successfully returns a value without throwing an exception. If <paramref name="func" /> throws an exception on the last time, the exception is rethrown.
            </summary>
            <typeparam name="T">The return type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`1" /> to be invoked.</param>
            <param name="attempts">A <see cref="T:System.Int32" /> value indicating how many times <paramref name="func" /> is attempted before the final exception is rethrown.</param>
            <returns>
            The result of <paramref name="func" />, if <paramref name="func" /> successfully returned a value in the given number of attempts without throwing an exception;
            otherwise, rethrows the exception.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Retry``1(System.Func{``0},System.Int32,System.TimeSpan)">
            <summary>
            Attempts to invoke a <see cref="T:System.Func`1" /> up to a defined number of times until <paramref name="func" /> successfully returns a value without throwing an exception. If <paramref name="func" /> throws an exception on the last time, the exception is rethrown. Between each call of <paramref name="func" /> that throws an exception, a delay is waited.
            </summary>
            <typeparam name="T">The return type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`1" /> to be invoked.</param>
            <param name="attempts">A <see cref="T:System.Int32" /> value indicating how many times <paramref name="func" /> is attempted before the final exception is rethrown.</param>
            <param name="delay">A <see cref="T:System.TimeSpan" /> value representing the wait period between each call of <paramref name="func" /> that throws an exception.</param>
            <returns>
            The result of <paramref name="func" />, if <paramref name="func" /> successfully returned a value in the given number of attempts without throwing an exception;
            otherwise, rethrows the exception.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Timeout(System.Func{System.Boolean},System.TimeSpan)">
            <summary>
            Invokes a <see cref="T:System.Func`1" /> until the result of <paramref name="func" /> is <see langword="true" /> or <paramref name="timeout" /> has been reached. If <paramref name="func" /> does not return <see langword="true" /> in this timeframe, <see langword="false" /> is returned, otherwise, <see langword="true" />.
            </summary>
            <param name="func">The <see cref="T:System.Func`1" /> to be tested.</param>
            <param name="timeout">A <see cref="T:System.TimeSpan" /> value representing the total time for <paramref name="func" /> to be tested.</param>
            <returns>
            <see langword="true" />, if <paramref name="func" /> returned <see langword="true" /> in the specified <paramref name="timeout" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Timeout(System.Func{System.Boolean},System.TimeSpan,System.TimeSpan)">
            <summary>
            Invokes a <see cref="T:System.Func`1" /> until the result of <paramref name="func" /> is <see langword="true" /> or <paramref name="timeout" /> has been reached. If <paramref name="func" /> does not return <see langword="true" /> in this timeframe, <see langword="false" /> is returned, otherwise, <see langword="true" />. Between each call of <paramref name="func" /> that returns <see langword="false" />, a delay is waited.
            </summary>
            <param name="func">The <see cref="T:System.Func`1" /> to be tested.</param>
            <param name="timeout">A <see cref="T:System.TimeSpan" /> value representing the total time for <paramref name="func" /> to be tested.</param>
            <param name="delay">A <see cref="T:System.TimeSpan" /> value representing the wait period between each call of <paramref name="func" /> that returns <see langword="false" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="func" /> returned <see langword="true" /> in the specified <paramref name="timeout" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.EqualsAny``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Compares <paramref name="obj" /> with the objects in the specified collection and returns <see langword="true" />, if <paramref name="obj" /> is equal to any of the values.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> and the value collection.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the objects in <paramref name="values" />.</param>
            <param name="values">The value collection to be compared to <paramref name="obj" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is equal to any of the values in the specified collection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.EqualsAny``1(``0,``0[])">
            <summary>
            Compares <paramref name="obj" /> with the objects in the specified collection and returns <see langword="true" />, if <paramref name="obj" /> is equal to any of the values.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> and the value collection.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the objects in <paramref name="values" />.</param>
            <param name="values">The value collection to be compared to <paramref name="obj" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is equal to any of the values in the specified collection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.EqualsNone``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Compares <paramref name="obj" /> with the objects in the specified collection and returns <see langword="true" />, if <paramref name="obj" /> is equal to none of the values.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> and the value collection.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the objects in <paramref name="values" />.</param>
            <param name="values">The value collection to be compared to <paramref name="obj" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is equal to none of the values in the specified collection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.EqualsNone``1(``0,``0[])">
            <summary>
            Compares <paramref name="obj" /> with the objects in the specified collection and returns <see langword="true" />, if <paramref name="obj" /> is equal to none of the values.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> and the value collection.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the objects in <paramref name="values" />.</param>
            <param name="values">The value collection to be compared to <paramref name="obj" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is equal to none of the values in the specified collection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.EqualsAll``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Compares <paramref name="obj" /> with the objects in the specified collection and returns <see langword="true" />, if <paramref name="obj" /> is equal to all of the values.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> and the value collection.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the objects in <paramref name="values" />.</param>
            <param name="values">The value collection to be compared to <paramref name="obj" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is equal to all of the values in the specified collection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.EqualsAll``1(``0,``0[])">
            <summary>
            Compares <paramref name="obj" /> with the objects in the specified collection and returns <see langword="true" />, if <paramref name="obj" /> is equal to all of the values.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> and the value collection.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the objects in <paramref name="values" />.</param>
            <param name="values">The value collection to be compared to <paramref name="obj" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is equal to all of the values in the specified collection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.IsType(System.Object,System.Type)">
            <summary>
            Returns <see langword="true" />, if <paramref name="obj" /> is an <see cref="T:System.Object" /> of the specified <see cref="T:System.Type" />. If <paramref name="obj" /> is not of the specified <see cref="T:System.Type" />, or <paramref name="obj" /> is of a <see cref="T:System.Type" /> that inherits <paramref name="type" />, <see langword="false" /> is returned.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to check.</param>
            <param name="type">The <see cref="T:System.Type" /> to compare to the type of <paramref name="obj" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is an <see cref="T:System.Object" /> of the specified <see cref="T:System.Type" />;
            <see langword="false" />, If <paramref name="obj" /> is not of the specified <see cref="T:System.Type" />, or <paramref name="obj" /> is of a <see cref="T:System.Type" /> that inherits <paramref name="type" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.IsType``1(System.Object)">
            <summary>
            Returns <see langword="true" />, if <paramref name="obj" /> is an <see cref="T:System.Object" /> of the specified type. If <paramref name="obj" /> is not of the specified type, or <paramref name="obj" /> is of a type that inherits <typeparamref name="T" />, <see langword="false" /> is returned.
            </summary>
            <typeparam name="T">The type to compare to the type of <paramref name="obj" />.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to check.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is an <see cref="T:System.Object" /> of the specified type;
            <see langword="false" />, If <paramref name="obj" /> is not of the specified type, or <paramref name="obj" /> is of a type that inherits <typeparamref name="T" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.TypeEquals(System.Object,System.Object)">
            <summary>
            Returns <see langword="true" />, if <paramref name="objA" /> and <paramref name="objB" /> are of the same <see cref="T:System.Type" />, of if both objects are <see langword="null" />.
            </summary>
            <param name="objA">The first <see cref="T:System.Object" /> to compare.</param>
            <param name="objB">The second <see cref="T:System.Object" /> to compare.</param>
            <returns>
            <see langword="true" />, if <paramref name="objA" /> and <paramref name="objB" /> are of the same <see cref="T:System.Type" />, of if both objects are <see langword="null" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.MeasureTime(System.Action)">
            <summary>
            Invokes an <see cref="T:System.Action" /> and measures the time until <paramref name="action" /> returned.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
            <returns>
            A <see cref="T:System.TimeSpan" /> value with the time <paramref name="action" /> took to return.
            </returns>
        </member>
        <member name="T:BytecodeApi.Create">
            <summary>
            Provides support for creation and generation of generic objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Create.Array``1(System.Int32,``0)">
            <summary>
            Creates an <see cref="T:System.Array" /> of the specified type and initialized each element with the specified value.
            </summary>
            <typeparam name="T">The type of the created <see cref="T:System.Array" />.</typeparam>
            <param name="length">The number of elements of the <see cref="T:System.Array" />.</param>
            <param name="value">The value that is assigned to each element of the <see cref="T:System.Array" />.</param>
            <returns>
            A new <see cref="T:System.Array" /> with the specified length, where each element is initialized with <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.Array``1(System.Int32,System.Func{System.Int32,``0})">
            <summary>
            Creates an <see cref="T:System.Array" /> of the specified type and initialized each element with a value that is retrieved from <paramref name="valueSelector" />.
            </summary>
            <typeparam name="T">The type of the created <see cref="T:System.Array" />.</typeparam>
            <param name="length">The number of elements of the <see cref="T:System.Array" />.</param>
            <param name="valueSelector">A <see cref="T:System.Func`2" /> to retrieve new values for the <see cref="T:System.Array" /> based on the given index.</param>
            <returns>
            A new <see cref="T:System.Array" /> with the specified length, where each element is initialized with a value that is retrieved from <paramref name="valueSelector" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.Enumerable``1(System.Int32,System.Func{System.Int32,``0})">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the specified type and returns values that are retrieved from <paramref name="valueSelector" />.
            </summary>
            <typeparam name="T">The type of the created <see cref="T:System.Collections.Generic.IEnumerable`1" />.</typeparam>
            <param name="count">The number of elements to return.</param>
            <param name="valueSelector">A <see cref="T:System.Func`2" /> to retrieve new values for the <see cref="T:System.Collections.Generic.IEnumerable`1" /> based on the given index.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the specified number of elements, where each element is initialized with a value that is retrieved from <paramref name="valueSelector" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.Guid">
            <summary>
            Generates a new <see cref="T:System.Guid" /> using the <see cref="F:BytecodeApi.GuidFormat.Default" /> format.
            </summary>
            <returns>
            A new <see cref="T:System.Guid" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.Guid(BytecodeApi.GuidFormat)">
            <summary>
            Generates a new <see cref="T:System.Guid" /> using the specified format.
            </summary>
            <param name="format">The <see cref="T:BytecodeApi.GuidFormat" /> to be used for <see cref="T:System.String" /> formatting.</param>
            <returns>
            A new <see cref="T:System.Guid" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.HexadecimalString(System.Int32)">
            <summary>
            Generates a new <see cref="T:System.String" /> with random hexadecimal charaters. The value of <paramref name="size" /> specifies the amount of bytes to be generated. A <see cref="T:System.String" /> with a length of <paramref name="size" /> * 2 is returned.
            </summary>
            <param name="size">A <see cref="T:System.Int32" /> value specifying the amount of bytes to be generated.</param>
            <returns>
            A new <see cref="T:System.String" /> with random hexadecimal charaters, where the value of <paramref name="size" /> specifies the amount of bytes to be generated. The returned <see cref="T:System.String" /> has a length of <paramref name="size" /> * 2.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.AlphaNumericString(System.Int32)">
            <summary>
            Generates a new <see cref="T:System.String" /> with random characters, where each character is either a digit, a lowercase letter or an uppercase letter.
            </summary>
            <param name="length">The length of the generated <see cref="T:System.String" />.</param>
            <returns>
            A new <see cref="T:System.String" /> with random characters.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.AlphaNumericString(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Generates a new <see cref="T:System.String" /> with random characters, where each character can be either a digit, a lowercase letter, an uppercase letter, or a combination of those. At least one of these parameters needs to be <see langword="true" />.
            </summary>
            <param name="length">The length of the generated <see cref="T:System.String" />.</param>
            <param name="digits"><see langword="true" /> to include digits.</param>
            <param name="lowerCase"><see langword="true" /> to include lowercase letters.</param>
            <param name="upperCase"><see langword="true" /> to include uppercase letters.</param>
            <returns>
            A new <see cref="T:System.String" /> with random characters.
            </returns>
        </member>
        <member name="T:BytecodeApi.SpecialStringComparisons">
            <summary>
            Specifies flags for a custom <see cref="T:System.String" /> comparison.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparisons.None">
            <summary>
            Specifies the default <see cref="T:System.String" /> comparison as in <see cref="M:System.String.Compare(System.String,System.String)" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparisons.NullAndEmptyEqual">
            <summary>
            Specifies that strings which are either <see langword="null" /> or <see cref="F:System.String.Empty" /> are treated equally.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparisons.Trim">
            <summary>
            Specifies that leading and trailing whitespaces are ignored during comparison.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparisons.IgnoreCase">
            <summary>
            Specifies that character casing is ignored during comparison.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparisons.IgnoreWhiteSpaces">
            <summary>
            Specifies that all whitespace characters are ignored during comparison.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparisons.IgnorePunctuation">
            <summary>
            Specifies that all punctuation characters are ignored during comparison.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparisons.IgnoreSymbols">
            <summary>
            Specifies that all symbol characters are ignored during comparison.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparisons.Natural">
            <summary>
            Specifies that a natural <see cref="T:System.String" /> comparison is used.
            </summary>
        </member>
        <member name="T:BytecodeApi.ConvertObjectOptions">
            <summary>
            Specifies flags for the conversion of objects, used by the <see cref="M:BytecodeApi.CSharp.ConvertObject``1(System.Object,``0,BytecodeApi.ConvertObjectOptions)" /> method.
            </summary>
        </member>
        <member name="F:BytecodeApi.ConvertObjectOptions.None">
            <summary>
            Specifies that no conversion flags are defined.
            </summary>
        </member>
        <member name="F:BytecodeApi.ConvertObjectOptions.IgnoreCase">
            <summary>
            Specifies that character casing of property and field names is not considered.
            </summary>
        </member>
        <member name="F:BytecodeApi.ConvertObjectOptions.IgnoreProperties">
            <summary>
            Specifies that properties are not copied from the source <see cref="T:System.Object" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.ConvertObjectOptions.IgnoreFields">
            <summary>
            Specifies that fields are not copied from the source <see cref="T:System.Object" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.ConvertObjectOptions.PropertiesToFields">
            <summary>
            Specifies that properties from the source <see cref="T:System.Object" /> are copied to fields of the destination <see cref="T:System.Object" /> in addition to its properties, as long as the name matches.
            </summary>
        </member>
        <member name="F:BytecodeApi.ConvertObjectOptions.FieldsToProperties">
            <summary>
            Specifies that fields from the source <see cref="T:System.Object" /> are copied to properties of the destination <see cref="T:System.Object" /> in addition to its fields, as long as the name matches.
            </summary>
        </member>
        <member name="F:BytecodeApi.ConvertObjectOptions.NonPublic">
            <summary>
            Specifies that non-public properties or fields are included.
            </summary>
        </member>
        <member name="F:BytecodeApi.ConvertObjectOptions.Static">
            <summary>
            Specifies that static properties or fields are included.
            </summary>
        </member>
        <member name="T:BytecodeApi.Validate">
            <summary>
            Validates <see cref="T:System.String" /> objects against specific data type representations.
            </summary>
        </member>
        <member name="M:BytecodeApi.Validate.OnlyLetters(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> that only contains upper and lowercase letters.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.OnlyDigits(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> that only contains numeric digits.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.AlphaNumeric(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> that only contains upper and lowercase letters as well as numeric digits.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.Hexadecimal(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> that only contains upper and lowercase hexadecimal digits.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.Base64String(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> that is a base64 string, only containing the characters a-zA-Z0-9+/= and has the correct amount of padding characters.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.Path(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> that is a path.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.FileName(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> that is a filename.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.Url(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> that is a web URL with http or https scheme.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.EmailAddress(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> that is an email address.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.IPAddress(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> that is an <see cref="T:System.Net.IPAddress" />. Both IPv4 and IPv6 values are validated.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.MacAddress(System.String,System.Byte[]@)">
            <summary>
            Validates a <see cref="T:System.String" /> that is a MAC address in EUI-48 or EUI-64 format. When this method returns, a <see cref="T:System.Byte" />[] is stored in <paramref name="result" />, representing the parsed address bytes.
            <para>Allowed formats are: 000000000000, 00:00:00:00:00:00, 00-00-00-00-00-00, 000.000.000.000 and 0000.0000.0000 for EUI-48; and 0000000000000000, 00:00:00:00:00:00:00:00, 00-00-00-00-00-00-00-00 and 0000.0000.0000.0000 for EUI-64.</para>
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <param name="result">When this method returns, contains the address bytes as a <see cref="T:System.Byte" />[].</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.PhoneNumber(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> that is a phone number.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.CreditCardNumber(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> that is a credit card number.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.TypeNaming">
            <summary>
            Specifies the naming convention of a <see cref="T:System.Type" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.TypeNaming.CSharp">
            <summary>
            The namespace is omitted and the C# type name is used for built-in types.
            <para>Examples: int, DateTime</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.TypeNaming.TypeName">
            <summary>
            The namespace is omitted and the .NET Framework type name is used.
            <para>Examples: Int32, DateTime</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.TypeNaming.FullName">
            <summary>
            The full type name including namespace is used.
            <para>Examples: System.Int32, System.DateTime</para>
            </summary>
        </member>
        <member name="T:BytecodeApi.DateTimePart">
            <summary>
            Specifies the subset of a <see cref="T:System.DateTime" /> representation.
            </summary>
        </member>
        <member name="F:BytecodeApi.DateTimePart.Full">
            <summary>
            The full <see cref="T:System.DateTime" /> is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.DateTimePart.DateTimeWithSeconds">
            <summary>
            The date and time including seconds of the <see cref="T:System.DateTime" /> object is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.DateTimePart.DateTime">
            <summary>
            The date and time excluding seconds of the <see cref="T:System.DateTime" /> object is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.DateTimePart.Date">
            <summary>
            The date part excluding time information of the <see cref="T:System.DateTime" /> object is used. This is equal to the <see cref="P:System.DateTime.Date" /> property.
            </summary>
        </member>
        <member name="F:BytecodeApi.DateTimePart.YearMonth">
            <summary>
            The year and month of the <see cref="T:System.DateTime" /> object is used. <see cref="P:System.DateTime.Day" /> is set to 1.
            </summary>
        </member>
        <member name="F:BytecodeApi.DateTimePart.Year">
            <summary>
            The year is used. <see cref="P:System.DateTime.Month" /> and <see cref="P:System.DateTime.Day" /> are both set to 1.
            </summary>
        </member>
        <member name="T:BytecodeApi.GuidFormat">
            <summary>
            Specifies the format for a <see cref="T:System.Guid" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.GuidFormat.Default">
            <summary>
            The <see cref="T:System.Guid" /> is displayed using 32 hexadecimal digits.
            <para>Example: 00000000000000000000000000000000</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.GuidFormat.Hyphens">
            <summary>
            The <see cref="T:System.Guid" /> is displayed using 32 hexadecimal digits separated by hyphens.
            <para>Example: 00000000-0000-0000-0000-000000000000</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.GuidFormat.Braces">
            <summary>
            The <see cref="T:System.Guid" /> is displayed using 32 hexadecimal digits separated by hyphens, enclosed in braces.
            <para>Example: {00000000-0000-0000-0000-000000000000}</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.GuidFormat.Parentheses">
            <summary>
            The <see cref="T:System.Guid" /> is displayed using 32 hexadecimal digits separated by hyphens, enclosed in parentheses.
            <para>Example: (00000000-0000-0000-0000-000000000000)</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.GuidFormat.Hexadecimal">
            <summary>
            The <see cref="T:System.Guid" /> is displayed with four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces.
            <para>Example: {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</para>
            </summary>
        </member>
        <member name="T:BytecodeApi.StringCasing">
            <summary>
            Specifies the character casing of a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.StringCasing.Lower">
            <summary>
            The <see cref="T:System.String" /> is lowercase.
            <para>Example: hello world</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.StringCasing.Upper">
            <summary>
            The <see cref="T:System.String" /> is uppercase.
            <para>Example: HELLO WORLD</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.StringCasing.CamelCase">
            <summary>
            The <see cref="T:System.String" /> is camel case, where the first character and each character following a whitespace or punctuation mark is uppercase. All other characters are lowercase.
            <para>Example: Hello World</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.StringCasing.LowerSnakeCase">
            <summary>
            The <see cref="T:System.String" /> is snake case. All characters are lowercase. Punctuation marks are removed and sequences of one or multiple whitespace characters are replaced by a single underscore.
            <para>Example: hello_world</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.StringCasing.UpperSnakeCase">
            <summary>
            The <see cref="T:System.String" /> is snake case. All characters are uppercase. Punctuation marks are removed and sequences of one or multiple whitespace characters are replaced by a single underscore.
            <para>Example: HELLO_WORLD</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.StringCasing.LowerKebabCase">
            <summary>
            The <see cref="T:System.String" /> is kebab case. All characters are lowercase. Punctuation marks are removed and sequences of one or multiple whitespace characters are replaced by a single dash.
            <para>Example: hello-world</para>
            </summary>
        </member>
        <member name="F:BytecodeApi.StringCasing.UpperKebabCase">
            <summary>
            The <see cref="T:System.String" /> is kebab case. All characters are uppercase. Punctuation marks are removed and sequences of one or multiple whitespace characters are replaced by a single dash.
            <para>Example: HELLO-WORLD</para>
            </summary>
        </member>
    </members>
</doc>
